<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="">
  <file path="application/tests/databaseinsertionreaddelete.test.php" hash="d8fee3a4e07b0fe9ab1c9528a9467e21" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>TestdatabaseInsertionReadDelete</name>
      <full_name>\TestdatabaseInsertionReadDelete</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>testinsertReadDelete</name>
        <full_name>testinsertReadDelete</full_name>
        <docblock line="5">
          <description>Test that a given condition is met.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/tests/databaseinsertionreaddelete.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \TestdatabaseInsertionReadDelete</error>
    </parse_markers>
  </file>
  <file path="application/tests/example.test.php" hash="3633c2c04d0de7f22c6ba15d4a3e06f5" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>TestExample</name>
      <full_name>\TestExample</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>testSomethingIsTrue</name>
        <full_name>testSomethingIsTrue</full_name>
        <docblock line="5">
          <description>Test that a given condition is met.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/tests/example.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \TestExample</error>
    </parse_markers>
  </file>
  <file path="application/language/sr/pagination.php" hash="9af25baef1662b6d57b1fdcf51459845" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/sr/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/sr/validation.php" hash="9dc7510ba500b5f01fa8bc391c229079" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/sr/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/he/pagination.php" hash="b5ce5db8133f576e5eb9a8cb6e05ae6d" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/he/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/he/validation.php" hash="79868b6adc939b5363f54a6d379f9a9d" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/he/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/pl/pagination.php" hash="bdb3b65253714ef13b3eabc553f83c3d" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/pl/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/pl/validation.php" hash="c183a729f899501faab432af09ed3f97" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/pl/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/nl/pagination.php" hash="3d75c67df46497ba55d64b73c3b38af6" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/nl/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/nl/validation.php" hash="7f5bb2295d416c7c13c8b62d3df3a73d" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/nl/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/fr/pagination.php" hash="52baccaeefa7d589ed11f5cefd95364f" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/fr/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/fr/validation.php" hash="c55a1158bcd65dc8c47ad965e7fa7b36" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/fr/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/hu/pagination.php" hash="63d495ab46845e7028ca09a5aefe00ff" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/hu/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/hu/validation.php" hash="b45d4054d7466ac31bad974d956a113f" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/hu/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/ru/pagination.php" hash="32bf583f6bf091a46f81ca8d293ef5f0" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/ru/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/ru/validation.php" hash="4d3f45d2eb2e2f2fc4ca7e1e39fc5fc4" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/ru/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/el/pagination.php" hash="3bdd2e3b588b1423fbd195cdf8d4e715" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/el/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/el/validation.php" hash="18e90e83c5f9a4c405d8f5ef6ea14a04" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/el/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/ar/pagination.php" hash="aca92ede8566d226653859e041ba74b0" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/ar/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/ar/validation.php" hash="b1afbe1ac78ab9e0e5e4a2ac3217a1c2" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/ar/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/it/pagination.php" hash="bdc60c1eac8d0caa678a548854889dc8" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/it/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/it/validation.php" hash="53ed16701ed3ece64883bb0d8cf70956" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/it/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/de/pagination.php" hash="417d7c278b5250e3022c2c6f84df9cec" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/de/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/de/validation.php" hash="dea435d680d6c323c1cea18de3d1c6c8" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/de/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/pt/pagination.php" hash="a3f2e60d5fcc80a18e03caabb83e3784" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/pt/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/pt/validation.php" hash="5d1aa096c5607fb165dfcf0efdacf29b" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/pt/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/fi/pagination.php" hash="2f3bbb8c76c2edf5818daf8d3c01e7f9" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/fi/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/fi/validation.php" hash="3da50d6f676db9249a74a85d99a3266b" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/fi/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/tr/pagination.php" hash="33ba616f8e2d5178275e741eb0c7f06c" package="Language">
    <docblock line="3">
      <description>Laravel - A PHP Framework For Web Artisans</description>
      <long-description></long-description>
      <tag line="3" name="package" description="Language"/>
      <tag line="3" name="version" description="3.2.3"/>
      <tag line="3" name="author" description="Sinan Eldem &lt;sinan@sinaneldem.com.tr&gt;"/>
      <tag line="3" name="link" description="http://sinaneldem.com.tr" link="http://sinaneldem.com.tr"/>
    </docblock>
  </file>
  <file path="application/language/tr/validation.php" hash="11ae06909c314612aac32f00b2b5e8a7" package="Language">
    <docblock line="3">
      <description>Laravel - A PHP Framework For Web Artisans</description>
      <long-description></long-description>
      <tag line="3" name="package" description="Language"/>
      <tag line="3" name="version" description="3.2.3"/>
      <tag line="3" name="author" description="Sinan Eldem &lt;sinan@sinaneldem.com.tr&gt;"/>
      <tag line="3" name="link" description="http://sinaneldem.com.tr" link="http://sinaneldem.com.tr"/>
    </docblock>
  </file>
  <file path="application/language/sq/pagination.php" hash="543b74f8cdfe874cf728669f458a168d" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/sq/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/sq/validation.php" hash="274e8057deb7bbcf63636673e71f4d62" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/sq/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/da/pagination.php" hash="9e48530b246bf5b8dc65809c09f06cc5" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/da/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/da/validation.php" hash="811ad0afd44e4d852eb4ba40ee73a3f3" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/da/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/id/pagination.php" hash="43cfa5401b6d390cecd55a66eb36c33a" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/id/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/id/validation.php" hash="b2727ba39d143d0f33be15733bf3f2c0" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/id/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/bg/pagination.php" hash="f36cfc5e8db0a9ee8a8939e1c54fcd17" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/bg/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/bg/validation.php" hash="51d81d17271a3f245d484437cc66fa83" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/bg/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/ja/pagination.php" hash="32b2fd39111a50fdc469f6ee5d374d09" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/ja/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/ja/validation.php" hash="e44881b18da55c0c09df267ae117d3ef" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/ja/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/sv/pagination.php" hash="fcaa5abd36906c318a1642e891edd38d" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/sv/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/sv/validation.php" hash="a62e2ee0bcce32e1b50e8eb6cac7fcaa" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/sv/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/language/en/pagination.php" hash="a532f1f7053353ce1bb6b63cda5f508f" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/en/pagination.php</error>
    </parse_markers>
  </file>
  <file path="application/language/en/validation.php" hash="9ebb7bf5b5f77657639407b9d21cd482" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/language/en/validation.php</error>
    </parse_markers>
  </file>
  <file path="application/bundles.php" hash="9d0543d51673595389d944170497a1be" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/bundles.php</error>
    </parse_markers>
  </file>
  <file path="application/models/role_account.php" hash="de0d84e5100522cfb57341212d998772" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Eloquent</extends>
      <name>Role_Account</name>
      <full_name>\Role_Account</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="5" package="Default">
        <name>account</name>
        <full_name>account</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>role</name>
        <full_name>role</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/models/role_account.php</error>
      <error line="3" code="50000">No DocBlock was found for \Role_Account</error>
      <error line="5" code="50010">No DocBlock was found for method account()</error>
      <error line="10" code="50010">No DocBlock was found for method role()</error>
    </parse_markers>
  </file>
  <file path="application/models/flag.php" hash="52185163fc9e6a9d9b39430128e2eaa6" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Eloquent</extends>
      <name>Flag</name>
      <full_name>\Flag</full_name>
      <property final="false" static="true" visibility="public" line="5" namespace="global" package="Default">
        <name>$timestamps</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="7" package="Default">
        <name>account</name>
        <full_name>account</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="12" package="Default">
        <name>listing</name>
        <full_name>listing</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/models/flag.php</error>
      <error line="3" code="50000">No DocBlock was found for \Flag</error>
      <error line="5" code="50018">No DocBlock was found for property $timestamps</error>
      <error line="7" code="50010">No DocBlock was found for method account()</error>
      <error line="12" code="50010">No DocBlock was found for method listing()</error>
    </parse_markers>
  </file>
  <file path="application/models/surveyresult.php" hash="206b0ca2c1199264c8d6745c4849f909" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Eloquent</extends>
      <name>Surveyresult</name>
      <full_name>\Surveyresult</full_name>
      <property final="false" static="true" visibility="public" line="5" namespace="global" package="Default">
        <name>$timestamps</name>
        <default>false</default>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/models/surveyresult.php</error>
      <error line="3" code="50000">No DocBlock was found for \Surveyresult</error>
      <error line="5" code="50018">No DocBlock was found for property $timestamps</error>
    </parse_markers>
  </file>
  <file path="application/models/account.php" hash="1a6840bb782cd95606aa7181688674fc" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Eloquent</extends>
      <name>Account</name>
      <full_name>\Account</full_name>
      <property final="false" static="true" visibility="public" line="5" namespace="global" package="Default">
        <name>$timestamps</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="6" package="Default">
        <name>locations</name>
        <full_name>locations</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="11" package="Default">
        <name>wishlistitems</name>
        <full_name>wishlistitems</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>role</name>
        <full_name>role</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/models/account.php</error>
      <error line="3" code="50000">No DocBlock was found for \Account</error>
      <error line="5" code="50018">No DocBlock was found for property $timestamps</error>
      <error line="6" code="50010">No DocBlock was found for method locations()</error>
      <error line="11" code="50010">No DocBlock was found for method wishlistitems()</error>
      <error line="16" code="50010">No DocBlock was found for method role()</error>
    </parse_markers>
  </file>
  <file path="application/models/categorie.php" hash="82c85a706258126fd143e8a91ea03cb8" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Eloquent</extends>
      <name>Categorie</name>
      <full_name>\Categorie</full_name>
      <property final="false" static="true" visibility="public" line="5" namespace="global" package="Default">
        <name>$timestamps</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="6" package="Default">
        <name>listings</name>
        <full_name>listings</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/models/categorie.php</error>
      <error line="3" code="50000">No DocBlock was found for \Categorie</error>
      <error line="5" code="50018">No DocBlock was found for property $timestamps</error>
      <error line="6" code="50010">No DocBlock was found for method listings()</error>
    </parse_markers>
  </file>
  <file path="application/models/listing.php" hash="d9bc2ea82f40f31eb25fa2b59a1f24d5" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Eloquent</extends>
      <name>Listing</name>
      <full_name>\Listing</full_name>
      <property final="false" static="true" visibility="public" line="5" namespace="global" package="Default">
        <name>$timestamps</name>
        <default>true</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="7" package="Default">
        <name>images</name>
        <full_name>images</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="12" package="Default">
        <name>location</name>
        <full_name>location</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>categorie</name>
        <full_name>categorie</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/models/listing.php</error>
      <error line="3" code="50000">No DocBlock was found for \Listing</error>
      <error line="5" code="50018">No DocBlock was found for property $timestamps</error>
      <error line="7" code="50010">No DocBlock was found for method images()</error>
      <error line="12" code="50010">No DocBlock was found for method location()</error>
      <error line="16" code="50010">No DocBlock was found for method categorie()</error>
    </parse_markers>
  </file>
  <file path="application/models/staticpage.php" hash="fb8d7a8dbdcf7454a7ac58686341da8e" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Eloquent</extends>
      <name>Staticpage</name>
      <full_name>\Staticpage</full_name>
      <property final="false" static="true" visibility="public" line="5" namespace="global" package="Default">
        <name>$timestamps</name>
        <default>false</default>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/models/staticpage.php</error>
      <error line="3" code="50000">No DocBlock was found for \Staticpage</error>
      <error line="5" code="50018">No DocBlock was found for property $timestamps</error>
    </parse_markers>
  </file>
  <file path="application/models/image.php" hash="45833eaca411d750d5ef9d1d62a8b18a" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Eloquent</extends>
      <name>Image</name>
      <full_name>\Image</full_name>
      <property final="false" static="true" visibility="public" line="5" namespace="global" package="Default">
        <name>$timestamps</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="6" package="Default">
        <name>listing</name>
        <full_name>listing</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/models/image.php</error>
      <error line="3" code="50000">No DocBlock was found for \Image</error>
      <error line="5" code="50018">No DocBlock was found for property $timestamps</error>
      <error line="6" code="50010">No DocBlock was found for method listing()</error>
    </parse_markers>
  </file>
  <file path="application/models/wishlistitem.php" hash="c49673287b0f0514aed7faccd9b6a132" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Eloquent</extends>
      <name>WishlistItem</name>
      <full_name>\WishlistItem</full_name>
      <property final="false" static="true" visibility="public" line="5" namespace="global" package="Default">
        <name>$timestamps</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="6" package="Default">
        <name>account</name>
        <full_name>account</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/models/wishlistitem.php</error>
      <error line="3" code="50000">No DocBlock was found for \WishlistItem</error>
      <error line="5" code="50018">No DocBlock was found for property $timestamps</error>
      <error line="6" code="50010">No DocBlock was found for method account()</error>
    </parse_markers>
  </file>
  <file path="application/models/location.php" hash="a1a550cb6b0aa5cb357265885dcb1df2" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Eloquent</extends>
      <name>Location</name>
      <full_name>\Location</full_name>
      <property final="false" static="true" visibility="public" line="5" namespace="global" package="Default">
        <name>$timestamps</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="6" package="Default">
        <name>account</name>
        <full_name>account</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="11" package="Default">
        <name>listings</name>
        <full_name>listings</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/models/location.php</error>
      <error line="3" code="50000">No DocBlock was found for \Location</error>
      <error line="5" code="50018">No DocBlock was found for property $timestamps</error>
      <error line="6" code="50010">No DocBlock was found for method account()</error>
      <error line="11" code="50010">No DocBlock was found for method listings()</error>
    </parse_markers>
  </file>
  <file path="application/libraries/emailer.php" hash="cf16a603919429f544d6b9e9b675949f" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Emailer</name>
      <full_name>\Emailer</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="8" package="Default">
        <name>signUpConfirmation</name>
        <full_name>signUpConfirmation</full_name>
        <argument line="8">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="20" package="Default">
        <name>surveyEmail</name>
        <full_name>surveyEmail</full_name>
        <argument line="20">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
        <argument line="20">
          <name>$listing</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="32" package="Default">
        <name>wishlistResults</name>
        <full_name>wishlistResults</full_name>
        <argument line="32">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/libraries/emailer.php</error>
      <error line="3" code="50000">No DocBlock was found for \Emailer</error>
      <error line="8" code="50010">No DocBlock was found for method signUpConfirmation()</error>
      <error line="20" code="50010">No DocBlock was found for method surveyEmail()</error>
      <error line="32" code="50010">No DocBlock was found for method wishlistResults()</error>
    </parse_markers>
  </file>
  <file path="application/libraries/mail.class.php" hash="ab494a71f21474e62ebfeadbd74d5e1f" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Emailer</name>
      <full_name>\Emailer</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="8" package="Default">
        <name>signUpConfirmation</name>
        <full_name>signUpConfirmation</full_name>
        <argument line="8">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="16" package="Default">
        <name>deletedDueToFlags</name>
        <full_name>deletedDueToFlags</full_name>
        <argument line="16">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
        <argument line="16">
          <name>$listing</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="25" package="Default">
        <name>deletedDueToExpiry</name>
        <full_name>deletedDueToExpiry</full_name>
        <argument line="25">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
        <argument line="25">
          <name>$listing</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="33" package="Default">
        <name>surveyEmail</name>
        <full_name>surveyEmail</full_name>
        <argument line="33">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="41" package="Default">
        <name>wishlistResults</name>
        <full_name>wishlistResults</full_name>
        <argument line="41">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/libraries/mail.class.php</error>
      <error line="3" code="50000">No DocBlock was found for \Emailer</error>
      <error line="8" code="50010">No DocBlock was found for method signUpConfirmation()</error>
      <error line="16" code="50010">No DocBlock was found for method deletedDueToFlags()</error>
      <error line="25" code="50010">No DocBlock was found for method deletedDueToExpiry()</error>
      <error line="33" code="50010">No DocBlock was found for method surveyEmail()</error>
      <error line="41" code="50010">No DocBlock was found for method wishlistResults()</error>
    </parse_markers>
  </file>
  <file path="application/controllers/statistics.php" hash="6990083e9b47f076a0f986b18d8736dd" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Base_Controller</extends>
      <name>Statistics_Controller</name>
      <full_name>\Statistics_Controller</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="5" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="Default">
        <name>action_reply</name>
        <full_name>action_reply</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/controllers/statistics.php</error>
      <error line="3" code="50000">No DocBlock was found for \Statistics_Controller</error>
      <error line="5" code="50010">No DocBlock was found for method action_index()</error>
      <error line="23" code="50010">No DocBlock was found for method action_reply()</error>
    </parse_markers>
  </file>
  <file path="application/controllers/account.php" hash="e58ede90081f6e21cf99ba8ed0f66102" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Base_Controller</extends>
      <name>Account_Controller</name>
      <full_name>\Account_Controller</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="6" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="Default">
        <name>action_email</name>
        <full_name>action_email</full_name>
        <argument line="27">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="Default">
        <name>action_id</name>
        <full_name>action_id</full_name>
        <argument line="43">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="Default">
        <name>action_create</name>
        <full_name>action_create</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Default">
        <name>action_delete</name>
        <full_name>action_delete</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="Default">
        <name>action_edit</name>
        <full_name>action_edit</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="253" package="Default">
        <name>action_login</name>
        <full_name>action_login</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="280" package="Default">
        <name>action_logout</name>
        <full_name>action_logout</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="290" package="Default">
        <name>action_flaggedlistings</name>
        <full_name>action_flaggedlistings</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="324" package="Default">
        <name>action_users</name>
        <full_name>action_users</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="340" package="Default">
        <name>action_block</name>
        <full_name>action_block</full_name>
        <argument line="340">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="349" package="Default">
        <name>action_unblock</name>
        <full_name>action_unblock</full_name>
        <argument line="349">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="358" package="Default">
        <name>action_search</name>
        <full_name>action_search</full_name>
        <argument line="358">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="384" package="Default">
        <name>action_mylistings</name>
        <full_name>action_mylistings</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="413" package="Default">
        <name>action_mylocations</name>
        <full_name>action_mylocations</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/controllers/account.php</error>
      <error line="3" code="50000">No DocBlock was found for \Account_Controller</error>
      <error line="6" code="50010">No DocBlock was found for method action_index()</error>
      <error line="27" code="50010">No DocBlock was found for method action_email()</error>
      <error line="43" code="50010">No DocBlock was found for method action_id()</error>
      <error line="58" code="50010">No DocBlock was found for method action_create()</error>
      <error line="83" code="50010">No DocBlock was found for method action_delete()</error>
      <error line="99" code="50010">No DocBlock was found for method action_edit()</error>
      <error line="253" code="50010">No DocBlock was found for method action_login()</error>
      <error line="280" code="50010">No DocBlock was found for method action_logout()</error>
      <error line="290" code="50010">No DocBlock was found for method action_flaggedlistings()</error>
      <error line="324" code="50010">No DocBlock was found for method action_users()</error>
      <error line="340" code="50010">No DocBlock was found for method action_block()</error>
      <error line="349" code="50010">No DocBlock was found for method action_unblock()</error>
      <error line="358" code="50010">No DocBlock was found for method action_search()</error>
      <error line="384" code="50010">No DocBlock was found for method action_mylistings()</error>
      <error line="413" code="50010">No DocBlock was found for method action_mylocations()</error>
    </parse_markers>
  </file>
  <file path="application/controllers/base.php" hash="1b4c59c63c02a39e73159b42e0a61d5b" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Controller</extends>
      <name>Base_Controller</name>
      <full_name>\Base_Controller</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="12" package="Default">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="5">
          <description>Catch-all method for requests that can't be matched.</description>
          <long-description></long-description>
          <tag line="5" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="5" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="5" name="return" description="" type="\Response">
            <type by_reference="false">\Response</type>
          </tag>
        </docblock>
        <argument line="12">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="12">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/controllers/base.php</error>
      <error line="3" code="50000">No DocBlock was found for \Base_Controller</error>
      <error line="17" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="application/controllers/listing.php" hash="e57ad9ec64adb23330d95f38ba0297f1" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Base_Controller</extends>
      <name>Listing_Controller</name>
      <full_name>\Listing_Controller</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="6" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Default">
        <name>action_id</name>
        <full_name>action_id</full_name>
        <argument line="83">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="129" package="Default">
        <name>action_test</name>
        <full_name>action_test</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="132" package="Default">
        <name>action_create</name>
        <full_name>action_create</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="203" package="Default">
        <name>action_addImages</name>
        <full_name>action_addImages</full_name>
        <argument line="203">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="253" package="Default">
        <name>action_delete</name>
        <full_name>action_delete</full_name>
        <argument line="253">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="289" package="Default">
        <name>action_edit</name>
        <full_name>action_edit</full_name>
        <argument line="289">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="367" package="Default">
        <name>action_flag</name>
        <full_name>action_flag</full_name>
        <argument line="367">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="445" package="Default">
        <name>action_unflag</name>
        <full_name>action_unflag</full_name>
        <argument line="445">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="468" package="Default">
        <name>action_imgUpload</name>
        <full_name>action_imgUpload</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="512" package="Default">
        <name>action_deleteExpired</name>
        <full_name>action_deleteExpired</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/controllers/listing.php</error>
      <error line="3" code="50000">No DocBlock was found for \Listing_Controller</error>
      <error line="6" code="50010">No DocBlock was found for method action_index()</error>
      <error line="83" code="50010">No DocBlock was found for method action_id()</error>
      <error line="129" code="50010">No DocBlock was found for method action_test()</error>
      <error line="132" code="50010">No DocBlock was found for method action_create()</error>
      <error line="203" code="50010">No DocBlock was found for method action_addImages()</error>
      <error line="253" code="50010">No DocBlock was found for method action_delete()</error>
      <error line="289" code="50010">No DocBlock was found for method action_edit()</error>
      <error line="367" code="50010">No DocBlock was found for method action_flag()</error>
      <error line="445" code="50010">No DocBlock was found for method action_unflag()</error>
      <error line="468" code="50010">No DocBlock was found for method action_imgUpload()</error>
      <error line="512" code="50010">No DocBlock was found for method action_deleteExpired()</error>
    </parse_markers>
  </file>
  <file path="application/controllers/image.php" hash="95057c697864345d14eda184cfd5f002" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Base_Controller</extends>
      <name>Image_Controller</name>
      <full_name>\Image_Controller</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="5" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>action_id</name>
        <full_name>action_id</full_name>
        <argument line="10">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="Default">
        <name>action_add</name>
        <full_name>action_add</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="Default">
        <name>action_remove</name>
        <full_name>action_remove</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="Default">
        <name>action_upload</name>
        <full_name>action_upload</full_name>
        <argument line="67">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="97" package="Default">
        <name>action_delete</name>
        <full_name>action_delete</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/controllers/image.php</error>
      <error line="3" code="50000">No DocBlock was found for \Image_Controller</error>
      <error line="5" code="50010">No DocBlock was found for method action_index()</error>
      <error line="10" code="50010">No DocBlock was found for method action_id()</error>
      <error line="19" code="50010">No DocBlock was found for method action_add()</error>
      <error line="36" code="50010">No DocBlock was found for method action_remove()</error>
      <error line="67" code="50010">No DocBlock was found for method action_upload()</error>
      <error line="97" code="50010">No DocBlock was found for method action_delete()</error>
    </parse_markers>
  </file>
  <file path="application/controllers/about.php" hash="7f6627b1808399da1fd86594631364a2" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Base_Controller</extends>
      <name>About_Controller</name>
      <full_name>\About_Controller</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="5" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>action_view</name>
        <full_name>action_view</full_name>
        <argument line="16">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="Default">
        <name>action_phpinfo</name>
        <full_name>action_phpinfo</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Default">
        <name>action_edit</name>
        <full_name>action_edit</full_name>
        <argument line="32">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="Default">
        <name>action_create</name>
        <full_name>action_create</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="154" package="Default">
        <name>action_delete</name>
        <full_name>action_delete</full_name>
        <argument line="154">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/controllers/about.php</error>
      <error line="3" code="50000">No DocBlock was found for \About_Controller</error>
      <error line="5" code="50010">No DocBlock was found for method action_index()</error>
      <error line="16" code="50010">No DocBlock was found for method action_view()</error>
      <error line="27" code="50010">No DocBlock was found for method action_phpinfo()</error>
      <error line="32" code="50010">No DocBlock was found for method action_edit()</error>
      <error line="94" code="50010">No DocBlock was found for method action_create()</error>
      <error line="154" code="50010">No DocBlock was found for method action_delete()</error>
    </parse_markers>
  </file>
  <file path="application/controllers/home.php" hash="bb25df9d27fd634eadfd78762e9b9b5e" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Base_Controller</extends>
      <name>Home_Controller</name>
      <full_name>\Home_Controller</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="5" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="12" package="Default">
        <name>action_terms</name>
        <full_name>action_terms</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/controllers/home.php</error>
      <error line="3" code="50000">No DocBlock was found for \Home_Controller</error>
      <error line="5" code="50010">No DocBlock was found for method action_index()</error>
      <error line="12" code="50010">No DocBlock was found for method action_terms()</error>
    </parse_markers>
  </file>
  <file path="application/controllers/location.php" hash="d0c9f64decd23be80650c1bf888fefea" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Base_Controller</extends>
      <name>Location_Controller</name>
      <full_name>\Location_Controller</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="6" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="11" package="Default">
        <name>action_id</name>
        <full_name>action_id</full_name>
        <argument line="11">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="Default">
        <name>action_add</name>
        <full_name>action_add</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="Default">
        <name>action_edit</name>
        <full_name>action_edit</full_name>
        <argument line="56">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="Default">
        <name>action_delete</name>
        <full_name>action_delete</full_name>
        <argument line="103">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/controllers/location.php</error>
      <error line="3" code="50000">No DocBlock was found for \Location_Controller</error>
      <error line="6" code="50010">No DocBlock was found for method action_index()</error>
      <error line="11" code="50010">No DocBlock was found for method action_id()</error>
      <error line="19" code="50010">No DocBlock was found for method action_add()</error>
      <error line="56" code="50010">No DocBlock was found for method action_edit()</error>
      <error line="103" code="50010">No DocBlock was found for method action_delete()</error>
    </parse_markers>
  </file>
  <file path="application/controllers/wishlist.php" hash="9715239ed73f539e33b339ae31b96bc0" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Base_Controller</extends>
      <name>Wishlist_Controller</name>
      <full_name>\Wishlist_Controller</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="5" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="Default">
        <name>action_id</name>
        <full_name>action_id</full_name>
        <argument line="71">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Default">
        <name>action_add</name>
        <full_name>action_add</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="Default">
        <name>action_delete</name>
        <full_name>action_delete</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="113" package="Default">
        <name>action_sendEmails</name>
        <full_name>action_sendEmails</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/controllers/wishlist.php</error>
      <error line="3" code="50000">No DocBlock was found for \Wishlist_Controller</error>
      <error line="5" code="50010">No DocBlock was found for method action_index()</error>
      <error line="71" code="50010">No DocBlock was found for method action_id()</error>
      <error line="83" code="50010">No DocBlock was found for method action_add()</error>
      <error line="103" code="50010">No DocBlock was found for method action_delete()</error>
      <error line="113" code="50010">No DocBlock was found for method action_sendEmails()</error>
    </parse_markers>
  </file>
  <file path="application/controllers/contact.php" hash="43da03a623b45be51df5f1d81bce1fb9" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Base_Controller</extends>
      <name>Contact_Controller</name>
      <full_name>\Contact_Controller</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="5" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/controllers/contact.php</error>
      <error line="3" code="50000">No DocBlock was found for \Contact_Controller</error>
      <error line="5" code="50010">No DocBlock was found for method action_index()</error>
    </parse_markers>
  </file>
  <file path="application/views/master.blade.php" hash="09d4a482cc3db69d8a6c3dcba2383c0a" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/master.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/upload.blade.php" hash="b704e68107b6f0ebc6a52b3c62362ad3" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/upload.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/account/details/content.blade.php" hash="afc3f095b71fa58a711ea43f6940a759" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/account/details/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/account/details/index.blade.php" hash="045477f289254fbd9face6802c0367de" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/account/details/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/account/wishlist/content.blade.php" hash="e8310a693d7069041d0f1c635cf2c7bb" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/account/wishlist/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/account/wishlist/index.blade.php" hash="7e0e1f3ee7986f2eb83b988c514b66ff" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/account/wishlist/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/account/users/content.blade.php" hash="9f1996a9c73adc898d69ff95233b79dc" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/account/users/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/account/users/index.blade.php" hash="ac7616fe8b47c6a14040918098f55bf4" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/account/users/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/account/manage_locations/content.blade.php" hash="fbbeca34323f5b3d72d5b99d34bcae32" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/account/manage_locations/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/account/manage_locations/index.blade.php" hash="5ee3b98e7f6361e67cf551c5c311262c" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/account/manage_locations/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/account/flagged_listings/content.blade.php" hash="492d19e9b6334736179d7764c437e943" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/account/flagged_listings/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/account/flagged_listings/index.blade.php" hash="9b324415f547fa856b2a3c18d2638933" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/account/flagged_listings/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/account/manage_listings/content.blade.php" hash="3182dd14791877e653901e31d3610228" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/account/manage_listings/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/account/manage_listings/index.blade.php" hash="b6715686c8dbd2005076c2589f44eeae" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/account/manage_listings/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/account/partials/sidebar.blade.php" hash="0a2e277d7223d02516fa7bd61ba2f8c9" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/account/partials/sidebar.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/about/create/content.blade.php" hash="5538b7619a5bfda3a75f6b8340332a67" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/about/create/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/about/create/index.blade.php" hash="a1c91c194b71566ea0dd9cce18ea0caa" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/about/create/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/about/edit/content.blade.php" hash="ad5bd4f7c2e842ecab6808e8c78fea34" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/about/edit/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/about/edit/index.blade.php" hash="4e8214f0e4b7f66fe715425feb9a7593" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/about/edit/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/about/content.blade.php" hash="9eb3ff9c901b617f80f7ce5650e159b4" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/about/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/about/index.blade.php" hash="93c7d7f5df80829a2279d632bc0064be" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/about/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/home/tou/content.blade.php" hash="8916503e151914ed50b3b6815737a597" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/home/tou/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/home/tou/index.blade.php" hash="4c8480a28e8385e838f918d5f447b237" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/home/tou/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/home/content.blade.php" hash="0df3e28da849ce2ccbd8eabe7fa39329" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/home/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/home/index.blade.php" hash="c78be18a5c61715daea5f7c2433e0547" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/home/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/location/edit/content.blade.php" hash="1957857776465897522696c35fa4380e" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/location/edit/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/location/edit/index.blade.php" hash="c7c466e4b51433a5efc05083f9c2a427" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/location/edit/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/error/403.php" hash="e1c7f6b5c059327da84e3ac81015ae6d" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/error/403.php</error>
    </parse_markers>
  </file>
  <file path="application/views/error/500.php" hash="9bfe4c8da1e1729a2f78fc37980c6b72" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/error/500.php</error>
    </parse_markers>
  </file>
  <file path="application/views/error/404.php" hash="93badcabec64cfe803bfef9c08cb08f0" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/error/404.php</error>
    </parse_markers>
  </file>
  <file path="application/views/listing/create/content.blade.php" hash="3574226c79abfd58ebf30fe9f7abbd1b" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/listing/create/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/listing/create/index.blade.php" hash="32f3bd3cffbe0882214ac7e10359c6dc" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/listing/create/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/listing/search/content.blade.php" hash="0782d0405e5690c71552a91050f979cf" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/listing/search/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/listing/search/index.blade.php" hash="b69dd8d052d018c6d0ba148488e03a1b" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/listing/search/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/listing/edit/content.blade.php" hash="596d3b0bd91060a55816f11f9606dbd8" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/listing/edit/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/listing/edit/index.blade.php" hash="328c65f7463e247f502995eb05e58f5d" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/listing/edit/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/listing/content.blade.php" hash="7527deadf7d31279f63c4119d0591735" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/listing/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/listing/addimages/content.blade.php" hash="ec2ef8c06d2ca27221e9dc3dd62236e8" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/listing/addimages/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/listing/addimages/index.blade.php" hash="daadd99cc4c8f40250f11fa4c25f3306" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/listing/addimages/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/listing/index.blade.php" hash="530398d627b90e83167b0869f9a79ec2" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/listing/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/listing/browse/content.blade.php" hash="c403efc1e83d14de8799b30323ff4cdb" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/listing/browse/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/listing/browse/index.blade.php" hash="026a383e10d92129d06c94953b6f8307" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/listing/browse/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/contact/content.blade.php" hash="58ea971d530416ed9d7e848c8128d64b" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/contact/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/contact/index.blade.php" hash="168356cc8fe1592cd07e3955f2b6810e" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/contact/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/statistics/reply/content.blade.php" hash="7bf6a280e543271f4373f54470bb9789" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/statistics/reply/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/statistics/reply/index.blade.php" hash="8cb0362457632e743e60a5feca37a91e" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/statistics/reply/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/statistics/content.blade.php" hash="f17b8b5bd16af8cee25d5d3c772cda75" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/statistics/content.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/statistics/index.blade.php" hash="be7c1a09b135bc9514ceee80875697c0" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/statistics/index.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/partials/footer.blade.php" hash="bcf29584903421627b2e79cf9927f45a" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/partials/footer.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/partials/forms/signup.blade.php" hash="1dc6b6b6b69884c9d6a692c0d72c6910" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/partials/forms/signup.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/partials/forms/search.blade.php" hash="a972a72d7d40eb641fec40791ee5c376" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/partials/forms/search.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/partials/forms/fileUpload.blade.php" hash="d019a4f7b666c494a9e23e3517bc4380" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/partials/forms/fileUpload.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/partials/forms/login.blade.php" hash="fa06d5dea4e77c9f7c1fe4db2ff29087" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/partials/forms/login.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/partials/loginbar.blade.php" hash="106800824cefb83854eac0060235fd7f" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/partials/loginbar.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/views/partials/header.blade.php" hash="62b545271268cddaaf21708da398b4f9" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/views/partials/header.blade.php</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_03_13_013629_foreign_keys.php" hash="8de6f4c90392fac9e44daca3e421295b" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Foreign_Keys</name>
      <full_name>\Foreign_Keys</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="32">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="32" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_03_13_013629_foreign_keys.php</error>
      <error line="3" code="50000">No DocBlock was found for \Foreign_Keys</error>
    </parse_markers>
  </file>
  <file path="application/migrations/inserts/2013_02_27_210846_insert_accounts.php" hash="571ed86d77739549581a28ab770eb3e8" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Insert_Accounts</name>
      <full_name>\Insert_Accounts</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="23">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="23" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/inserts/2013_02_27_210846_insert_accounts.php</error>
      <error line="3" code="50000">No DocBlock was found for \Insert_Accounts</error>
    </parse_markers>
  </file>
  <file path="application/migrations/inserts/2013_02_27_212519_insert_locations.php" hash="aeeedd6c43a230ad496a846a2e794faa" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Insert_Locations</name>
      <full_name>\Insert_Locations</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="28">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="28" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/inserts/2013_02_27_212519_insert_locations.php</error>
      <error line="3" code="50000">No DocBlock was found for \Insert_Locations</error>
    </parse_markers>
  </file>
  <file path="application/migrations/inserts/2013_02_27_213554_insert_listings.php" hash="e4aad6bdbd02a6436552976c9dcc14e5" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Insert_Listings</name>
      <full_name>\Insert_Listings</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="35">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="35" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/inserts/2013_02_27_213554_insert_listings.php</error>
      <error line="3" code="50000">No DocBlock was found for \Insert_Listings</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_02_26_013053_create_survey_result.php" hash="62eb21de441c42bbb5e9e4161ee7cab3" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Create_Survey_Result</name>
      <full_name>\Create_Survey_Result</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="22">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="22" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_02_26_013053_create_survey_result.php</error>
      <error line="3" code="50000">No DocBlock was found for \Create_Survey_Result</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_03_17_000901_addflagforeign.php" hash="f10938f061759274564c7d86b2569560" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Addflagforeign</name>
      <full_name>\Addflagforeign</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="19">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="19" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_03_17_000901_addflagforeign.php</error>
      <error line="3" code="50000">No DocBlock was found for \Addflagforeign</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_03_13_232334_insert_pics.php" hash="f8eacedc9c515988f865e8be6435066e" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Insert_Pics</name>
      <full_name>\Insert_Pics</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="26">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="26" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_03_13_232334_insert_pics.php</error>
      <error line="3" code="50000">No DocBlock was found for \Insert_Pics</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_02_26_010938_create_listing.php" hash="44054f935d16702a74f80a7edfef905a" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Create_Listing</name>
      <full_name>\Create_Listing</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="27">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="27" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_02_26_010938_create_listing.php</error>
      <error line="3" code="50000">No DocBlock was found for \Create_Listing</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_03_13_231037_insert_locations.php" hash="2dca4db614a771919037eb5ea2de7399" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Insert_Locations</name>
      <full_name>\Insert_Locations</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="28">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="28" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_03_13_231037_insert_locations.php</error>
      <error line="3" code="50000">No DocBlock was found for \Insert_Locations</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_03_17_000656_createflag.php" hash="75aa1552c51fcc47625ec1ea8f954f87" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Createflag</name>
      <full_name>\Createflag</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="20">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="20" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_03_17_000656_createflag.php</error>
      <error line="3" code="50000">No DocBlock was found for \Createflag</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_03_13_230009_insert_accounts.php" hash="5163e6d8d68a0e54042c603860517b5f" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Insert_Accounts</name>
      <full_name>\Insert_Accounts</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="22">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="22" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_03_13_230009_insert_accounts.php</error>
      <error line="3" code="50000">No DocBlock was found for \Insert_Accounts</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_02_26_004656_create_account.php" hash="3d63bb34aedd7e8889e93319fd237866" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Create_Account</name>
      <full_name>\Create_Account</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="26">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="26" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_02_26_004656_create_account.php</error>
      <error line="3" code="50000">No DocBlock was found for \Create_Account</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_02_26_010351_create_location.php" hash="a994838bd221eb668efc71258d224802" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Create_Location</name>
      <full_name>\Create_Location</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="23">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="23" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_02_26_010351_create_location.php</error>
      <error line="3" code="50000">No DocBlock was found for \Create_Location</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_02_26_014832_create_wishlist_match.php" hash="d1c6ff7de1fcbc38f9614d8b62b00202" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Create_Wishlist_Match</name>
      <full_name>\Create_Wishlist_Match</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="19">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="19" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_02_26_014832_create_wishlist_match.php</error>
      <error line="3" code="50000">No DocBlock was found for \Create_Wishlist_Match</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_02_26_013628_create_categories.php" hash="7cae19fae32ec11a0ebba6c50ae83276" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Create_Categories</name>
      <full_name>\Create_Categories</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="60" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="55">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="55" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_02_26_013628_create_categories.php</error>
      <error line="3" code="50000">No DocBlock was found for \Create_Categories</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_03_17_002139_createstaticpages.php" hash="313449fb5c37f447e8a371b8a779d614" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Createstaticpages</name>
      <full_name>\Createstaticpages</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="20">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="20" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_03_17_002139_createstaticpages.php</error>
      <error line="3" code="50000">No DocBlock was found for \Createstaticpages</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_02_26_012803_create_image.php" hash="b242096e4d04de58a66e6e91d4480c33" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Create_Image</name>
      <full_name>\Create_Image</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="20">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="20" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_02_26_012803_create_image.php</error>
      <error line="3" code="50000">No DocBlock was found for \Create_Image</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_02_26_012319_create_wishlist_item.php" hash="a66f8be1629d099e5125ad84af9414a2" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Create_Wishlist_Item</name>
      <full_name>\Create_Wishlist_Item</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="21">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="21" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_02_26_012319_create_wishlist_item.php</error>
      <error line="3" code="50000">No DocBlock was found for \Create_Wishlist_Item</error>
    </parse_markers>
  </file>
  <file path="application/migrations/2013_03_13_231557_insert_listings.php" hash="c2d2b18a704d9c3f6464d449441e820a" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Insert_Listings</name>
      <full_name>\Insert_Listings</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="31">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="31" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/migrations/2013_03_13_231557_insert_listings.php</error>
      <error line="3" code="50000">No DocBlock was found for \Insert_Listings</error>
    </parse_markers>
  </file>
  <file path="application/routes.php" hash="9dc0f50892d6763d53d2ee701ea1579e" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/routes.php</error>
    </parse_markers>
  </file>
  <file path="application/start.php" hash="83fa3e8c0aea9e30c2dd1a65305e4e85" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/start.php</error>
    </parse_markers>
  </file>
  <file path="application/config/error.php" hash="1fe8a09b8d527a3263305772976f0f65" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/config/error.php</error>
    </parse_markers>
  </file>
  <file path="application/config/application.php" hash="9e577120bd838b4c6810fa9c8a857e92" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/config/application.php</error>
    </parse_markers>
  </file>
  <file path="application/config/session.php" hash="15eec2d9a84b47941d6d5bdc3bf43d9f" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/config/session.php</error>
    </parse_markers>
  </file>
  <file path="application/config/cache.php" hash="c0e8ccd096f91365f2ba737c5b697f94" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/config/cache.php</error>
    </parse_markers>
  </file>
  <file path="application/config/strings.php" hash="913207fb3cfd2513eda3ad8a7972eb89" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/config/strings.php</error>
    </parse_markers>
  </file>
  <file path="application/config/database.php" hash="c1cf174da645f842b1af0b1c94d9cbca" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/config/database.php</error>
    </parse_markers>
  </file>
  <file path="application/config/mimes.php" hash="5a254dd77d2be2eb3cac1165415f38f6" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/config/mimes.php</error>
    </parse_markers>
  </file>
  <file path="application/config/auth.php" hash="029b608b97f29128d588672658faf532" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file application/config/auth.php</error>
    </parse_markers>
  </file>
  <file path="public/js/ckeditor/samples/sample_posteddata.php" hash="68baaf5b2802815ea64a61cc6ae819bf" package="Default">
    <include line="16" type="Include" package="Default">
      <name>assets/posteddata.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file public/js/ckeditor/samples/sample_posteddata.php</error>
    </parse_markers>
  </file>
  <file path="public/js/ckeditor/samples/assets/posteddata.php" hash="2689eed072b38c17e86a28f157078fc6" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file public/js/ckeditor/samples/assets/posteddata.php</error>
    </parse_markers>
  </file>
  <file path="public/index.php" hash="071fe1ea617e0caea7b54f783e731881" package="Laravel">
    <docblock line="2">
      <description>Laravel - A PHP Framework For Web Artisans</description>
      <long-description></long-description>
      <tag line="2" name="package" description="Laravel"/>
      <tag line="2" name="version" description="3.2.13"/>
      <tag line="2" name="author" description="Taylor Otwell &lt;taylorotwell@gmail.com&gt;"/>
      <tag line="2" name="link" description="http://laravel.com" link="http://laravel.com"/>
    </docblock>
    <include line="24" type="Require" package="Default">
      <name>../paths.php</name>
    </include>
    <include line="34" type="Require" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="14" package="Laravel">
      <name>LARAVEL_START</name>
      <full_name>\LARAVEL_START</full_name>
      <value>microtime(true)</value>
    </constant>
  </file>
  <file path="bundles/multup/multup.php" hash="a446dedfae6574f40be10677ff17f93c" package="Default">
    <class final="false" abstract="false" namespace="global" line="14" package="Default">
      <extends/>
      <name>Multup</name>
      <full_name>\Multup</full_name>
      <property final="false" static="false" visibility="private" line="19" namespace="global" package="Default">
        <name>$image</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="24" namespace="global" package="Default">
        <name>$rules</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="29" namespace="global" package="Default">
        <name>$random</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="global" package="Default">
        <name>$path</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="39" namespace="global" package="Default">
        <name>$input</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="44" namespace="global" package="Default">
        <name>$random_length</name>
        <default>32</default>
      </property>
      <property final="false" static="false" visibility="private" line="49" namespace="global" package="Default">
        <name>$random_cb</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="55" namespace="global" package="Default">
        <name>$image_sizes</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="61" namespace="global" package="Default">
        <name>$upload_callback</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="67" namespace="global" package="Default">
        <name>$upload_callback_args</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="69">
          <description>Instantiates the Multup</description>
          <long-description></long-description>
          <tag line="69" name="param" description="The file array provided by Laravel's Input::file('field_name') or a path to a file" type="mixed" variable="$file">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$input</name>
          <default></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$rules</name>
          <default></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$random</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="90" package="Default">
        <name>open</name>
        <full_name>open</full_name>
        <docblock line="81">
          <description>Static call, Laravel style.</description>
          <long-description>&lt;p&gt;Returns a new Multup object, allowing for chainable calls&lt;/p&gt;</long-description>
          <tag line="81" name="param" description="name of the file to upload" type="string" variable="$input">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="param" description="laravel style validation rules string" type="string" variable="$rules">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="param" description="relative to /public/ to move the images if valid" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="param" description="Whether or not to randomize the filename, the filename will be set to a 32 character string if true" type="bool" variable="$random">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="81" name="return" description="" type="\Multup">
            <type by_reference="false">\Multup</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$input</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$rules</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$random</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="Default">
        <name>set_length</name>
        <full_name>set_length</full_name>
        <argument line="99">
          <name>$len</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="Default">
        <name>upload</name>
        <full_name>upload</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="155" package="Default">
        <name>upload_image</name>
        <full_name>upload_image</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="203" package="Default">
        <name>generate_random_filename</name>
        <full_name>generate_random_filename</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="211" package="Default">
        <name>filename_callback</name>
        <full_name>filename_callback</full_name>
        <argument line="211">
          <name>$func</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="224" package="Default">
        <name>after_upload</name>
        <full_name>after_upload</full_name>
        <argument line="224">
          <name>$cb</name>
          <default></default>
          <type/>
        </argument>
        <argument line="224">
          <name>$args</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="244" package="Default">
        <name>sizes</name>
        <full_name>sizes</full_name>
        <argument line="244">
          <name>$sizes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="262" package="Default">
        <name>post_upload_process</name>
        <full_name>post_upload_process</full_name>
        <argument line="262">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/multup/multup.php</error>
      <error line="14" code="50000">No DocBlock was found for \Multup</error>
      <error line="19" code="50018">No DocBlock was found for property $image</error>
      <error line="24" code="50018">No DocBlock was found for property $rules</error>
      <error line="29" code="50018">No DocBlock was found for property $random</error>
      <error line="34" code="50018">No DocBlock was found for property $path</error>
      <error line="39" code="50018">No DocBlock was found for property $input</error>
      <error line="44" code="50018">No DocBlock was found for property $random_length</error>
      <error line="49" code="50018">No DocBlock was found for property $random_cb</error>
      <error line="55" code="50018">No DocBlock was found for property $image_sizes</error>
      <error line="61" code="50018">No DocBlock was found for property $upload_callback</error>
      <error line="67" code="50018">No DocBlock was found for property $upload_callback_args</error>
      <error line="69" code="50014">Name of argument $input does not match with the DocBlock's name $file in __construct()</error>
      <error line="69" code="50015">Argument $rules is missing from the Docblock of __construct()</error>
      <error line="69" code="50015">Argument $path is missing from the Docblock of __construct()</error>
      <error line="69" code="50015">Argument $random is missing from the Docblock of __construct()</error>
      <notice line="69" code="50013">Parameter $file could not be found in __construct()</notice>
      <error line="99" code="50010">No DocBlock was found for method set_length()</error>
      <error line="118" code="50010">No DocBlock was found for method upload()</error>
      <error line="155" code="50010">No DocBlock was found for method upload_image()</error>
      <error line="203" code="50010">No DocBlock was found for method generate_random_filename()</error>
      <error line="211" code="50010">No DocBlock was found for method filename_callback()</error>
      <error line="224" code="50010">No DocBlock was found for method after_upload()</error>
      <error line="244" code="50010">No DocBlock was found for method sizes()</error>
      <error line="262" code="50010">No DocBlock was found for method post_upload_process()</error>
    </parse_markers>
  </file>
  <file path="bundles/multup/libraries/resize.php" hash="dcc2e8eb26ef2d1e6279c08a041e7dcd" package="Default">
    <class final="false" abstract="false" namespace="Multup" line="12" package="Default">
      <extends/>
      <name>Resize</name>
      <full_name>\Multup\Resize</full_name>
      <property final="false" static="false" visibility="private" line="18" namespace="Multup" package="Default">
        <name>$width</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="24" namespace="Multup" package="Default">
        <name>$new_width</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="30" namespace="Multup" package="Default">
        <name>$height</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="36" namespace="Multup" package="Default">
        <name>$new_height</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="Multup" package="Default">
        <name>$option</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="48" namespace="Multup" package="Default">
        <name>$image_resized</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Multup" line="56" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <argument line="56">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$sizes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Multup" line="83" package="Default">
        <name>do_resize</name>
        <full_name>do_resize</full_name>
        <docblock line="76">
          <description>Resizes and/or crops an image</description>
          <long-description></long-description>
          <tag line="76" name="param" description="resource or filepath" type="mixed" variable="$image">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="76" name="param" description="where to save the resized image" type="\Multup\strung" variable="$save_path">
            <type by_reference="false">\Multup\strung</type>
          </tag>
          <tag line="76" name="param" description="(0-100) $quality" type="int" variable="$image_quality">
            <type by_reference="false">int</type>
          </tag>
          <tag line="76" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$image</name>
          <default></default>
          <type/>
        </argument>
        <argument line="83">
          <name>$save_path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="83">
          <name>$image_quality</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Multup" line="159" package="Default">
        <name>open_image</name>
        <full_name>open_image</full_name>
        <docblock line="154">
          <description>Open a file, detect its mime-type and create an image resrource from it.</description>
          <long-description></long-description>
          <tag line="154" name="param" description="Attributes of file from the $_FILES array" type="array" variable="$file">
            <type by_reference="false">array</type>
          </tag>
          <tag line="154" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="159">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Multup" line="192" package="Default">
        <name>get_dimensions</name>
        <full_name>get_dimensions</full_name>
        <docblock line="185">
          <description>Return the image dimentions based on the option that was chosen.</description>
          <long-description></long-description>
          <tag line="185" name="param" description="The width of the image" type="int" variable="$new_width">
            <type by_reference="false">int</type>
          </tag>
          <tag line="185" name="param" description="The height of the image" type="int" variable="$new_height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="185" name="param" description="Either exact, portrait, landscape, auto or crop." type="string" variable="$option">
            <type by_reference="false">string</type>
          </tag>
          <tag line="185" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="192">
          <name>$new_width</name>
          <default></default>
          <type/>
        </argument>
        <argument line="192">
          <name>$new_height</name>
          <default></default>
          <type/>
        </argument>
        <argument line="192">
          <name>$option</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Multup" line="236" package="Default">
        <name>get_size_by_fixed_height</name>
        <full_name>get_size_by_fixed_height</full_name>
        <docblock line="231">
          <description>Returns the width based on the image height</description>
          <long-description></long-description>
          <tag line="231" name="param" description="The height of the image" type="int" variable="$new_height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="231" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="236">
          <name>$new_height</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Multup" line="249" package="Default">
        <name>get_size_by_fixed_width</name>
        <full_name>get_size_by_fixed_width</full_name>
        <docblock line="244">
          <description>Returns the height based on the image width</description>
          <long-description></long-description>
          <tag line="244" name="param" description="The width of the image" type="int" variable="$new_width">
            <type by_reference="false">int</type>
          </tag>
          <tag line="244" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="249">
          <name>$new_width</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Multup" line="263" package="Default">
        <name>get_size_by_auto</name>
        <full_name>get_size_by_auto</full_name>
        <docblock line="257">
          <description>Checks to see if an image is portrait or landscape and resizes accordingly.</description>
          <long-description></long-description>
          <tag line="257" name="param" description="The width of the image" type="int" variable="$new_width">
            <type by_reference="false">int</type>
          </tag>
          <tag line="257" name="param" description="The height of the image" type="int" variable="$new_height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="257" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="263">
          <name>$new_width</name>
          <default></default>
          <type/>
        </argument>
        <argument line="263">
          <name>$new_height</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Multup" line="310" package="Default">
        <name>get_size_by_fit</name>
        <full_name>get_size_by_fit</full_name>
        <docblock line="304">
          <description>Resizes an image so it fits entirely inside the given dimensions.</description>
          <long-description></long-description>
          <tag line="304" name="param" description="The width of the image" type="int" variable="$new_width">
            <type by_reference="false">int</type>
          </tag>
          <tag line="304" name="param" description="The height of the image" type="int" variable="$new_height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="304" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="310">
          <name>$new_width</name>
          <default></default>
          <type/>
        </argument>
        <argument line="310">
          <name>$new_height</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Multup" line="331" package="Default">
        <name>get_optimal_crop</name>
        <full_name>get_optimal_crop</full_name>
        <docblock line="324">
          <description>Attempts to find the best way to crop.</description>
          <long-description>&lt;p&gt;Whether crop is based on the
image being portrait or landscape.&lt;/p&gt;</long-description>
          <tag line="324" name="param" description="The width of the image" type="int" variable="$new_width">
            <type by_reference="false">int</type>
          </tag>
          <tag line="324" name="param" description="The height of the image" type="int" variable="$new_height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="324" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="331">
          <name>$new_width</name>
          <default></default>
          <type/>
        </argument>
        <argument line="331">
          <name>$new_height</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Multup" line="359" package="Default">
        <name>crop</name>
        <full_name>crop</full_name>
        <docblock line="351">
          <description>Crops an image from its center</description>
          <long-description></long-description>
          <tag line="351" name="param" description="The width of the image" type="int" variable="$optimal_width">
            <type by_reference="false">int</type>
          </tag>
          <tag line="351" name="param" description="The height of the image" type="int" variable="$optimal_height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="351" name="param" description="The new width" type="int" variable="$new_width">
            <type by_reference="false">int</type>
          </tag>
          <tag line="351" name="param" description="The new height" type="int" variable="$new_height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="351" name="return" description="" type="true">
            <type by_reference="false">true</type>
          </tag>
        </docblock>
        <argument line="359">
          <name>$optimal_width</name>
          <default></default>
          <type/>
        </argument>
        <argument line="359">
          <name>$optimal_height</name>
          <default></default>
          <type/>
        </argument>
        <argument line="359">
          <name>$new_width</name>
          <default></default>
          <type/>
        </argument>
        <argument line="359">
          <name>$new_height</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/multup/libraries/resize.php</error>
      <error line="12" code="50000">No DocBlock was found for \Multup\Resize</error>
      <error line="18" code="50018">No DocBlock was found for property $width</error>
      <error line="24" code="50018">No DocBlock was found for property $new_width</error>
      <error line="30" code="50018">No DocBlock was found for property $height</error>
      <error line="36" code="50018">No DocBlock was found for property $new_height</error>
      <error line="42" code="50018">No DocBlock was found for property $option</error>
      <error line="48" code="50018">No DocBlock was found for property $image_resized</error>
      <error line="56" code="50010">No DocBlock was found for method create()</error>
    </parse_markers>
  </file>
  <file path="bundles/multup/start.php" hash="397c10a4b7d7a9defe5aa153cfd0d836" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/multup/start.php</error>
    </parse_markers>
  </file>
  <file path="bundles/docs/libraries/markdown.php" hash="9c44ee5f9ebe7188022a582561613af4" package="Default">
    <include line="192" type="Include Once" package="Default">
      <name>smartypants.php</name>
    </include>
    <constant namespace="global" line="15" package="Default">
      <name>MARKDOWN_VERSION</name>
      <full_name>\MARKDOWN_VERSION</full_name>
      <value>"1.0.1o"</value>
    </constant>
    <constant namespace="global" line="16" package="Default">
      <name>MARKDOWNEXTRA_VERSION</name>
      <full_name>\MARKDOWNEXTRA_VERSION</full_name>
      <value>"1.2.5"</value>
    </constant>
    <constant namespace="global" line="24" package="Default">
      <name>MARKDOWN_EMPTY_ELEMENT_SUFFIX</name>
      <full_name>\MARKDOWN_EMPTY_ELEMENT_SUFFIX</full_name>
      <value>" /&gt;"</value>
    </constant>
    <constant namespace="global" line="27" package="Default">
      <name>MARKDOWN_TAB_WIDTH</name>
      <full_name>\MARKDOWN_TAB_WIDTH</full_name>
      <value>4</value>
    </constant>
    <constant namespace="global" line="30" package="Default">
      <name>MARKDOWN_FN_LINK_TITLE</name>
      <full_name>\MARKDOWN_FN_LINK_TITLE</full_name>
      <value>""</value>
    </constant>
    <constant namespace="global" line="31" package="Default">
      <name>MARKDOWN_FN_BACKLINK_TITLE</name>
      <full_name>\MARKDOWN_FN_BACKLINK_TITLE</full_name>
      <value>""</value>
    </constant>
    <constant namespace="global" line="34" package="Default">
      <name>MARKDOWN_FN_LINK_CLASS</name>
      <full_name>\MARKDOWN_FN_LINK_CLASS</full_name>
      <value>""</value>
    </constant>
    <constant namespace="global" line="35" package="Default">
      <name>MARKDOWN_FN_BACKLINK_CLASS</name>
      <full_name>\MARKDOWN_FN_BACKLINK_CLASS</full_name>
      <value>""</value>
    </constant>
    <constant namespace="global" line="43" package="Default">
      <name>MARKDOWN_WP_POSTS</name>
      <full_name>\MARKDOWN_WP_POSTS</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="44" package="Default">
      <name>MARKDOWN_WP_COMMENTS</name>
      <full_name>\MARKDOWN_WP_COMMENTS</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="50" package="Default">
      <name>MARKDOWN_PARSER_CLASS</name>
      <full_name>\MARKDOWN_PARSER_CLASS</full_name>
      <value>'MarkdownExtra_Parser'</value>
    </constant>
    <function namespace="global" line="52" package="Default">
      <name>Markdown</name>
      <full_name>\Markdown</full_name>
      <argument line="52">
        <name>$text</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="105" package="Default">
      <name>mdwp_MarkdownPost</name>
      <full_name>\mdwp_MarkdownPost</full_name>
      <argument line="105">
        <name>$text</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="142" package="Default">
      <name>mdwp_add_p</name>
      <full_name>\mdwp_add_p</full_name>
      <argument line="142">
        <name>$text</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="150" package="Default">
      <name>mdwp_strip_p</name>
      <full_name>\mdwp_strip_p</full_name>
      <argument line="150">
        <name>$t</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="152" package="Default">
      <name>mdwp_hide_tags</name>
      <full_name>\mdwp_hide_tags</full_name>
      <argument line="152">
        <name>$text</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="156" package="Default">
      <name>mdwp_show_tags</name>
      <full_name>\mdwp_show_tags</full_name>
      <argument line="156">
        <name>$text</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="165" package="Default">
      <name>identify_modifier_markdown</name>
      <full_name>\identify_modifier_markdown</full_name>
    </function>
    <function namespace="global" line="181" package="Default">
      <name>smarty_modifier_markdown</name>
      <full_name>\smarty_modifier_markdown</full_name>
      <argument line="181">
        <name>$text</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="194" package="Default">
      <extends/>
      <name>Textile</name>
      <full_name>\Textile</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="Default">
        <name>TextileThis</name>
        <full_name>TextileThis</full_name>
        <argument line="195">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
        <argument line="195">
          <name>$lite</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="195">
          <name>$encode</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="Default">
        <name>TextileRestricted</name>
        <full_name>TextileRestricted</full_name>
        <argument line="201">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
        <argument line="201">
          <name>$lite</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="201">
          <name>$noimage</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="205" package="Default">
        <name>blockLite</name>
        <full_name>blockLite</full_name>
        <argument line="205">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="215" package="Default">
      <extends/>
      <name>Markdown_Parser</name>
      <full_name>\Markdown_Parser</full_name>
      <property final="false" static="false" visibility="public" line="219" namespace="global" package="Default">
        <name>$nested_brackets_depth</name>
        <default>6</default>
      </property>
      <property final="false" static="false" visibility="public" line="220" namespace="global" package="Default">
        <name>$nested_brackets_re</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="222" namespace="global" package="Default">
        <name>$nested_url_parenthesis_depth</name>
        <default>4</default>
      </property>
      <property final="false" static="false" visibility="public" line="223" namespace="global" package="Default">
        <name>$nested_url_parenthesis_re</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="226" namespace="global" package="Default">
        <name>$escape_chars</name>
        <default>'\`*_{}[]()&gt;#+-.!'</default>
      </property>
      <property final="false" static="false" visibility="public" line="227" namespace="global" package="Default">
        <name>$escape_chars_re</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="230" namespace="global" package="Default">
        <name>$empty_element_suffix</name>
        <default>MARKDOWN_EMPTY_ELEMENT_SUFFIX</default>
      </property>
      <property final="false" static="false" visibility="public" line="231" namespace="global" package="Default">
        <name>$tab_width</name>
        <default>MARKDOWN_TAB_WIDTH</default>
      </property>
      <property final="false" static="false" visibility="public" line="234" namespace="global" package="Default">
        <name>$no_markup</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="public" line="235" namespace="global" package="Default">
        <name>$no_entities</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="public" line="238" namespace="global" package="Default">
        <name>$predef_urls</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="239" namespace="global" package="Default">
        <name>$predef_titles</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="267" namespace="global" package="Default">
        <name>$urls</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="268" namespace="global" package="Default">
        <name>$titles</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="269" namespace="global" package="Default">
        <name>$html_hashes</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="272" namespace="global" package="Default">
        <name>$in_anchor</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="public" line="338" namespace="global" package="Default">
        <name>$document_gamut</name>
        <default>array("stripLinkDefinitions" =&gt; 20, "runBasicBlockGamut" =&gt; 30)</default>
      </property>
      <property final="false" static="false" visibility="public" line="564" namespace="global" package="Default">
        <name>$block_gamut</name>
        <default>array("doHeaders" =&gt; 10, "doHorizontalRules" =&gt; 20, "doLists" =&gt; 40, "doCodeBlocks" =&gt; 50, "doBlockQuotes" =&gt; 60)</default>
      </property>
      <property final="false" static="false" visibility="public" line="626" namespace="global" package="Default">
        <name>$span_gamut</name>
        <default>array("parseSpan" =&gt; -30, "doImages" =&gt; 10, "doAnchors" =&gt; 20, "doAutoLinks" =&gt; 30, "encodeAmpsAndAngles" =&gt; 40, "doItalicsAndBold" =&gt; 50, "doHardBreaks" =&gt; 60)</default>
      </property>
      <property final="false" static="false" visibility="public" line="1031" namespace="global" package="Default">
        <name>$list_level</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="public" line="1145" namespace="global" package="Default">
        <name>$em_relist</name>
        <default>array('' =&gt; '(?:(?&lt;!\*)\*(?!\*)|(?&lt;!_)_(?!_))(?=\S|$)(?![\.,:;]\s)', '*' =&gt; '(?&lt;=\S|^)(?&lt;!\*)\*(?!\*)', '_' =&gt; '(?&lt;=\S|^)(?&lt;!_)_(?!_)')</default>
      </property>
      <property final="false" static="false" visibility="public" line="1150" namespace="global" package="Default">
        <name>$strong_relist</name>
        <default>array('' =&gt; '(?:(?&lt;!\*)\*\*(?!\*)|(?&lt;!_)__(?!_))(?=\S|$)(?![\.,:;]\s)', '**' =&gt; '(?&lt;=\S|^)(?&lt;!\*)\*\*(?!\*)', '__' =&gt; '(?&lt;=\S|^)(?&lt;!_)__(?!_)')</default>
      </property>
      <property final="false" static="false" visibility="public" line="1155" namespace="global" package="Default">
        <name>$em_strong_relist</name>
        <default>array('' =&gt; '(?:(?&lt;!\*)\*\*\*(?!\*)|(?&lt;!_)___(?!_))(?=\S|$)(?![\.,:;]\s)', '***' =&gt; '(?&lt;=\S|^)(?&lt;!\*)\*\*\*(?!\*)', '___' =&gt; '(?&lt;=\S|^)(?&lt;!_)___(?!_)')</default>
      </property>
      <property final="false" static="false" visibility="public" line="1160" namespace="global" package="Default">
        <name>$em_strong_prepared_relist</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="1615" namespace="global" package="Default">
        <name>$utf8_strlen</name>
        <default>'mb_strlen'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="242" package="Default">
        <name>Markdown_Parser</name>
        <full_name>Markdown_Parser</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="275" package="Default">
        <name>setup</name>
        <full_name>setup</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="288" package="Default">
        <name>teardown</name>
        <full_name>teardown</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="299" package="Default">
        <name>transform</name>
        <full_name>transform</full_name>
        <argument line="299">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="346" package="Default">
        <name>stripLinkDefinitions</name>
        <full_name>stripLinkDefinitions</full_name>
        <argument line="346">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="380" package="Default">
        <name>_stripLinkDefinitions_callback</name>
        <full_name>_stripLinkDefinitions_callback</full_name>
        <argument line="380">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="389" package="Default">
        <name>hashHTMLBlocks</name>
        <full_name>hashHTMLBlocks</full_name>
        <argument line="389">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="526" package="Default">
        <name>_hashHTMLBlocks_callback</name>
        <full_name>_hashHTMLBlocks_callback</full_name>
        <argument line="526">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="533" package="Default">
        <name>hashPart</name>
        <full_name>hashPart</full_name>
        <argument line="533">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
        <argument line="533">
          <name>$boundary</name>
          <default>'X'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="556" package="Default">
        <name>hashBlock</name>
        <full_name>hashBlock</full_name>
        <argument line="556">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="577" package="Default">
        <name>runBlockGamut</name>
        <full_name>runBlockGamut</full_name>
        <argument line="577">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="591" package="Default">
        <name>runBasicBlockGamut</name>
        <full_name>runBasicBlockGamut</full_name>
        <argument line="591">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="608" package="Default">
        <name>doHorizontalRules</name>
        <full_name>doHorizontalRules</full_name>
        <argument line="608">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="650" package="Default">
        <name>runSpanGamut</name>
        <full_name>runSpanGamut</full_name>
        <argument line="650">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="662" package="Default">
        <name>doHardBreaks</name>
        <full_name>doHardBreaks</full_name>
        <argument line="662">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="667" package="Default">
        <name>_doHardBreaks_callback</name>
        <full_name>_doHardBreaks_callback</full_name>
        <argument line="667">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="672" package="Default">
        <name>doAnchors</name>
        <full_name>doAnchors</full_name>
        <argument line="672">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="742" package="Default">
        <name>_doAnchors_reference_callback</name>
        <full_name>_doAnchors_reference_callback</full_name>
        <argument line="742">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="777" package="Default">
        <name>_doAnchors_inline_callback</name>
        <full_name>_doAnchors_inline_callback</full_name>
        <argument line="777">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="799" package="Default">
        <name>doImages</name>
        <full_name>doImages</full_name>
        <argument line="799">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="854" package="Default">
        <name>_doImages_reference_callback</name>
        <full_name>_doImages_reference_callback</full_name>
        <argument line="854">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="882" package="Default">
        <name>_doImages_inline_callback</name>
        <full_name>_doImages_inline_callback</full_name>
        <argument line="882">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="901" package="Default">
        <name>doHeaders</name>
        <full_name>doHeaders</full_name>
        <argument line="901">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="931" package="Default">
        <name>_doHeaders_callback_setext</name>
        <full_name>_doHeaders_callback_setext</full_name>
        <argument line="931">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="940" package="Default">
        <name>_doHeaders_callback_atx</name>
        <full_name>_doHeaders_callback_atx</full_name>
        <argument line="940">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="947" package="Default">
        <name>doLists</name>
        <full_name>doLists</full_name>
        <argument line="947">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1013" package="Default">
        <name>_doLists_callback</name>
        <full_name>_doLists_callback</full_name>
        <argument line="1013">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1033" package="Default">
        <name>processListItems</name>
        <full_name>processListItems</full_name>
        <argument line="1033">
          <name>$list_str</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1033">
          <name>$marker_any_re</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1079" package="Default">
        <name>_processListItems_callback</name>
        <full_name>_processListItems_callback</full_name>
        <argument line="1079">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1104" package="Default">
        <name>doCodeBlocks</name>
        <full_name>doCodeBlocks</full_name>
        <argument line="1104">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1122" package="Default">
        <name>_doCodeBlocks_callback</name>
        <full_name>_doCodeBlocks_callback</full_name>
        <argument line="1122">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1136" package="Default">
        <name>makeCodeSpan</name>
        <full_name>makeCodeSpan</full_name>
        <argument line="1136">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1162" package="Default">
        <name>prepareItalicsAndBold</name>
        <full_name>prepareItalicsAndBold</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1184" package="Default">
        <name>doItalicsAndBold</name>
        <full_name>doItalicsAndBold</full_name>
        <argument line="1184">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1307" package="Default">
        <name>doBlockQuotes</name>
        <full_name>doBlockQuotes</full_name>
        <argument line="1307">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1322" package="Default">
        <name>_doBlockQuotes_callback</name>
        <full_name>_doBlockQuotes_callback</full_name>
        <argument line="1322">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1336" package="Default">
        <name>_doBlockQuotes_callback2</name>
        <full_name>_doBlockQuotes_callback2</full_name>
        <argument line="1336">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1343" package="Default">
        <name>formParagraphs</name>
        <full_name>formParagraphs</full_name>
        <argument line="1343">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1413" package="Default">
        <name>encodeAttribute</name>
        <full_name>encodeAttribute</full_name>
        <argument line="1413">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1424" package="Default">
        <name>encodeAmpsAndAngles</name>
        <full_name>encodeAmpsAndAngles</full_name>
        <argument line="1424">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1445" package="Default">
        <name>doAutoLinks</name>
        <full_name>doAutoLinks</full_name>
        <argument line="1445">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1472" package="Default">
        <name>_doAutoLinks_url_callback</name>
        <full_name>_doAutoLinks_url_callback</full_name>
        <argument line="1472">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1477" package="Default">
        <name>_doAutoLinks_email_callback</name>
        <full_name>_doAutoLinks_email_callback</full_name>
        <argument line="1477">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1484" package="Default">
        <name>encodeEmailAddress</name>
        <full_name>encodeEmailAddress</full_name>
        <argument line="1484">
          <name>$addr</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1525" package="Default">
        <name>parseSpan</name>
        <full_name>parseSpan</full_name>
        <argument line="1525">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1581" package="Default">
        <name>handleSpanToken</name>
        <full_name>handleSpanToken</full_name>
        <argument line="1581">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1581">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1605" package="Default">
        <name>outdent</name>
        <full_name>outdent</full_name>
        <argument line="1605">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1617" package="Default">
        <name>detab</name>
        <full_name>detab</full_name>
        <argument line="1617">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1630" package="Default">
        <name>_detab_callback</name>
        <full_name>_detab_callback</full_name>
        <argument line="1630">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1647" package="Default">
        <name>_initDetab</name>
        <full_name>_initDetab</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1661" package="Default">
        <name>unhash</name>
        <full_name>unhash</full_name>
        <argument line="1661">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1668" package="Default">
        <name>_unhash_callback</name>
        <full_name>_unhash_callback</full_name>
        <argument line="1668">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1679" package="Default">
      <extends>\Markdown_Parser</extends>
      <name>MarkdownExtra_Parser</name>
      <full_name>\MarkdownExtra_Parser</full_name>
      <property final="false" static="false" visibility="public" line="1682" namespace="global" package="Default">
        <name>$fn_id_prefix</name>
        <default>""</default>
      </property>
      <property final="false" static="false" visibility="public" line="1685" namespace="global" package="Default">
        <name>$fn_link_title</name>
        <default>MARKDOWN_FN_LINK_TITLE</default>
      </property>
      <property final="false" static="false" visibility="public" line="1686" namespace="global" package="Default">
        <name>$fn_backlink_title</name>
        <default>MARKDOWN_FN_BACKLINK_TITLE</default>
      </property>
      <property final="false" static="false" visibility="public" line="1689" namespace="global" package="Default">
        <name>$fn_link_class</name>
        <default>MARKDOWN_FN_LINK_CLASS</default>
      </property>
      <property final="false" static="false" visibility="public" line="1690" namespace="global" package="Default">
        <name>$fn_backlink_class</name>
        <default>MARKDOWN_FN_BACKLINK_CLASS</default>
      </property>
      <property final="false" static="false" visibility="public" line="1693" namespace="global" package="Default">
        <name>$predef_abbr</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="1727" namespace="global" package="Default">
        <name>$footnotes</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="1728" namespace="global" package="Default">
        <name>$footnotes_ordered</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="1729" namespace="global" package="Default">
        <name>$abbr_desciptions</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="1730" namespace="global" package="Default">
        <name>$abbr_word_re</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="public" line="1733" namespace="global" package="Default">
        <name>$footnote_counter</name>
        <default>1</default>
      </property>
      <property final="false" static="false" visibility="public" line="1772" namespace="global" package="Default">
        <name>$block_tags_re</name>
        <default>'p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|address|form|fieldset|iframe|hr|legend'</default>
      </property>
      <property final="false" static="false" visibility="public" line="1775" namespace="global" package="Default">
        <name>$context_block_tags_re</name>
        <default>'script|noscript|math|ins|del'</default>
      </property>
      <property final="false" static="false" visibility="public" line="1778" namespace="global" package="Default">
        <name>$contain_span_tags_re</name>
        <default>'p|h[1-6]|li|dd|dt|td|th|legend|address'</default>
      </property>
      <property final="false" static="false" visibility="public" line="1782" namespace="global" package="Default">
        <name>$clean_tags_re</name>
        <default>'script|math'</default>
      </property>
      <property final="false" static="false" visibility="public" line="1785" namespace="global" package="Default">
        <name>$auto_close_tags_re</name>
        <default>'hr|img'</default>
      </property>
      <property final="false" static="false" visibility="public" line="2592" namespace="global" package="Default">
        <name>$em_relist</name>
        <default>array('' =&gt; '(?:(?&lt;!\*)\*(?!\*)|(?&lt;![a-zA-Z0-9_])_(?!_))(?=\S|$)(?![\.,:;]\s)', '*' =&gt; '(?&lt;=\S|^)(?&lt;!\*)\*(?!\*)', '_' =&gt; '(?&lt;=\S|^)(?&lt;!_)_(?![a-zA-Z0-9_])')</default>
      </property>
      <property final="false" static="false" visibility="public" line="2597" namespace="global" package="Default">
        <name>$strong_relist</name>
        <default>array('' =&gt; '(?:(?&lt;!\*)\*\*(?!\*)|(?&lt;![a-zA-Z0-9_])__(?!_))(?=\S|$)(?![\.,:;]\s)', '**' =&gt; '(?&lt;=\S|^)(?&lt;!\*)\*\*(?!\*)', '__' =&gt; '(?&lt;=\S|^)(?&lt;!_)__(?![a-zA-Z0-9_])')</default>
      </property>
      <property final="false" static="false" visibility="public" line="2602" namespace="global" package="Default">
        <name>$em_strong_relist</name>
        <default>array('' =&gt; '(?:(?&lt;!\*)\*\*\*(?!\*)|(?&lt;![a-zA-Z0-9_])___(?!_))(?=\S|$)(?![\.,:;]\s)', '***' =&gt; '(?&lt;=\S|^)(?&lt;!\*)\*\*\*(?!\*)', '___' =&gt; '(?&lt;=\S|^)(?&lt;!_)___(?![a-zA-Z0-9_])')</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1696" package="Default">
        <name>MarkdownExtra_Parser</name>
        <full_name>MarkdownExtra_Parser</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1736" package="Default">
        <name>setup</name>
        <full_name>setup</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1756" package="Default">
        <name>teardown</name>
        <full_name>teardown</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1788" package="Default">
        <name>hashHTMLBlocks</name>
        <full_name>hashHTMLBlocks</full_name>
        <argument line="1788">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1811" package="Default">
        <name>_hashHTMLBlocks_inMarkdown</name>
        <full_name>_hashHTMLBlocks_inMarkdown</full_name>
        <argument line="1811">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1811">
          <name>$indent</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1812">
          <name>$enclosing_tag_re</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="1812">
          <name>$span</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2040" package="Default">
        <name>_hashHTMLBlocks_inHTML</name>
        <full_name>_hashHTMLBlocks_inHTML</full_name>
        <argument line="2040">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2040">
          <name>$hash_method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2040">
          <name>$md_attr</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2215" package="Default">
        <name>hashClean</name>
        <full_name>hashClean</full_name>
        <argument line="2215">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2225" package="Default">
        <name>doHeaders</name>
        <full_name>doHeaders</full_name>
        <argument line="2225">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2265" package="Default">
        <name>_doHeaders_attr</name>
        <full_name>_doHeaders_attr</full_name>
        <argument line="2265">
          <name>$attr</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2269" package="Default">
        <name>_doHeaders_callback_setext</name>
        <full_name>_doHeaders_callback_setext</full_name>
        <argument line="2269">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2277" package="Default">
        <name>_doHeaders_callback_atx</name>
        <full_name>_doHeaders_callback_atx</full_name>
        <argument line="2277">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2285" package="Default">
        <name>doTables</name>
        <full_name>doTables</full_name>
        <argument line="2285">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2346" package="Default">
        <name>_doTable_leadingPipe_callback</name>
        <full_name>_doTable_leadingPipe_callback</full_name>
        <argument line="2346">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2356" package="Default">
        <name>_doTable_callback</name>
        <full_name>_doTable_callback</full_name>
        <argument line="2356">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2415" package="Default">
        <name>doDefLists</name>
        <full_name>doDefLists</full_name>
        <argument line="2415">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2457" package="Default">
        <name>_doDefLists_callback</name>
        <full_name>_doDefLists_callback</full_name>
        <argument line="2457">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2469" package="Default">
        <name>processDefListItems</name>
        <full_name>processDefListItems</full_name>
        <argument line="2469">
          <name>$list_str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2512" package="Default">
        <name>_processDefListItems_callback_dt</name>
        <full_name>_processDefListItems_callback_dt</full_name>
        <argument line="2512">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2521" package="Default">
        <name>_processDefListItems_callback_dd</name>
        <full_name>_processDefListItems_callback_dd</full_name>
        <argument line="2521">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2541" package="Default">
        <name>doFencedCodeBlocks</name>
        <full_name>doFencedCodeBlocks</full_name>
        <argument line="2541">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2574" package="Default">
        <name>_doFencedCodeBlocks_callback</name>
        <full_name>_doFencedCodeBlocks_callback</full_name>
        <argument line="2574">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2582" package="Default">
        <name>_doFencedCodeBlocks_newlines</name>
        <full_name>_doFencedCodeBlocks_newlines</full_name>
        <argument line="2582">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2609" package="Default">
        <name>formParagraphs</name>
        <full_name>formParagraphs</full_name>
        <argument line="2609">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2647" package="Default">
        <name>stripFootnotes</name>
        <full_name>stripFootnotes</full_name>
        <argument line="2647">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2674" package="Default">
        <name>_stripFootnotes_callback</name>
        <full_name>_stripFootnotes_callback</full_name>
        <argument line="2674">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2681" package="Default">
        <name>doFootnotes</name>
        <full_name>doFootnotes</full_name>
        <argument line="2681">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2693" package="Default">
        <name>appendFootnotes</name>
        <full_name>appendFootnotes</full_name>
        <argument line="2693">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2750" package="Default">
        <name>_appendFootnotes_callback</name>
        <full_name>_appendFootnotes_callback</full_name>
        <argument line="2750">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2788" package="Default">
        <name>stripAbbreviations</name>
        <full_name>stripAbbreviations</full_name>
        <argument line="2788">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2803" package="Default">
        <name>_stripAbbreviations_callback</name>
        <full_name>_stripAbbreviations_callback</full_name>
        <argument line="2803">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2814" package="Default">
        <name>doAbbreviations</name>
        <full_name>doAbbreviations</full_name>
        <argument line="2814">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2830" package="Default">
        <name>_doAbbreviations_callback</name>
        <full_name>_doAbbreviations_callback</full_name>
        <argument line="2830">
          <name>$matches</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/docs/libraries/markdown.php</error>
      <error line="52" code="50009">No DocBlock was found for function \Markdown()</error>
      <error line="105" code="50009">No DocBlock was found for function \mdwp_MarkdownPost()</error>
      <error line="142" code="50009">No DocBlock was found for function \mdwp_add_p()</error>
      <error line="150" code="50009">No DocBlock was found for function \mdwp_strip_p()</error>
      <error line="152" code="50009">No DocBlock was found for function \mdwp_hide_tags()</error>
      <error line="156" code="50009">No DocBlock was found for function \mdwp_show_tags()</error>
      <error line="165" code="50009">No DocBlock was found for function \identify_modifier_markdown()</error>
      <error line="181" code="50009">No DocBlock was found for function \smarty_modifier_markdown()</error>
      <error line="194" code="50000">No DocBlock was found for \Textile</error>
      <error line="195" code="50010">No DocBlock was found for method TextileThis()</error>
      <error line="201" code="50010">No DocBlock was found for method TextileRestricted()</error>
      <error line="205" code="50010">No DocBlock was found for method blockLite()</error>
      <error line="215" code="50000">No DocBlock was found for \Markdown_Parser</error>
      <error line="219" code="50018">No DocBlock was found for property $nested_brackets_depth</error>
      <error line="220" code="50018">No DocBlock was found for property $nested_brackets_re</error>
      <error line="222" code="50018">No DocBlock was found for property $nested_url_parenthesis_depth</error>
      <error line="223" code="50018">No DocBlock was found for property $nested_url_parenthesis_re</error>
      <error line="226" code="50018">No DocBlock was found for property $escape_chars</error>
      <error line="227" code="50018">No DocBlock was found for property $escape_chars_re</error>
      <error line="230" code="50018">No DocBlock was found for property $empty_element_suffix</error>
      <error line="231" code="50018">No DocBlock was found for property $tab_width</error>
      <error line="234" code="50018">No DocBlock was found for property $no_markup</error>
      <error line="235" code="50018">No DocBlock was found for property $no_entities</error>
      <error line="238" code="50018">No DocBlock was found for property $predef_urls</error>
      <error line="239" code="50018">No DocBlock was found for property $predef_titles</error>
      <error line="267" code="50018">No DocBlock was found for property $urls</error>
      <error line="268" code="50018">No DocBlock was found for property $titles</error>
      <error line="269" code="50018">No DocBlock was found for property $html_hashes</error>
      <error line="272" code="50018">No DocBlock was found for property $in_anchor</error>
      <error line="338" code="50018">No DocBlock was found for property $document_gamut</error>
      <error line="564" code="50018">No DocBlock was found for property $block_gamut</error>
      <error line="626" code="50018">No DocBlock was found for property $span_gamut</error>
      <error line="1031" code="50018">No DocBlock was found for property $list_level</error>
      <error line="1145" code="50018">No DocBlock was found for property $em_relist</error>
      <error line="1150" code="50018">No DocBlock was found for property $strong_relist</error>
      <error line="1155" code="50018">No DocBlock was found for property $em_strong_relist</error>
      <error line="1160" code="50018">No DocBlock was found for property $em_strong_prepared_relist</error>
      <error line="1615" code="50018">No DocBlock was found for property $utf8_strlen</error>
      <error line="242" code="50010">No DocBlock was found for method Markdown_Parser()</error>
      <error line="275" code="50010">No DocBlock was found for method setup()</error>
      <error line="288" code="50010">No DocBlock was found for method teardown()</error>
      <error line="299" code="50010">No DocBlock was found for method transform()</error>
      <error line="346" code="50010">No DocBlock was found for method stripLinkDefinitions()</error>
      <error line="380" code="50010">No DocBlock was found for method _stripLinkDefinitions_callback()</error>
      <error line="389" code="50010">No DocBlock was found for method hashHTMLBlocks()</error>
      <error line="526" code="50010">No DocBlock was found for method _hashHTMLBlocks_callback()</error>
      <error line="533" code="50010">No DocBlock was found for method hashPart()</error>
      <error line="556" code="50010">No DocBlock was found for method hashBlock()</error>
      <error line="577" code="50010">No DocBlock was found for method runBlockGamut()</error>
      <error line="591" code="50010">No DocBlock was found for method runBasicBlockGamut()</error>
      <error line="608" code="50010">No DocBlock was found for method doHorizontalRules()</error>
      <error line="650" code="50010">No DocBlock was found for method runSpanGamut()</error>
      <error line="662" code="50010">No DocBlock was found for method doHardBreaks()</error>
      <error line="667" code="50010">No DocBlock was found for method _doHardBreaks_callback()</error>
      <error line="672" code="50010">No DocBlock was found for method doAnchors()</error>
      <error line="742" code="50010">No DocBlock was found for method _doAnchors_reference_callback()</error>
      <error line="777" code="50010">No DocBlock was found for method _doAnchors_inline_callback()</error>
      <error line="799" code="50010">No DocBlock was found for method doImages()</error>
      <error line="854" code="50010">No DocBlock was found for method _doImages_reference_callback()</error>
      <error line="882" code="50010">No DocBlock was found for method _doImages_inline_callback()</error>
      <error line="901" code="50010">No DocBlock was found for method doHeaders()</error>
      <error line="931" code="50010">No DocBlock was found for method _doHeaders_callback_setext()</error>
      <error line="940" code="50010">No DocBlock was found for method _doHeaders_callback_atx()</error>
      <error line="947" code="50010">No DocBlock was found for method doLists()</error>
      <error line="1013" code="50010">No DocBlock was found for method _doLists_callback()</error>
      <error line="1033" code="50010">No DocBlock was found for method processListItems()</error>
      <error line="1079" code="50010">No DocBlock was found for method _processListItems_callback()</error>
      <error line="1104" code="50010">No DocBlock was found for method doCodeBlocks()</error>
      <error line="1122" code="50010">No DocBlock was found for method _doCodeBlocks_callback()</error>
      <error line="1136" code="50010">No DocBlock was found for method makeCodeSpan()</error>
      <error line="1162" code="50010">No DocBlock was found for method prepareItalicsAndBold()</error>
      <error line="1184" code="50010">No DocBlock was found for method doItalicsAndBold()</error>
      <error line="1307" code="50010">No DocBlock was found for method doBlockQuotes()</error>
      <error line="1322" code="50010">No DocBlock was found for method _doBlockQuotes_callback()</error>
      <error line="1336" code="50010">No DocBlock was found for method _doBlockQuotes_callback2()</error>
      <error line="1343" code="50010">No DocBlock was found for method formParagraphs()</error>
      <error line="1413" code="50010">No DocBlock was found for method encodeAttribute()</error>
      <error line="1424" code="50010">No DocBlock was found for method encodeAmpsAndAngles()</error>
      <error line="1445" code="50010">No DocBlock was found for method doAutoLinks()</error>
      <error line="1472" code="50010">No DocBlock was found for method _doAutoLinks_url_callback()</error>
      <error line="1477" code="50010">No DocBlock was found for method _doAutoLinks_email_callback()</error>
      <error line="1484" code="50010">No DocBlock was found for method encodeEmailAddress()</error>
      <error line="1525" code="50010">No DocBlock was found for method parseSpan()</error>
      <error line="1581" code="50010">No DocBlock was found for method handleSpanToken()</error>
      <error line="1605" code="50010">No DocBlock was found for method outdent()</error>
      <error line="1617" code="50010">No DocBlock was found for method detab()</error>
      <error line="1630" code="50010">No DocBlock was found for method _detab_callback()</error>
      <error line="1647" code="50010">No DocBlock was found for method _initDetab()</error>
      <error line="1661" code="50010">No DocBlock was found for method unhash()</error>
      <error line="1668" code="50010">No DocBlock was found for method _unhash_callback()</error>
      <error line="1679" code="50000">No DocBlock was found for \MarkdownExtra_Parser</error>
      <error line="1682" code="50018">No DocBlock was found for property $fn_id_prefix</error>
      <error line="1685" code="50018">No DocBlock was found for property $fn_link_title</error>
      <error line="1686" code="50018">No DocBlock was found for property $fn_backlink_title</error>
      <error line="1689" code="50018">No DocBlock was found for property $fn_link_class</error>
      <error line="1690" code="50018">No DocBlock was found for property $fn_backlink_class</error>
      <error line="1693" code="50018">No DocBlock was found for property $predef_abbr</error>
      <error line="1727" code="50018">No DocBlock was found for property $footnotes</error>
      <error line="1728" code="50018">No DocBlock was found for property $footnotes_ordered</error>
      <error line="1729" code="50018">No DocBlock was found for property $abbr_desciptions</error>
      <error line="1730" code="50018">No DocBlock was found for property $abbr_word_re</error>
      <error line="1733" code="50018">No DocBlock was found for property $footnote_counter</error>
      <error line="1772" code="50018">No DocBlock was found for property $block_tags_re</error>
      <error line="1775" code="50018">No DocBlock was found for property $context_block_tags_re</error>
      <error line="1778" code="50018">No DocBlock was found for property $contain_span_tags_re</error>
      <error line="1782" code="50018">No DocBlock was found for property $clean_tags_re</error>
      <error line="1785" code="50018">No DocBlock was found for property $auto_close_tags_re</error>
      <error line="2592" code="50018">No DocBlock was found for property $em_relist</error>
      <error line="2597" code="50018">No DocBlock was found for property $strong_relist</error>
      <error line="2602" code="50018">No DocBlock was found for property $em_strong_relist</error>
      <error line="1696" code="50010">No DocBlock was found for method MarkdownExtra_Parser()</error>
      <error line="1736" code="50010">No DocBlock was found for method setup()</error>
      <error line="1756" code="50010">No DocBlock was found for method teardown()</error>
      <error line="1788" code="50010">No DocBlock was found for method hashHTMLBlocks()</error>
      <error line="1811" code="50010">No DocBlock was found for method _hashHTMLBlocks_inMarkdown()</error>
      <error line="2040" code="50010">No DocBlock was found for method _hashHTMLBlocks_inHTML()</error>
      <error line="2215" code="50010">No DocBlock was found for method hashClean()</error>
      <error line="2225" code="50010">No DocBlock was found for method doHeaders()</error>
      <error line="2265" code="50010">No DocBlock was found for method _doHeaders_attr()</error>
      <error line="2269" code="50010">No DocBlock was found for method _doHeaders_callback_setext()</error>
      <error line="2277" code="50010">No DocBlock was found for method _doHeaders_callback_atx()</error>
      <error line="2285" code="50010">No DocBlock was found for method doTables()</error>
      <error line="2346" code="50010">No DocBlock was found for method _doTable_leadingPipe_callback()</error>
      <error line="2356" code="50010">No DocBlock was found for method _doTable_callback()</error>
      <error line="2415" code="50010">No DocBlock was found for method doDefLists()</error>
      <error line="2457" code="50010">No DocBlock was found for method _doDefLists_callback()</error>
      <error line="2469" code="50010">No DocBlock was found for method processDefListItems()</error>
      <error line="2512" code="50010">No DocBlock was found for method _processDefListItems_callback_dt()</error>
      <error line="2521" code="50010">No DocBlock was found for method _processDefListItems_callback_dd()</error>
      <error line="2541" code="50010">No DocBlock was found for method doFencedCodeBlocks()</error>
      <error line="2574" code="50010">No DocBlock was found for method _doFencedCodeBlocks_callback()</error>
      <error line="2582" code="50010">No DocBlock was found for method _doFencedCodeBlocks_newlines()</error>
      <error line="2609" code="50010">No DocBlock was found for method formParagraphs()</error>
      <error line="2647" code="50010">No DocBlock was found for method stripFootnotes()</error>
      <error line="2674" code="50010">No DocBlock was found for method _stripFootnotes_callback()</error>
      <error line="2681" code="50010">No DocBlock was found for method doFootnotes()</error>
      <error line="2693" code="50010">No DocBlock was found for method appendFootnotes()</error>
      <error line="2750" code="50010">No DocBlock was found for method _appendFootnotes_callback()</error>
      <error line="2788" code="50010">No DocBlock was found for method stripAbbreviations()</error>
      <error line="2803" code="50010">No DocBlock was found for method _stripAbbreviations_callback()</error>
      <error line="2814" code="50010">No DocBlock was found for method doAbbreviations()</error>
      <error line="2830" code="50010">No DocBlock was found for method _doAbbreviations_callback()</error>
    </parse_markers>
  </file>
  <file path="bundles/docs/views/page.blade.php" hash="5ff7205e5574fad550f743021ef608f3" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/docs/views/page.blade.php</error>
    </parse_markers>
  </file>
  <file path="bundles/docs/views/template.blade.php" hash="687381b4c3e36ca583ea91fbad67e870" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/docs/views/template.blade.php</error>
    </parse_markers>
  </file>
  <file path="bundles/docs/routes.php" hash="ce825e28ef35a8afdc1d09d014324fed" package="Default">
    <include line="6" type="Require Once" package="Default">
      <name/>
      <docblock line="3">
        <description>Load the Markdown library.</description>
        <long-description></long-description>
      </docblock>
    </include>
    <function namespace="global" line="13" package="Default">
      <name>doc_root</name>
      <full_name>\doc_root</full_name>
      <docblock line="8">
        <description>Get the root path for the documentation Markdown.</description>
        <long-description></long-description>
        <tag line="8" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
    </function>
    <function namespace="global" line="24" package="Default">
      <name>document</name>
      <full_name>\document</full_name>
      <docblock line="18">
        <description>Get the parsed Markdown contents of a given page.</description>
        <long-description></long-description>
        <tag line="18" name="param" description="" type="string" variable="$page">
          <type by_reference="false">string</type>
        </tag>
        <tag line="18" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="24">
        <name>$page</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="35" package="Default">
      <name>document_exists</name>
      <full_name>\document_exists</full_name>
      <docblock line="29">
        <description>Determine if a documentation page exists.</description>
        <long-description></long-description>
        <tag line="29" name="param" description="" type="string" variable="$page">
          <type by_reference="false">string</type>
        </tag>
        <tag line="29" name="return" description="" type="bool">
          <type by_reference="false">bool</type>
        </tag>
      </docblock>
      <argument line="35">
        <name>$page</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/docs/routes.php</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/templates/bundle/start.php" hash="4882adfc8d1da2ebe1ad2d6d5d9d97eb" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/templates/bundle/start.php</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/classes/generators/config.php" hash="b68f818b8e6ef39425a07097d69e50cb" package="Default">
    <class final="false" abstract="false" namespace="global" line="11" package="bob">
      <extends>\Generator</extends>
      <name>Generators_Config</name>
      <full_name>\Generators_Config</full_name>
      <docblock line="3">
        <description>Generate a Config file with options.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="bob"/>
        <tag line="3" name="author" description="Dayle Rees"/>
        <tag line="3" name="copyright" description="Dayle Rees 2012"/>
        <tag line="3" name="license" description="MIT License &lt;http://www.opensource.org/licenses/mit&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="18" package="bob">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="13">
          <description>Start the generation process.</description>
          <long-description></long-description>
          <tag line="13" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="43" package="bob">
        <name>_config_generation</name>
        <full_name>_config_generation</full_name>
        <docblock line="36">
          <description>This method is responsible for generation all
source from the templates, and populating the
files array.</description>
          <long-description></long-description>
          <tag line="36" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="84" package="bob">
        <name>_settings</name>
        <full_name>_settings</full_name>
        <docblock line="78">
          <description>Alter generation settings from artisan
switches.</description>
          <long-description></long-description>
          <tag line="78" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/classes/generators/config.php</error>
      <error line="13" code="50015">Argument $args is missing from the Docblock of __construct()</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/classes/generators/controller.php" hash="abfbd2df575baaa9b4778274a5259869" package="Default">
    <class final="false" abstract="false" namespace="global" line="11" package="bob">
      <extends>\Generator</extends>
      <name>Generators_Controller</name>
      <full_name>\Generators_Controller</full_name>
      <docblock line="3">
        <description>Generate a controller, its actions and associated views.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="bob"/>
        <tag line="3" name="author" description="Dayle Rees"/>
        <tag line="3" name="copyright" description="Dayle Rees 2012"/>
        <tag line="3" name="license" description="MIT License &lt;http://www.opensource.org/licenses/mit&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="18" namespace="global" package="Default">
        <name>$_view_extension</name>
        <default>EXT</default>
        <docblock line="13">
          <description>The view file extension, can also be blade.php</description>
          <long-description></long-description>
          <tag line="13" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="bob">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description>Start the generation process.</description>
          <long-description></long-description>
          <tag line="20" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="50" package="bob">
        <name>_controller_generation</name>
        <full_name>_controller_generation</full_name>
        <docblock line="43">
          <description>This method is responsible for generation all
source from the templates, and populating the
files array.</description>
          <long-description></long-description>
          <tag line="43" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="134" package="bob">
        <name>_settings</name>
        <full_name>_settings</full_name>
        <docblock line="128">
          <description>Alter generation settings from artisan
switches.</description>
          <long-description></long-description>
          <tag line="128" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/classes/generators/controller.php</error>
      <error line="20" code="50015">Argument $args is missing from the Docblock of __construct()</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/classes/generators/task.php" hash="6ed4de5bd276243447f3761289f8dbd9" package="Default">
    <class final="false" abstract="false" namespace="global" line="11" package="bob">
      <extends>\Generator</extends>
      <name>Generators_Task</name>
      <full_name>\Generators_Task</full_name>
      <docblock line="3">
        <description>Generate a Task class, and individual methods.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="bob"/>
        <tag line="3" name="author" description="Dayle Rees"/>
        <tag line="3" name="copyright" description="Dayle Rees 2012"/>
        <tag line="3" name="license" description="MIT License &lt;http://www.opensource.org/licenses/mit&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="18" package="bob">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="13">
          <description>Start the generation process.</description>
          <long-description></long-description>
          <tag line="13" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="43" package="bob">
        <name>_task_generation</name>
        <full_name>_task_generation</full_name>
        <docblock line="36">
          <description>This method is responsible for generation all
source from the templates, and populating the
files array.</description>
          <long-description></long-description>
          <tag line="36" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="91" package="bob">
        <name>_settings</name>
        <full_name>_settings</full_name>
        <docblock line="85">
          <description>Alter generation settings from artisan
switches.</description>
          <long-description></long-description>
          <tag line="85" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/classes/generators/task.php</error>
      <error line="13" code="50015">Argument $args is missing from the Docblock of __construct()</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/classes/generators/bundle.php" hash="a6154abe3fa2181ff04533226887891a" package="Default">
    <class final="false" abstract="false" namespace="global" line="12" package="bob">
      <extends>\Generator</extends>
      <name>Generators_Bundle</name>
      <full_name>\Generators_Bundle</full_name>
      <docblock line="3">
        <description>Generate a new controller class, including actions
and views for each action.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="bob"/>
        <tag line="3" name="author" description="Dayle Rees"/>
        <tag line="3" name="copyright" description="Dayle Rees 2012"/>
        <tag line="3" name="license" description="MIT License &lt;http://www.opensource.org/licenses/mit&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="bob">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="14">
          <description>Start the generation process.</description>
          <long-description></long-description>
          <tag line="14" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="19">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/classes/generators/bundle.php</error>
      <error line="14" code="50015">Argument $args is missing from the Docblock of __construct()</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/classes/generators/view.php" hash="855a861252bea73833a3be1705f75f40" package="Default">
    <class final="false" abstract="false" namespace="global" line="11" package="bob">
      <extends>\Generator</extends>
      <name>Generators_View</name>
      <full_name>\Generators_View</full_name>
      <docblock line="3">
        <description>Generate a view.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="bob"/>
        <tag line="3" name="author" description="Dayle Rees"/>
        <tag line="3" name="copyright" description="Dayle Rees 2012"/>
        <tag line="3" name="license" description="MIT License &lt;http://www.opensource.org/licenses/mit&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="18" namespace="global" package="Default">
        <name>$_view_extension</name>
        <default>EXT</default>
        <docblock line="13">
          <description>The view file extension, can also be blade.php</description>
          <long-description></long-description>
          <tag line="13" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="bob">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description>Start the generation process.</description>
          <long-description></long-description>
          <tag line="20" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="50" package="bob">
        <name>_view_generation</name>
        <full_name>_view_generation</full_name>
        <docblock line="43">
          <description>This method is responsible for generation all
source from the templates, and populating the
files array.</description>
          <long-description></long-description>
          <tag line="43" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="78" package="bob">
        <name>_settings</name>
        <full_name>_settings</full_name>
        <docblock line="72">
          <description>Alter generation settings from artisan
switches.</description>
          <long-description></long-description>
          <tag line="72" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/classes/generators/view.php</error>
      <error line="20" code="50015">Argument $args is missing from the Docblock of __construct()</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/classes/generators/class.php" hash="f49418c5e4d7b556e582c6d5fff8cd18" package="Default">
    <class final="false" abstract="false" namespace="global" line="11" package="bob">
      <extends>\Generator</extends>
      <name>Generators_Class</name>
      <full_name>\Generators_Class</full_name>
      <docblock line="3">
        <description>Generate a generic Class, and individual methods.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="bob"/>
        <tag line="3" name="author" description="Dayle Rees"/>
        <tag line="3" name="copyright" description="Dayle Rees 2012"/>
        <tag line="3" name="license" description="MIT License &lt;http://www.opensource.org/licenses/mit&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="18" package="bob">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="13">
          <description>Start the generation process.</description>
          <long-description></long-description>
          <tag line="13" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="43" package="bob">
        <name>_class_generation</name>
        <full_name>_class_generation</full_name>
        <docblock line="36">
          <description>This method is responsible for generation all
source from the templates, and populating the
files array.</description>
          <long-description></long-description>
          <tag line="36" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="91" package="bob">
        <name>_settings</name>
        <full_name>_settings</full_name>
        <docblock line="85">
          <description>Alter generation settings from artisan
switches.</description>
          <long-description></long-description>
          <tag line="85" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/classes/generators/class.php</error>
      <error line="13" code="50015">Argument $args is missing from the Docblock of __construct()</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/classes/generators/model.php" hash="d596e4a7e6f74391ef94f86db6d14323" package="Default">
    <class final="false" abstract="false" namespace="global" line="12" package="bob">
      <extends>\Generator</extends>
      <name>Generators_Model</name>
      <full_name>\Generators_Model</full_name>
      <docblock line="3">
        <description>Generate a new eloquent model, including
relationships.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="bob"/>
        <tag line="3" name="author" description="Dayle Rees"/>
        <tag line="3" name="copyright" description="Dayle Rees 2012"/>
        <tag line="3" name="license" description="MIT License &lt;http://www.opensource.org/licenses/mit&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="19" namespace="global" package="Default">
        <name>$_timestamps</name>
        <default>''</default>
        <docblock line="14">
          <description>Enable the timestamps string in models?</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="bob">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="21">
          <description>Start the generation process.</description>
          <long-description></long-description>
          <tag line="21" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="51" package="bob">
        <name>_model_generation</name>
        <full_name>_model_generation</full_name>
        <docblock line="44">
          <description>This method is responsible for generation all
source from the templates, and populating the
files array.</description>
          <long-description></long-description>
          <tag line="44" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="135" package="bob">
        <name>_settings</name>
        <full_name>_settings</full_name>
        <docblock line="129">
          <description>Alter generation settings from artisan
switches.</description>
          <long-description></long-description>
          <tag line="129" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/classes/generators/model.php</error>
      <error line="21" code="50015">Argument $args is missing from the Docblock of __construct()</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/classes/generators/alias.php" hash="5de5f05ff0646a169bfc7a81eb22f08c" package="Default">
    <class final="false" abstract="false" namespace="global" line="12" package="bob">
      <extends>\Generator</extends>
      <name>Generators_Alias</name>
      <full_name>\Generators_Alias</full_name>
      <docblock line="3">
        <description>A simple way of setting up an alias for using
the shorter bob syntax.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="bob"/>
        <tag line="3" name="author" description="Dayle Rees"/>
        <tag line="3" name="copyright" description="Dayle Rees 2012"/>
        <tag line="3" name="license" description="MIT License &lt;http://www.opensource.org/licenses/mit&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="bob">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="14">
          <description>Start the generation process.</description>
          <long-description></long-description>
          <tag line="14" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="19">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/classes/generators/alias.php</error>
      <error line="14" code="50015">Argument $args is missing from the Docblock of __construct()</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/classes/generators/test.php" hash="ebf7d97849e7a7b897cfb11e12bb8009" package="Default">
    <class final="false" abstract="false" namespace="global" line="12" package="bob">
      <extends>\Generator</extends>
      <name>Generators_Test</name>
      <full_name>\Generators_Test</full_name>
      <docblock line="3">
        <description>Generate a new controller class, including actions
and views for each action.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="bob"/>
        <tag line="3" name="author" description="Dayle Rees"/>
        <tag line="3" name="copyright" description="Dayle Rees 2012"/>
        <tag line="3" name="license" description="MIT License &lt;http://www.opensource.org/licenses/mit&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="bob">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="14">
          <description>Start the generation process.</description>
          <long-description></long-description>
          <tag line="14" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="19">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="44" package="bob">
        <name>_test_generation</name>
        <full_name>_test_generation</full_name>
        <docblock line="37">
          <description>This method is responsible for generation all
source from the templates, and populating the
files array.</description>
          <long-description></long-description>
          <tag line="37" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="88" package="bob">
        <name>_settings</name>
        <full_name>_settings</full_name>
        <docblock line="82">
          <description>Alter generation settings from artisan
switches.</description>
          <long-description></long-description>
          <tag line="82" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/classes/generators/test.php</error>
      <error line="14" code="50015">Argument $args is missing from the Docblock of __construct()</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/classes/common.php" hash="e61375cb6b5805f3cc31880780d580eb" package="Default">
    <class final="false" abstract="false" namespace="global" line="12" package="bob">
      <extends/>
      <name>Common</name>
      <full_name>\Common</full_name>
      <docblock line="3">
        <description>Common is a utility class for the bob
generation system.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="bob"/>
        <tag line="3" name="author" description="Dayle Rees"/>
        <tag line="3" name="copyright" description="Dayle Rees 2012"/>
        <tag line="3" name="license" description="MIT License &lt;http://www.opensource.org/licenses/mit&gt;"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="19" namespace="global" package="Default">
        <name>$_ansi</name>
        <default>true</default>
        <docblock line="14">
          <description>Use ANSI coloring for output.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="27" package="bob">
        <name>log</name>
        <full_name>log</full_name>
        <docblock line="21">
          <description>Log a message to the CLI with a \r\n</description>
          <long-description></long-description>
          <tag line="21" name="param" description="string The message to display." type="\" variable="$message"/>
          <tag line="21" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="27">
          <name>$echo</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="69" package="bob">
        <name>error</name>
        <full_name>error</full_name>
        <docblock line="65">
          <description>Show an error message to the CLI in the form
of an exception.</description>
          <long-description></long-description>
        </docblock>
        <argument line="69">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="81" package="bob">
        <name>load_template</name>
        <full_name>load_template</full_name>
        <docblock line="74">
          <description>Load the source from a template file and return it
as a string.</description>
          <long-description></long-description>
          <tag line="74" name="param" description="string The file name of the template." type="\" variable="$template_name"/>
          <tag line="74" name="return" description="The template content." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$template_name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="107" package="bob">
        <name>replace_markers</name>
        <full_name>replace_markers</full_name>
        <docblock line="99">
          <description>Use a key-value array to replace markers within
a source template with their appropriate value.</description>
          <long-description></long-description>
          <tag line="99" name="param" description="array Markers to value array." type="\" variable="$markers"/>
          <tag line="99" name="param" description="string The source containing markers." type="\" variable="$template"/>
          <tag line="99" name="return" description="The processed template with values inserted." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$markers</name>
          <default></default>
          <type/>
        </argument>
        <argument line="107">
          <name>$template</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="126" package="bob">
        <name>config</name>
        <full_name>config</full_name>
        <docblock line="119">
          <description>Retrieve a command line switch, as false of not set,
true if set with no value, and string if given a value.</description>
          <long-description></long-description>
          <tag line="119" name="param" description="The switch name to query, lowercase." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="return" description="Bool or value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="143" package="bob">
        <name>detect_windows</name>
        <full_name>detect_windows</full_name>
        <docblock line="138">
          <description>Set the appropriate ANSI setting, disabled for windows.</description>
          <long-description></long-description>
          <tag line="138" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/classes/common.php</error>
      <error line="21" code="50015">Argument $echo is missing from the Docblock of log()</error>
      <error line="65" code="50015">Argument $message is missing from the Docblock of error()</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/classes/generator.php" hash="5769369250c5057a831fe6a2da0c8e0e" package="Default">
    <class final="false" abstract="false" namespace="global" line="12" package="bob">
      <extends/>
      <name>Generator</name>
      <full_name>\Generator</full_name>
      <docblock line="3">
        <description>Superclass to process command arguments for
generator classes.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="bob"/>
        <tag line="3" name="author" description="Dayle Rees"/>
        <tag line="3" name="copyright" description="Dayle Rees 2012"/>
        <tag line="3" name="license" description="MIT License &lt;http://www.opensource.org/licenses/mit&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="20" namespace="global" package="Default">
        <name>$args</name>
        <default></default>
        <docblock line="15">
          <description>The arguments as passed to the build script.</description>
          <long-description></long-description>
          <tag line="15" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$bundle</name>
        <default></default>
        <docblock line="22">
          <description>The lowercase bundle name.</description>
          <long-description></long-description>
          <tag line="22" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$bundle_path</name>
        <default></default>
        <docblock line="29">
          <description>The path to the bundle.</description>
          <long-description></long-description>
          <tag line="29" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="41" namespace="global" package="Default">
        <name>$standard</name>
        <default></default>
        <docblock line="36">
          <description>The class name in unaltered case.</description>
          <long-description></long-description>
          <tag line="36" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$lower</name>
        <default></default>
        <docblock line="43">
          <description>The class name in lowercase.</description>
          <long-description></long-description>
          <tag line="43" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="55" namespace="global" package="Default">
        <name>$class</name>
        <default></default>
        <docblock line="50">
          <description>The classified class name.</description>
          <long-description></long-description>
          <tag line="50" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="62" namespace="global" package="Default">
        <name>$class_prefix</name>
        <default>''</default>
        <docblock line="57">
          <description>The class prefix for multi level assets.</description>
          <long-description></long-description>
          <tag line="57" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="69" namespace="global" package="Default">
        <name>$class_path</name>
        <default>''</default>
        <docblock line="64">
          <description>The class path for multi level assets.</description>
          <long-description></long-description>
          <tag line="64" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="76" namespace="global" package="Default">
        <name>$arguments</name>
        <default></default>
        <docblock line="71">
          <description>The extra arguments, passed after class.</description>
          <long-description></long-description>
          <tag line="71" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="83" namespace="global" package="Default">
        <name>$writer</name>
        <default></default>
        <docblock line="78">
          <description>Used to write or append new files and folders.</description>
          <long-description></long-description>
          <tag line="78" name="var" description="" type="\Writer">
            <type by_reference="false">\Writer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="92" package="bob">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="85">
          <description>Determine class names, identifiers and arguments based on the args
passed by the build script.</description>
          <long-description></long-description>
          <tag line="85" name="param" description="Arguments to the build script." type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="85" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/classes/generator.php</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/classes/writer.php" hash="fc1408febd9337cab3658143581a60c0" package="Default">
    <class final="false" abstract="false" namespace="global" line="12" package="bob">
      <extends/>
      <name>Writer</name>
      <full_name>\Writer</full_name>
      <docblock line="3">
        <description>The writer class is used by Generator's to store arrays of filesystem
changes that can be written at the same time.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="bob"/>
        <tag line="3" name="author" description="Dayle Rees"/>
        <tag line="3" name="copyright" description="Dayle Rees 2012"/>
        <tag line="3" name="license" description="MIT License &lt;http://www.opensource.org/licenses/mit&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="19" namespace="global" package="Default">
        <name>$_files</name>
        <default>array()</default>
        <docblock line="14">
          <description>Store a list of new files to be written.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="26" namespace="global" package="Default">
        <name>$_append</name>
        <default>array()</default>
        <docblock line="21">
          <description>Store a list of new strings to be appended to files.</description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="33" namespace="global" package="Default">
        <name>$_dircopy</name>
        <default>array()</default>
        <docblock line="28">
          <description>Store a list of directories to be copied.</description>
          <long-description></long-description>
          <tag line="28" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="40" namespace="global" package="Default">
        <name>$_filecopy</name>
        <default>array()</default>
        <docblock line="35">
          <description>Store a list of files to be copied.</description>
          <long-description></long-description>
          <tag line="35" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="bob">
        <name>create_file</name>
        <full_name>create_file</full_name>
        <docblock line="42">
          <description>Add a file to the creation array.</description>
          <long-description></long-description>
          <tag line="42" name="param" description="The type of file to be created." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="param" description="The friendly name of the file to be created." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="param" description="The destination for the new file." type="string" variable="$location">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="param" description="The contents of the new file." type="string" variable="$contents">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$location</name>
          <default></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$contents</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="bob">
        <name>append_to_file</name>
        <full_name>append_to_file</full_name>
        <docblock line="63">
          <description>Add a new string to be appended to a file.</description>
          <long-description></long-description>
          <tag line="63" name="param" description="The destination of the file to be appended." type="string" variable="$existing_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="param" description="The string to be appended." type="string" variable="$contents">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$existing_file</name>
          <default></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$contents</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="bob">
        <name>copy_directory</name>
        <full_name>copy_directory</full_name>
        <docblock line="80">
          <description>Add a directory to be copied at write time.</description>
          <long-description></long-description>
          <tag line="80" name="param" description="The type of content to be copied." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="param" description="The friendly name of the directory to be copied." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="param" description="The source of the directory." type="string" variable="$source">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="param" description="The destination of the directory." type="string" variable="$destination">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$source</name>
          <default></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$destination</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="bob">
        <name>copy_file</name>
        <full_name>copy_file</full_name>
        <docblock line="101">
          <description>Add a file to be copied at write time.</description>
          <long-description></long-description>
          <tag line="101" name="param" description="The type of file to be copied." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="param" description="The friendly name of the file to be copied." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="param" description="The source for the file." type="string" variable="$source">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="param" description="The destination for the file." type="string" variable="$destination">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$source</name>
          <default></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$destination</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="127" package="bob">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="122">
          <description>Write all changes to the filesystem.</description>
          <long-description></long-description>
          <tag line="122" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="161" package="bob">
        <name>_write_files</name>
        <full_name>_write_files</full_name>
        <docblock line="146">
          <description>Iterate through a files array, creating files in
different locations where neccessary.</description>
          <long-description>&lt;pre&gt;&lt;code&gt;$this-&gt;_files[] = array(
        'type'      =&gt; 'View',
    'name'      =&gt; 'Descriptive identifier shown to terminal.',
    'location'  =&gt; 'location/to/save/the/file.php',
        'contents'  =&gt; 'the string content of the file'
);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="146" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="199" package="bob">
        <name>_append_files</name>
        <full_name>_append_files</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="223" package="bob">
        <name>_copy_dirs</name>
        <full_name>_copy_dirs</full_name>
        <docblock line="209">
          <description>Copy a directory of templates to a destination.</description>
          <long-description>&lt;pre&gt;&lt;code&gt;$this-&gt;_dircopy[] = array(
        'type'          =&gt; 'View',
    'name'          =&gt; 'Descriptive identifier shown to terminal.',
    'source'        =&gt; 'the/location/to/copy/from',
        'destination'   =&gt; 'the/location/to/copy/to'
);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="209" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="244" package="bob">
        <name>_copy_files</name>
        <full_name>_copy_files</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/classes/writer.php</error>
      <error line="199" code="50010">No DocBlock was found for method _append_files()</error>
      <error line="244" code="50010">No DocBlock was found for method _copy_files()</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/start.php" hash="1720a06d6f99c74a528e14acf3ed5a13" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/start.php</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/config/options.php" hash="7f3162848fee4f88b732e9d57da643aa" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/config/options.php</error>
    </parse_markers>
  </file>
  <file path="bundles/bob/tasks/build.php" hash="e7d7407f2c61019c201d9a232f3a3074" package="Default">
    <class final="false" abstract="false" namespace="global" line="12" package="bob">
      <extends>\Task</extends>
      <name>Bob_Build_Task</name>
      <full_name>\Bob_Build_Task</full_name>
      <docblock line="3">
        <description>The main task for the Bob generator, commands are passed as
arguments to run()</description>
        <long-description></long-description>
        <tag line="3" name="package" description="bob"/>
        <tag line="3" name="author" description="Dayle Rees"/>
        <tag line="3" name="copyright" description="Dayle Rees 2012"/>
        <tag line="3" name="license" description="MIT License &lt;http://www.opensource.org/licenses/mit&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="bob">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="14">
          <description>run() is the start-point of the CLI request, the
first argument specifies the command, and sub-sequent
arguments are passed as arguments to the chosen generator.</description>
          <long-description></long-description>
          <tag line="14" name="param" description="array The command and its arguments." type="\" variable="$arguments"/>
          <tag line="14" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="90" package="bob">
        <name>_help</name>
        <full_name>_help</full_name>
        <docblock line="84">
          <description>Show a short version of the documentation to hint
at command names, with an example.</description>
          <long-description></long-description>
          <tag line="84" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file bundles/bob/tasks/build.php</error>
    </parse_markers>
  </file>
  <file path="paths.php" hash="e28ded21880c2a23e7ee7834537e9080" package="Laravel">
    <docblock line="2">
      <description>Laravel - A PHP Framework For Web Artisans</description>
      <long-description></long-description>
      <tag line="2" name="package" description="Laravel"/>
      <tag line="2" name="version" description="3.2.13"/>
      <tag line="2" name="author" description="Taylor Otwell &lt;taylorotwell@gmail.com&gt;"/>
      <tag line="2" name="link" description="http://laravel.com" link="http://laravel.com"/>
    </docblock>
    <constant namespace="global" line="104" package="Laravel">
      <name>DS</name>
      <full_name>\DS</full_name>
      <value>DIRECTORY_SEPARATOR</value>
    </constant>
    <function namespace="global" line="133" package="Laravel">
      <name>path</name>
      <full_name>\path</full_name>
      <docblock line="123">
        <description>A global path helper function.</description>
        <long-description>&lt;pre&gt;&lt;code&gt;    $storage = path('storage');
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="123" name="param" description="" type="string" variable="$path">
          <type by_reference="false">string</type>
        </tag>
        <tag line="123" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="133">
        <name>$path</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="145" package="Laravel">
      <name>set_path</name>
      <full_name>\set_path</full_name>
      <docblock line="138">
        <description>A global path setter function.</description>
        <long-description></long-description>
        <tag line="138" name="param" description="" type="string" variable="$path">
          <type by_reference="false">string</type>
        </tag>
        <tag line="138" name="param" description="" type="string" variable="$value">
          <type by_reference="false">string</type>
        </tag>
        <tag line="138" name="return" description="" type="void">
          <type by_reference="false">void</type>
        </tag>
      </docblock>
      <argument line="145">
        <name>$path</name>
        <default></default>
        <type/>
      </argument>
      <argument line="145">
        <name>$value</name>
        <default></default>
        <type/>
      </argument>
    </function>
  </file>
  <file path="laravel/tests/application/dashboard/repository.php" hash="fbba65ab86803c1eaa8e2900ae905ec3" package="Default">
    <class final="false" abstract="false" namespace="Dashboard" line="7" package="Default">
      <extends/>
      <name>Repository</name>
      <full_name>\Dashboard\Repository</full_name>
      <docblock line="3">
        <description>This class is used for testing the auto-loading of classes
that are mapped by namesapce.</description>
        <long-description></long-description>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/dashboard/repository.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/language/sp/validation.php" hash="47a9e3e32951822709ca93347317ce94" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/language/sp/validation.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/language/en/pagination.php" hash="a532f1f7053353ce1bb6b63cda5f508f" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/language/en/pagination.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/language/en/validation.php" hash="3d9b0d717e7b674b3f50da629e87204e" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/language/en/validation.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/bundles.php" hash="55d10209e43fb51f3bbec88e00f445f7" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/bundles.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/models/repositories/user.php" hash="75dd6c319ebf1b383f9e9f2cace07d94" package="Default">
    <class final="false" abstract="false" namespace="Repositories" line="3" package="Default">
      <extends/>
      <name>User</name>
      <full_name>\Repositories\User</full_name>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/models/repositories/user.php</error>
      <error line="3" code="50000">No DocBlock was found for \Repositories\User</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/models/user.php" hash="5216a413ffc658e8594cb2e2a7bcdd54" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>User</name>
      <full_name>\User</full_name>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/models/user.php</error>
      <error line="3" code="50000">No DocBlock was found for \User</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/models/autoloader.php" hash="0e520d96663411b21394cb0370b8390f" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Autoloader_HardCoded</name>
      <full_name>\Autoloader_HardCoded</full_name>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/models/autoloader.php</error>
      <error line="3" code="50000">No DocBlock was found for \Autoloader_HardCoded</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/models/model.php" hash="9886318c04562d814d1773ec03ac0752" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Laravel\Database\Eloquent\Model</extends>
      <name>Model</name>
      <full_name>\Model</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="5" package="Default">
        <name>set_setter</name>
        <full_name>set_setter</full_name>
        <argument line="5">
          <name>$setter</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>get_getter</name>
        <full_name>get_getter</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/models/model.php</error>
      <error line="3" code="50000">No DocBlock was found for \Model</error>
      <error line="5" code="50010">No DocBlock was found for method set_setter()</error>
      <error line="10" code="50010">No DocBlock was found for method get_getter()</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/controllers/filter.php" hash="d2a36db41d283d8fcc09757abebdbf0c" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Controller</extends>
      <name>Filter_Controller</name>
      <full_name>\Filter_Controller</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="5" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="Default">
        <name>action_profile</name>
        <full_name>action_profile</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Default">
        <name>action_show</name>
        <full_name>action_show</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Default">
        <name>action_edit</name>
        <full_name>action_edit</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Default">
        <name>action_save</name>
        <full_name>action_save</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="55" package="Default">
        <name>action_login</name>
        <full_name>action_login</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="60" package="Default">
        <name>action_logout</name>
        <full_name>action_logout</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/controllers/filter.php</error>
      <error line="3" code="50000">No DocBlock was found for \Filter_Controller</error>
      <error line="5" code="50010">No DocBlock was found for method __construct()</error>
      <error line="30" code="50010">No DocBlock was found for method action_index()</error>
      <error line="35" code="50010">No DocBlock was found for method action_profile()</error>
      <error line="40" code="50010">No DocBlock was found for method action_show()</error>
      <error line="45" code="50010">No DocBlock was found for method action_edit()</error>
      <error line="50" code="50010">No DocBlock was found for method action_save()</error>
      <error line="55" code="50010">No DocBlock was found for method action_login()</error>
      <error line="60" code="50010">No DocBlock was found for method action_logout()</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/controllers/admin/panel.php" hash="27045147d7902f4d31bd04de603417d3" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Controller</extends>
      <name>Admin_Panel_Controller</name>
      <full_name>\Admin_Panel_Controller</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="5" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/controllers/admin/panel.php</error>
      <error line="3" code="50000">No DocBlock was found for \Admin_Panel_Controller</error>
      <error line="5" code="50010">No DocBlock was found for method action_index()</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/controllers/restful.php" hash="03ff99ef0a8e3186313ea017ab137d47" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Controller</extends>
      <name>Restful_Controller</name>
      <full_name>\Restful_Controller</full_name>
      <property final="false" static="false" visibility="public" line="5" namespace="global" package="Default">
        <name>$restful</name>
        <default>true</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="7" package="Default">
        <name>get_index</name>
        <full_name>get_index</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="12" package="Default">
        <name>post_index</name>
        <full_name>post_index</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/controllers/restful.php</error>
      <error line="3" code="50000">No DocBlock was found for \Restful_Controller</error>
      <error line="5" code="50018">No DocBlock was found for property $restful</error>
      <error line="7" code="50010">No DocBlock was found for method get_index()</error>
      <error line="12" code="50010">No DocBlock was found for method post_index()</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/controllers/home.php" hash="26ba0176dc81c4c7339cc1291f57fa94" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Controller</extends>
      <name>Home_Controller</name>
      <full_name>\Home_Controller</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/controllers/home.php</error>
      <error line="3" code="50000">No DocBlock was found for \Home_Controller</error>
      <error line="37" code="50010">No DocBlock was found for method action_index()</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/controllers/auth.php" hash="66d403ffc7410ae2b3f788984ba46903" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Controller</extends>
      <name>Auth_Controller</name>
      <full_name>\Auth_Controller</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="5" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>action_login</name>
        <full_name>action_login</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="15" package="Default">
        <name>action_profile</name>
        <full_name>action_profile</full_name>
        <argument line="15">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/controllers/auth.php</error>
      <error line="3" code="50000">No DocBlock was found for \Auth_Controller</error>
      <error line="5" code="50010">No DocBlock was found for method action_index()</error>
      <error line="10" code="50010">No DocBlock was found for method action_login()</error>
      <error line="15" code="50010">No DocBlock was found for method action_profile()</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/controllers/template/basic.php" hash="623909d7d0b4364f1c3dcfaea1369b29" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Controller</extends>
      <name>Template_Basic_Controller</name>
      <full_name>\Template_Basic_Controller</full_name>
      <property final="false" static="false" visibility="public" line="5" namespace="global" package="Default">
        <name>$layout</name>
        <default>'home.index'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="7" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/controllers/template/basic.php</error>
      <error line="3" code="50000">No DocBlock was found for \Template_Basic_Controller</error>
      <error line="5" code="50018">No DocBlock was found for property $layout</error>
      <error line="7" code="50010">No DocBlock was found for method action_index()</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/controllers/template/named.php" hash="80ee213ff41560960197105315a3f552" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Controller</extends>
      <name>Template_Named_Controller</name>
      <full_name>\Template_Named_Controller</full_name>
      <property final="false" static="false" visibility="public" line="5" namespace="global" package="Default">
        <name>$layout</name>
        <default>'name: home'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="7" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/controllers/template/named.php</error>
      <error line="3" code="50000">No DocBlock was found for \Template_Named_Controller</error>
      <error line="5" code="50018">No DocBlock was found for property $layout</error>
      <error line="7" code="50010">No DocBlock was found for method action_index()</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/controllers/template/override.php" hash="7ec892bc467eba377d0102b0655d27c1" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>TemplateStub</name>
      <full_name>\TemplateStub</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="5" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="12" package="Default">
      <extends>\Controller</extends>
      <name>Template_Override_Controller</name>
      <full_name>\Template_Override_Controller</full_name>
      <property final="false" static="false" visibility="public" line="14" namespace="global" package="Default">
        <name>$layout</name>
        <default>'home.index'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="21" package="Default">
        <name>layout</name>
        <full_name>layout</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/controllers/template/override.php</error>
      <error line="3" code="50000">No DocBlock was found for \TemplateStub</error>
      <error line="5" code="50010">No DocBlock was found for method __toString()</error>
      <error line="12" code="50000">No DocBlock was found for \Template_Override_Controller</error>
      <error line="14" code="50018">No DocBlock was found for property $layout</error>
      <error line="16" code="50010">No DocBlock was found for method action_index()</error>
      <error line="21" code="50010">No DocBlock was found for method layout()</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/views/tests/basic.php" hash="c244d317cf28f935d34e7c51a8f7a39b" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/views/tests/basic.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/views/tests/nested.php" hash="56c052be7cc218dbc1a4092a9db64c50" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/views/tests/nested.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/views/home/index.php" hash="cf440949095c3f1c20187a37c39ab6a3" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/views/home/index.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/views/error/500.php" hash="3429edfdad967c8cf197b721acedc4fe" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/views/error/500.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/views/error/404.php" hash="35ad3e130c9a2a6dd26dbe9daaae7245" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/views/error/404.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/routes.php" hash="167f766469b2f3a496ccde25fe0b0213" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/routes.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/start.php" hash="5276e84468001f61069e62b9e04f6b48" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/start.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/config/error.php" hash="a22c27d9f640e73ccbf200815a5691c6" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/config/error.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/config/application.php" hash="7802e71108ccaba2ef218cb63a2e3267" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/config/application.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/config/session.php" hash="fba41c8be05fecbe35b6dbd180561b52" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/config/session.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/config/local/database.php" hash="5a8d168b02416555e4221472b526b8e1" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/config/local/database.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/config/cache.php" hash="dd0feb57640331022f14f4c7edcbd29e" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/config/cache.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/config/strings.php" hash="913207fb3cfd2513eda3ad8a7972eb89" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/config/strings.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/config/database.php" hash="0fdcac26f66de08178aa7561e2bc7f48" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/config/database.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/config/mimes.php" hash="5a254dd77d2be2eb3cac1165415f38f6" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/config/mimes.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/application/config/auth.php" hash="21b0a6ca20f04cb09719038abfe3d796" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/application/config/auth.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/bundles/dashboard/models/repository.php" hash="fbba65ab86803c1eaa8e2900ae905ec3" package="Default">
    <class final="false" abstract="false" namespace="Dashboard" line="7" package="Default">
      <extends/>
      <name>Repository</name>
      <full_name>\Dashboard\Repository</full_name>
      <docblock line="3">
        <description>This class is used for testing the auto-loading of classes
that are mapped by namesapce.</description>
        <long-description></long-description>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/bundles/dashboard/models/repository.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/bundles/dashboard/controllers/panel.php" hash="c7b143a52f4afcea9dcbc235204101d5" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\Controller</extends>
      <name>Dashboard_Panel_Controller</name>
      <full_name>\Dashboard_Panel_Controller</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="5" package="Default">
        <name>action_index</name>
        <full_name>action_index</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/bundles/dashboard/controllers/panel.php</error>
      <error line="3" code="50000">No DocBlock was found for \Dashboard_Panel_Controller</error>
      <error line="5" code="50010">No DocBlock was found for method action_index()</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/bundles/dashboard/routes.php" hash="319d25ac2eb3adf1bbb6c5c15c23ce1b" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/bundles/dashboard/routes.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/bundles/dashboard/config/meta.php" hash="df89351ccf909d096cc49770b759f24e" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/bundles/dashboard/config/meta.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/bundles/dummy/routes.php" hash="fe5906f94f69b2a6d64aeaed0d2160aa" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/bundles/dummy/routes.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/bundles/dummy/start.php" hash="a2c8a9ee1807e548d3ba51dd67058ec6" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/bundles/dummy/start.php</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/request.test.php" hash="1c6a2a397a81b7908b8fa50b8bf6f102" package="Default">
    <class final="false" abstract="false" namespace="global" line="5" package="Default">
      <extends/>
      <name>SessionPayloadTokenStub</name>
      <full_name>\SessionPayloadTokenStub</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="7" package="Default">
        <name>token</name>
        <full_name>token</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="11" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>RequestTest</name>
      <full_name>\RequestTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="13">
          <description>Tear down the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="30" package="Default">
        <name>setServerVar</name>
        <full_name>setServerVar</full_name>
        <docblock line="24">
          <description>Set one of the $_SERVER variables.</description>
          <long-description></long-description>
          <tag line="24" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="30">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="43" package="Default">
        <name>setPostVar</name>
        <full_name>setPostVar</full_name>
        <docblock line="37">
          <description>Set one of the $_POST variables.</description>
          <long-description></long-description>
          <tag line="37" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="55" package="Default">
        <name>restartRequest</name>
        <full_name>restartRequest</full_name>
        <docblock line="50">
          <description>Reinitialize the global request.</description>
          <long-description></long-description>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="Default">
        <name>testMethodReturnsTheHTTPRequestMethod</name>
        <full_name>testMethodReturnsTheHTTPRequestMethod</full_name>
        <docblock line="64">
          <description>Test the Request::method method.</description>
          <long-description></long-description>
          <tag line="64" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="Default">
        <name>testServerMethodReturnsFromServerArray</name>
        <full_name>testServerMethodReturnsFromServerArray</full_name>
        <docblock line="80">
          <description>Test the Request::server method.</description>
          <long-description></long-description>
          <tag line="80" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="Default">
        <name>testIPMethodReturnsClientIPAddress</name>
        <full_name>testIPMethodReturnsClientIPAddress</full_name>
        <docblock line="94">
          <description>Test the Request::ip method.</description>
          <long-description></long-description>
          <tag line="94" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="Default">
        <name>testSecureMethodsIndicatesIfHTTPS</name>
        <full_name>testSecureMethodsIndicatesIfHTTPS</full_name>
        <docblock line="115">
          <description>Test the Request::secure method.</description>
          <long-description></long-description>
          <tag line="115" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="Default">
        <name>testAjaxMethodIndicatesWhenAjax</name>
        <full_name>testAjaxMethodIndicatesWhenAjax</full_name>
        <docblock line="131">
          <description>Test the Request::ajax method.</description>
          <long-description></long-description>
          <tag line="131" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="150" package="Default">
        <name>testForgedMethodIndicatesIfRequestWasForged</name>
        <full_name>testForgedMethodIndicatesIfRequestWasForged</full_name>
        <docblock line="145">
          <description>Test the Request::forged method.</description>
          <long-description></long-description>
          <tag line="145" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="170" package="Default">
        <name>testRouteMethodReturnsStaticRoute</name>
        <full_name>testRouteMethodReturnsStaticRoute</full_name>
        <docblock line="165">
          <description>Test the Request::route method.</description>
          <long-description></long-description>
          <tag line="165" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <markers>
      <fixme line="57">Ugly hack, but old contents from previous requests seem to</fixme>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/request.test.php</error>
      <error line="5" code="50000">No DocBlock was found for \SessionPayloadTokenStub</error>
      <error line="7" code="50010">No DocBlock was found for method token()</error>
      <error line="11" code="50000">No DocBlock was found for \RequestTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/autoloader.test.php" hash="8f090abee2e385616e3ad1e0de19bc3c" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>AutoloaderTest</name>
      <full_name>\AutoloaderTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>testMapsCanBeRegistered</name>
        <full_name>testMapsCanBeRegistered</full_name>
        <docblock line="5">
          <description>Test the Autoloader::map method.</description>
          <long-description></long-description>
          <tag line="5" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="Default">
        <name>testAliasesCanBeRegistered</name>
        <full_name>testAliasesCanBeRegistered</full_name>
        <docblock line="19">
          <description>Test the Autoloader::alias method.</description>
          <long-description></long-description>
          <tag line="19" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="Default">
        <name>testPsrDirectoriesCanBeRegistered</name>
        <full_name>testPsrDirectoriesCanBeRegistered</full_name>
        <docblock line="31">
          <description>Test the Autoloader::directories method.</description>
          <long-description></long-description>
          <tag line="31" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="Default">
        <name>testNamespacesCanBeRegistered</name>
        <full_name>testNamespacesCanBeRegistered</full_name>
        <docblock line="47">
          <description>Test the Autoloader::namespaces method.</description>
          <long-description></long-description>
          <tag line="47" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="68" package="Default">
        <name>testPsrLibrariesAndModelsCanBeLoaded</name>
        <full_name>testPsrLibrariesAndModelsCanBeLoaded</full_name>
        <docblock line="63">
          <description>Test the loading of PSR-0 models and libraries.</description>
          <long-description></long-description>
          <tag line="63" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Default">
        <name>testHardcodedClassesCanBeLoaded</name>
        <full_name>testHardcodedClassesCanBeLoaded</full_name>
        <docblock line="74">
          <description>Test the loading of hard-coded classes.</description>
          <long-description></long-description>
          <tag line="74" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="Default">
        <name>testClassesMappedByNamespaceCanBeLoaded</name>
        <full_name>testClassesMappedByNamespaceCanBeLoaded</full_name>
        <docblock line="88">
          <description>Test the loading of classes mapped by namespaces.</description>
          <long-description></long-description>
          <tag line="88" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/autoloader.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \AutoloaderTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/session.test.php" hash="b6ff59f1003d072851b41552c64b281c" package="Default">
    <class final="false" abstract="false" namespace="global" line="6" package="Default">
      <extends/>
      <name>DummyPayload</name>
      <full_name>\DummyPayload</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>test</name>
        <full_name>test</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="12" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>SessionTest</name>
      <full_name>\SessionTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="Default">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="14">
          <description>Setup the testing environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="23">
          <description>Tear down the testing environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Default">
        <name>testPayloadCanBeCalledStaticly</name>
        <full_name>testPayloadCanBeCalledStaticly</full_name>
        <docblock line="32">
          <description>Test the __callStatic method.</description>
          <long-description></long-description>
          <tag line="32" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="48" package="Default">
        <name>testStartedMethodIndicatesIfSessionIsStarted</name>
        <full_name>testStartedMethodIndicatesIfSessionIsStarted</full_name>
        <docblock line="43">
          <description>Test the Session::started method.</description>
          <long-description></long-description>
          <tag line="43" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="60" package="Default">
        <name>testLoadMethodCreatesNewSessionWithNullIDGiven</name>
        <full_name>testLoadMethodCreatesNewSessionWithNullIDGiven</full_name>
        <docblock line="55">
          <description>Test the Payload::load method.</description>
          <long-description></long-description>
          <tag line="55" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="72" package="Default">
        <name>testLoadMethodCreatesNewSessionWhenSessionIsExpired</name>
        <full_name>testLoadMethodCreatesNewSessionWhenSessionIsExpired</full_name>
        <docblock line="67">
          <description>Test the Payload::load method.</description>
          <long-description></long-description>
          <tag line="67" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="95" package="Default">
        <name>verifyNewSession</name>
        <full_name>verifyNewSession</full_name>
        <docblock line="89">
          <description>Assert that a session is new.</description>
          <long-description></long-description>
          <tag line="89" name="param" description="" type="\Laravel\Session\Payload" variable="$payload">
            <type by_reference="false">\Laravel\Session\Payload</type>
          </tag>
          <tag line="89" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$payload</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="Default">
        <name>testLoadMethodSetsValidSession</name>
        <full_name>testLoadMethodSetsValidSession</full_name>
        <docblock line="104">
          <description>Test the Payload::load method.</description>
          <long-description></long-description>
          <tag line="104" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="129" package="Default">
        <name>testLoadMethodSetsCSRFTokenIfDoesntExist</name>
        <full_name>testLoadMethodSetsCSRFTokenIfDoesntExist</full_name>
        <docblock line="124">
          <description>Test the Payload::load method.</description>
          <long-description></long-description>
          <tag line="124" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="152" package="Default">
        <name>testSessionDataCanBeRetrievedProperly</name>
        <full_name>testSessionDataCanBeRetrievedProperly</full_name>
        <docblock line="147">
          <description>Test the various data retrieval methods.</description>
          <long-description></long-description>
          <tag line="147" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="173" package="Default">
        <name>testDataCanBeSetProperly</name>
        <full_name>testDataCanBeSetProperly</full_name>
        <docblock line="168">
          <description>Test the various data manipulation methods.</description>
          <long-description></long-description>
          <tag line="168" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="202" package="Default">
        <name>testSessionDataCanBeForgotten</name>
        <full_name>testSessionDataCanBeForgotten</full_name>
        <docblock line="197">
          <description>Test the Payload::forget method.</description>
          <long-description></long-description>
          <tag line="197" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="218" package="Default">
        <name>testFlushMaintainsTokenButDeletesEverythingElse</name>
        <full_name>testFlushMaintainsTokenButDeletesEverythingElse</full_name>
        <docblock line="213">
          <description>Test the Payload::flush method.</description>
          <long-description></long-description>
          <tag line="213" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="237" package="Default">
        <name>testRegenerateMethodSetsNewIDAndTurnsOffExistenceIndicator</name>
        <full_name>testRegenerateMethodSetsNewIDAndTurnsOffExistenceIndicator</full_name>
        <docblock line="232">
          <description>Test the Payload::regenerate method.</description>
          <long-description></long-description>
          <tag line="232" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="254" package="Default">
        <name>testTokenMethodReturnsCSRFToken</name>
        <full_name>testTokenMethodReturnsCSRFToken</full_name>
        <docblock line="249">
          <description>Test the Payload::token method.</description>
          <long-description></long-description>
          <tag line="249" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="267" package="Default">
        <name>testSaveMethodCorrectlyCallsDriver</name>
        <full_name>testSaveMethodCorrectlyCallsDriver</full_name>
        <docblock line="262">
          <description>Test the Payload::save method.</description>
          <long-description></long-description>
          <tag line="262" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="293" package="Default">
        <name>testSaveMethodSweepsIfSweeperAndOddsHitWithTimeGreaterThanThreshold</name>
        <full_name>testSaveMethodSweepsIfSweeperAndOddsHitWithTimeGreaterThanThreshold</full_name>
        <docblock line="288">
          <description>Test the Payload::save method.</description>
          <long-description></long-description>
          <tag line="288" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="321" package="Default">
        <name>testSaveMethodSweepsIfSweeperAndOddsHitWithTimeLessThanThreshold</name>
        <full_name>testSaveMethodSweepsIfSweeperAndOddsHitWithTimeLessThanThreshold</full_name>
        <docblock line="316">
          <description>Test the Payload::save method.</description>
          <long-description></long-description>
          <tag line="316" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="345" package="Default">
        <name>testSweeperShouldntBeCalledIfDriverIsntSweeper</name>
        <full_name>testSweeperShouldntBeCalledIfDriverIsntSweeper</full_name>
        <docblock line="340">
          <description>Test that the session sweeper is never called if not a sweeper.</description>
          <long-description></long-description>
          <tag line="340" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="365" package="Default">
        <name>testSaveMethodSetsCookieWithCorrectValues</name>
        <full_name>testSaveMethodSetsCookieWithCorrectValues</full_name>
        <docblock line="360">
          <description>Test the Payload::save method.</description>
          <long-description></long-description>
          <tag line="360" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="389" package="Default">
        <name>testActivityMethodReturnsLastActivity</name>
        <full_name>testActivityMethodReturnsLastActivity</full_name>
        <docblock line="384">
          <description>Test the Session::activity method.</description>
          <long-description></long-description>
          <tag line="384" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="401" package="Default">
        <name>getPayload</name>
        <full_name>getPayload</full_name>
        <docblock line="396">
          <description>Get a session payload instance.</description>
          <long-description></long-description>
          <tag line="396" name="return" description="" type="\Laravel\Session\Payload">
            <type by_reference="false">\Laravel\Session\Payload</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="411" package="Default">
        <name>getMockDriver</name>
        <full_name>getMockDriver</full_name>
        <docblock line="406">
          <description>Get a mock driver instance.</description>
          <long-description></long-description>
          <tag line="406" name="return" description="" type="\Driver">
            <type by_reference="false">\Driver</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="425" package="Default">
        <name>getSession</name>
        <full_name>getSession</full_name>
        <docblock line="420">
          <description>Get a dummy session.</description>
          <long-description></long-description>
          <tag line="420" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/session.test.php</error>
      <error line="6" code="50000">No DocBlock was found for \DummyPayload</error>
      <error line="8" code="50010">No DocBlock was found for method test()</error>
      <error line="12" code="50000">No DocBlock was found for \SessionTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/database.test.php" hash="fb6520dd510e246f1727063d7bb53995" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>DatabaseTest</name>
      <full_name>\DatabaseTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="5">
          <description>Set up the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="13">
          <description>Tear down the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Default">
        <name>testConnectionMethodReturnsConnection</name>
        <full_name>testConnectionMethodReturnsConnection</full_name>
        <docblock line="21">
          <description>Test the DB::connection method.</description>
          <long-description></long-description>
          <tag line="21" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="Default">
        <name>testProfileMethodReturnsQueries</name>
        <full_name>testProfileMethodReturnsQueries</full_name>
        <docblock line="36">
          <description>Test the DB::profile method.</description>
          <long-description></long-description>
          <tag line="36" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="Default">
        <name>testConnectionMethodsCanBeCalledStaticly</name>
        <full_name>testConnectionMethodsCanBeCalledStaticly</full_name>
        <docblock line="48">
          <description>Test the __callStatic method.</description>
          <long-description></long-description>
          <tag line="48" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="60" package="Default">
      <extends>\Laravel\Database</extends>
      <name>DatabaseConnectStub</name>
      <full_name>\DatabaseConnectStub</full_name>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="62" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <argument line="62">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="66" package="Default">
      <extends>\PDO</extends>
      <name>PDOStub</name>
      <full_name>\PDOStub</full_name>
      <property final="false" static="false" visibility="public" line="68" namespace="global" package="Default">
        <name>$laravel_config</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="70">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="72" package="Default">
        <name>foo</name>
        <full_name>foo</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/database.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \DatabaseTest</error>
      <error line="60" code="50000">No DocBlock was found for \DatabaseConnectStub</error>
      <error line="62" code="50010">No DocBlock was found for method connect()</error>
      <error line="66" code="50000">No DocBlock was found for \PDOStub</error>
      <error line="68" code="50018">No DocBlock was found for property $laravel_config</error>
      <error line="70" code="50010">No DocBlock was found for method __construct()</error>
      <error line="72" code="50010">No DocBlock was found for method foo()</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/messages.test.php" hash="10b7bd1fb2fd689c5e1dbe5acd81bdf3" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>MessagesTest</name>
      <full_name>\MessagesTest</full_name>
      <property final="false" static="false" visibility="public" line="10" namespace="global" package="Default">
        <name>$messages</name>
        <default></default>
        <docblock line="5">
          <description>The Messages instance.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="\Messages">
            <type by_reference="false">\Messages</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="15" package="Default">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="12">
          <description>Setup the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Default">
        <name>testAddingMessagesDoesNotCreateDuplicateMessages</name>
        <full_name>testAddingMessagesDoesNotCreateDuplicateMessages</full_name>
        <docblock line="20">
          <description>Test the Messages::add method.</description>
          <long-description></long-description>
          <tag line="20" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Default">
        <name>testAddMethodPutsMessageInMessagesArray</name>
        <full_name>testAddMethodPutsMessageInMessagesArray</full_name>
        <docblock line="32">
          <description>Test the Messages::add method.</description>
          <long-description></long-description>
          <tag line="32" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Default">
        <name>testHasMethodReturnsTrue</name>
        <full_name>testHasMethodReturnsTrue</full_name>
        <docblock line="44">
          <description>Test the Messages::has method.</description>
          <long-description></long-description>
          <tag line="44" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="60" package="Default">
        <name>testHasMethodReturnsFalse</name>
        <full_name>testHasMethodReturnsFalse</full_name>
        <docblock line="55">
          <description>Test the Messages::has method.</description>
          <long-description></long-description>
          <tag line="55" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="Default">
        <name>testFirstMethodReturnsSingleString</name>
        <full_name>testFirstMethodReturnsSingleString</full_name>
        <docblock line="65">
          <description>Test the Messages::first method.</description>
          <long-description></long-description>
          <tag line="65" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="Default">
        <name>testGetMethodReturnsAllMessagesForAttribute</name>
        <full_name>testGetMethodReturnsAllMessagesForAttribute</full_name>
        <docblock line="77">
          <description>Test the Messages::get method.</description>
          <long-description></long-description>
          <tag line="77" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="Default">
        <name>testAllMethodReturnsAllErrorMessages</name>
        <full_name>testAllMethodReturnsAllErrorMessages</full_name>
        <docblock line="89">
          <description>Test the Messages::all method.</description>
          <long-description></long-description>
          <tag line="89" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="Default">
        <name>testMessagesRespectFormat</name>
        <full_name>testMessagesRespectFormat</full_name>
        <docblock line="101">
          <description>Test the Messages::get method.</description>
          <long-description></long-description>
          <tag line="101" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/messages.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \MessagesTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/redirect.test.php" hash="a83857b0aeb65d01c355f2b67c7a4b2e" package="Default">
    <class final="false" abstract="false" namespace="global" line="5" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>RedirectTest</name>
      <full_name>\RedirectTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="7">
          <description>Setup the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="19">
          <description>Destroy the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="Default">
        <name>testSimpleRedirectSetsCorrectHeaders</name>
        <full_name>testSimpleRedirectSetsCorrectHeaders</full_name>
        <docblock line="33">
          <description>Test the Redirect::to method.</description>
          <long-description></long-description>
          <tag line="33" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Default">
        <name>testRedirectsCanBeGeneratedForNamedRoutes</name>
        <full_name>testRedirectsCanBeGeneratedForNamedRoutes</full_name>
        <docblock line="56">
          <description>Test the Redirect::to_route method.</description>
          <long-description></long-description>
          <tag line="56" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="78" package="Default">
        <name>testWithMethodFlashesItemToSession</name>
        <full_name>testWithMethodFlashesItemToSession</full_name>
        <docblock line="73">
          <description>Test the Redirect::with method.</description>
          <long-description></long-description>
          <tag line="73" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="92" package="Default">
        <name>testWithInputMethodFlashesInputToTheSession</name>
        <full_name>testWithInputMethodFlashesInputToTheSession</full_name>
        <docblock line="87">
          <description>Test the Redirect::with_input function.</description>
          <long-description></long-description>
          <tag line="87" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="117" package="Default">
        <name>testWithErrorsFlashesErrorsToTheSession</name>
        <full_name>testWithErrorsFlashesErrorsToTheSession</full_name>
        <docblock line="112">
          <description>Test the Redirect::with_errors method.</description>
          <long-description></long-description>
          <tag line="112" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="136" package="Default">
        <name>setSession</name>
        <full_name>setSession</full_name>
        <docblock line="133">
          <description>Set the session payload instance.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/redirect.test.php</error>
      <error line="5" code="50000">No DocBlock was found for \RedirectTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/cookie.test.php" hash="c06e129f0d5ab6d7d4c322dd2a34af65" package="Default">
    <function namespace="Laravel" line="8" package="Default">
      <name>setcookie</name>
      <full_name>\Laravel\setcookie</full_name>
      <docblock line="5">
        <description>Stub the global setcookie method into the Laravel namespace.</description>
        <long-description></long-description>
      </docblock>
      <argument line="8">
        <name>$name</name>
        <default></default>
        <type/>
      </argument>
      <argument line="8">
        <name>$value</name>
        <default></default>
        <type/>
      </argument>
      <argument line="8">
        <name>$time</name>
        <default></default>
        <type/>
      </argument>
      <argument line="8">
        <name>$path</name>
        <default></default>
        <type/>
      </argument>
      <argument line="8">
        <name>$domain</name>
        <default></default>
        <type/>
      </argument>
      <argument line="8">
        <name>$secure</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="Laravel" line="13" package="Default">
      <name>headers_sent</name>
      <full_name>\Laravel\headers_sent</full_name>
    </function>
    <class final="false" abstract="false" namespace="Laravel" line="18" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>CookieTest</name>
      <full_name>\Laravel\CookieTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="23" package="Default">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="20">
          <description>Setup the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="31" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="28">
          <description>Tear down the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="42" package="Default">
        <name>setServerVar</name>
        <full_name>setServerVar</full_name>
        <docblock line="36">
          <description>Set one of the $_SERVER variables.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="36" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="42">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="54" package="Default">
        <name>restartRequest</name>
        <full_name>restartRequest</full_name>
        <docblock line="49">
          <description>Reinitialize the global request.</description>
          <long-description></long-description>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="68" package="Default">
        <name>testHasMethodIndicatesIfCookieInSet</name>
        <full_name>testHasMethodIndicatesIfCookieInSet</full_name>
        <docblock line="63">
          <description>Test Cookie::has method.</description>
          <long-description></long-description>
          <tag line="63" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="83" package="Default">
        <name>testGetMethodCanReturnValueOfCookies</name>
        <full_name>testGetMethodCanReturnValueOfCookies</full_name>
        <docblock line="78">
          <description>Test the Cookie::get method.</description>
          <long-description></long-description>
          <tag line="78" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="97" package="Default">
        <name>testForeverShouldUseATonOfMinutes</name>
        <full_name>testForeverShouldUseATonOfMinutes</full_name>
        <docblock line="92">
          <description>Test Cookie::forever method.</description>
          <long-description></long-description>
          <tag line="92" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="121" package="Default">
        <name>testForgetSetsCookieWithExpiration</name>
        <full_name>testForgetSetsCookieWithExpiration</full_name>
        <docblock line="116">
          <description>Test the Cookie::forget method.</description>
          <long-description></long-description>
          <tag line="116" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <markers>
      <fixme line="56">Ugly hack, but old contents from previous requests seem to</fixme>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/cookie.test.php</error>
      <error line="5" code="50015">Argument $name is missing from the Docblock of \Laravel\setcookie()</error>
      <error line="5" code="50015">Argument $value is missing from the Docblock of \Laravel\setcookie()</error>
      <error line="5" code="50015">Argument $time is missing from the Docblock of \Laravel\setcookie()</error>
      <error line="5" code="50015">Argument $path is missing from the Docblock of \Laravel\setcookie()</error>
      <error line="5" code="50015">Argument $domain is missing from the Docblock of \Laravel\setcookie()</error>
      <error line="5" code="50015">Argument $secure is missing from the Docblock of \Laravel\setcookie()</error>
      <error line="13" code="50009">No DocBlock was found for function \Laravel\headers_sent()</error>
      <error line="18" code="50000">No DocBlock was found for \Laravel\CookieTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/lang.test.php" hash="d4b23c876621231b09b2a4d74e60ae45" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
    </include>
    <include line="25" type="Require" package="Default">
      <name/>
    </include>
    <include line="37" type="Require" package="Default">
      <name/>
    </include>
    <include line="49" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>LangTest</name>
      <full_name>\LangTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>testGetMethodCanGetFromDefaultLanguage</name>
        <full_name>testGetMethodCanGetFromDefaultLanguage</full_name>
        <docblock line="5">
          <description>Test the Lang::line method.</description>
          <long-description></long-description>
          <tag line="5" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="Default">
        <name>testGetMethodCanGetLinesForAGivenLanguage</name>
        <full_name>testGetMethodCanGetLinesForAGivenLanguage</full_name>
        <docblock line="18">
          <description>Test the Lang::line method.</description>
          <long-description></long-description>
          <tag line="18" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="Default">
        <name>testLineCanBeCastAsString</name>
        <full_name>testLineCanBeCastAsString</full_name>
        <docblock line="30">
          <description>Test the __toString method.</description>
          <long-description></long-description>
          <tag line="30" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="Default">
        <name>testReplacementsAreMadeOnLines</name>
        <full_name>testReplacementsAreMadeOnLines</full_name>
        <docblock line="42">
          <description>Test that string replacements are made on lines.</description>
          <long-description></long-description>
          <tag line="42" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Default">
        <name>testHasMethodIndicatesIfLangaugeLineExists</name>
        <full_name>testHasMethodIndicatesIfLangaugeLineExists</full_name>
        <docblock line="56">
          <description>Test the Lang::has method.</description>
          <long-description></long-description>
          <tag line="56" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/lang.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \LangTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/config.test.php" hash="4b62cad86639f2b044536a578147b6c6" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ConfigTest</name>
      <full_name>\ConfigTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="5">
          <description>Tear down the testing environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="Default">
        <name>testItemsCanBeRetrievedFromConfigFiles</name>
        <full_name>testItemsCanBeRetrievedFromConfigFiles</full_name>
        <docblock line="14">
          <description>Test the Config::get method.</description>
          <long-description></long-description>
          <tag line="14" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="Default">
        <name>testHasMethodIndicatesIfConfigItemExists</name>
        <full_name>testHasMethodIndicatesIfConfigItemExists</full_name>
        <docblock line="26">
          <description>Test the Config::has method.</description>
          <long-description></long-description>
          <tag line="26" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Default">
        <name>testConfigItemsCanBeSet</name>
        <full_name>testConfigItemsCanBeSet</full_name>
        <docblock line="37">
          <description>Test the Config::set method.</description>
          <long-description></long-description>
          <tag line="37" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="Default">
        <name>testEnvironmentConfigsOverrideNormalConfigurations</name>
        <full_name>testEnvironmentConfigsOverrideNormalConfigurations</full_name>
        <docblock line="51">
          <description>Test that environment configurations are loaded correctly.</description>
          <long-description></long-description>
          <tag line="51" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="Default">
        <name>testItemsCanBeSetAfterEntireFileIsLoaded</name>
        <full_name>testItemsCanBeSetAfterEntireFileIsLoaded</full_name>
        <docblock line="65">
          <description>Test that items can be set after the entire file has already been loaded.</description>
          <long-description></long-description>
          <tag line="65" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/config.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \ConfigTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/route.test.php" hash="7134874096a8c425428bba350ebbfebc" package="Default">
    <class final="false" abstract="false" namespace="global" line="5" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>RouteTest</name>
      <full_name>\RouteTest</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="10" package="Default">
        <name>tearDownAfterClass</name>
        <full_name>tearDownAfterClass</full_name>
        <docblock line="7">
          <description>Tear down the testing environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="20">
          <description>Destroy the testing environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Default">
        <name>testIsMethodIndicatesIfTheRouteHasAGivenName</name>
        <full_name>testIsMethodIndicatesIfTheRouteHasAGivenName</full_name>
        <docblock line="28">
          <description>Tests the Route::is method.</description>
          <long-description></long-description>
          <tag line="28" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Default">
        <name>testBasicRoutesCanBeExecutedProperly</name>
        <full_name>testBasicRoutesCanBeExecutedProperly</full_name>
        <docblock line="40">
          <description>Test the basic execution of a route.</description>
          <long-description></long-description>
          <tag line="40" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="Default">
        <name>testRouteParametersArePassedIntoTheHandler</name>
        <full_name>testRouteParametersArePassedIntoTheHandler</full_name>
        <docblock line="53">
          <description>Test that route parameters are passed into the handlers.</description>
          <long-description></long-description>
          <tag line="53" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="Default">
        <name>testCallingARouteCallsTheBeforeAndAfterFilters</name>
        <full_name>testCallingARouteCallsTheBeforeAndAfterFilters</full_name>
        <docblock line="66">
          <description>Test that calling a route calls the global before and after filters.</description>
          <long-description></long-description>
          <tag line="66" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="Default">
        <name>testBeforeFiltersOverrideTheRouteResponse</name>
        <full_name>testBeforeFiltersOverrideTheRouteResponse</full_name>
        <docblock line="84">
          <description>Test that before filters override the route response.</description>
          <long-description></long-description>
          <tag line="84" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="Default">
        <name>testAfterFilterDoesNotAffectTheResponse</name>
        <full_name>testAfterFilterDoesNotAffectTheResponse</full_name>
        <docblock line="103">
          <description>Test that after filters do not affect the route response.</description>
          <long-description></long-description>
          <tag line="103" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="132" package="Default">
        <name>testControllerActionCalledWhenDelegating</name>
        <full_name>testControllerActionCalledWhenDelegating</full_name>
        <docblock line="127">
          <description>Test that the route calls the appropriate controller method when delegating.</description>
          <long-description></long-description>
          <tag line="127" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="146" package="Default">
        <name>testFilterParametersArePassedToFilter</name>
        <full_name>testFilterParametersArePassedToFilter</full_name>
        <docblock line="141">
          <description>Test that filter parameters are passed to the filter.</description>
          <long-description></long-description>
          <tag line="141" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="163" package="Default">
        <name>testMultipleFiltersCanBeAssignedToARoute</name>
        <full_name>testMultipleFiltersCanBeAssignedToARoute</full_name>
        <docblock line="158">
          <description>Test that multiple filters can be assigned to a route.</description>
          <long-description></long-description>
          <tag line="158" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/route.test.php</error>
      <error line="5" code="50000">No DocBlock was found for \RouteTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/response.test.php" hash="8d69c55db2d386e50942fc874f5e69cc" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ResponseTest</name>
      <full_name>\ResponseTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>testMakeMethodProperlySetsContent</name>
        <full_name>testMakeMethodProperlySetsContent</full_name>
        <docblock line="5">
          <description>Test the Response::make method.</description>
          <long-description></long-description>
          <tag line="5" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Default">
        <name>testViewMethodSetsContentToView</name>
        <full_name>testViewMethodSetsContentToView</full_name>
        <docblock line="20">
          <description>Test the Response::view method.</description>
          <long-description></long-description>
          <tag line="20" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="Default">
        <name>testErrorMethodSetsContentToErrorView</name>
        <full_name>testErrorMethodSetsContentToErrorView</full_name>
        <docblock line="33">
          <description>Test the Response::error method.</description>
          <long-description></long-description>
          <tag line="33" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="Default">
        <name>testPrepareMethodCreatesAResponseInstanceFromGivenValue</name>
        <full_name>testPrepareMethodCreatesAResponseInstanceFromGivenValue</full_name>
        <docblock line="47">
          <description>Test the Response::prepare method.</description>
          <long-description></long-description>
          <tag line="47" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="Default">
        <name>testHeaderMethodSetsValueInHeaderArray</name>
        <full_name>testHeaderMethodSetsValueInHeaderArray</full_name>
        <docblock line="65">
          <description>Test the Response::header method.</description>
          <long-description></long-description>
          <tag line="65" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="Default">
        <name>testStatusMethodSetsStatusCode</name>
        <full_name>testStatusMethodSetsStatusCode</full_name>
        <docblock line="77">
          <description>Test the Response::status method.</description>
          <long-description></long-description>
          <tag line="77" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/response.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \ResponseTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/html.test.php" hash="7bc84d80d8bfe9f77191d9011238dee6" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>HtmlTest</name>
      <full_name>\HtmlTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="5">
          <description>Setup the test environment</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="17">
          <description>Destroy the test environment</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Default">
        <name>testGeneratingScript</name>
        <full_name>testGeneratingScript</full_name>
        <docblock line="28">
          <description>Test generating a link to JavaScript files</description>
          <long-description></long-description>
          <tag line="28" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Default">
        <name>testGeneratingStyle</name>
        <full_name>testGeneratingStyle</full_name>
        <docblock line="44">
          <description>Test generating a link to CSS files</description>
          <long-description></long-description>
          <tag line="44" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="Default">
        <name>testGeneratingSpan</name>
        <full_name>testGeneratingSpan</full_name>
        <docblock line="60">
          <description>Test generating proper span</description>
          <long-description></long-description>
          <tag line="60" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Default">
        <name>testGeneratingLink</name>
        <full_name>testGeneratingLink</full_name>
        <docblock line="74">
          <description>Test generating proper link</description>
          <long-description></long-description>
          <tag line="74" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="97" package="Default">
        <name>testGeneratingLinkToSecure</name>
        <full_name>testGeneratingLinkToSecure</full_name>
        <docblock line="92">
          <description>Test generating proper link to secure</description>
          <long-description></long-description>
          <tag line="92" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="115" package="Default">
        <name>testGeneratingAssetLink</name>
        <full_name>testGeneratingAssetLink</full_name>
        <docblock line="110">
          <description>Test generating proper link to asset</description>
          <long-description></long-description>
          <tag line="110" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="Default">
        <name>testGeneratingAssetLinkToSecure</name>
        <full_name>testGeneratingAssetLinkToSecure</full_name>
        <docblock line="128">
          <description>Test generating proper link to secure asset</description>
          <long-description></long-description>
          <tag line="128" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="151" package="Default">
        <name>testGeneratingLinkToRoute</name>
        <full_name>testGeneratingLinkToRoute</full_name>
        <docblock line="146">
          <description>Test generating proper link to route</description>
          <long-description></long-description>
          <tag line="146" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="169" package="Default">
        <name>testGeneratingLinkToAction</name>
        <full_name>testGeneratingLinkToAction</full_name>
        <docblock line="164">
          <description>Test generating proper link to action</description>
          <long-description></long-description>
          <tag line="164" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="185" package="Default">
        <name>testGeneratingListing</name>
        <full_name>testGeneratingListing</full_name>
        <docblock line="180">
          <description>Test generating proper listing</description>
          <long-description></long-description>
          <tag line="180" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="211" package="Default">
        <name>testGeneratingDefinition</name>
        <full_name>testGeneratingDefinition</full_name>
        <docblock line="206">
          <description>Test generating proper listing</description>
          <long-description></long-description>
          <tag line="206" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="230" package="Default">
        <name>testGeneratingAssetLinkImage</name>
        <full_name>testGeneratingAssetLinkImage</full_name>
        <docblock line="225">
          <description>Test generating proper image link</description>
          <long-description></long-description>
          <tag line="225" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/html.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \HtmlTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/bundle.test.php" hash="7bf288459a97615793c7c4245c952a10" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>BundleTest</name>
      <full_name>\BundleTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="5">
          <description>Setup the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="18" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="15">
          <description>Tear down the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Default">
        <name>testRegisterMethodCorrectlyRegistersBundle</name>
        <full_name>testRegisterMethodCorrectlyRegistersBundle</full_name>
        <docblock line="25">
          <description>Test Bundle::register method.</description>
          <long-description></long-description>
          <tag line="25" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Default">
        <name>testStartMethodStartsBundle</name>
        <full_name>testStartMethodStartsBundle</full_name>
        <docblock line="44">
          <description>Test the Bundle::start method.</description>
          <long-description></long-description>
          <tag line="44" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Default">
        <name>testHandlesMethodReturnsBundleThatHandlesURI</name>
        <full_name>testHandlesMethodReturnsBundleThatHandlesURI</full_name>
        <docblock line="74">
          <description>Test Bundle::handles method.</description>
          <long-description></long-description>
          <tag line="74" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="91" package="Default">
        <name>testExistMethodIndicatesIfBundleExist</name>
        <full_name>testExistMethodIndicatesIfBundleExist</full_name>
        <docblock line="86">
          <description>Test the Bundle::exist method.</description>
          <long-description></long-description>
          <tag line="86" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="Default">
        <name>testStartedMethodIndicatesIfBundleIsStarted</name>
        <full_name>testStartedMethodIndicatesIfBundleIsStarted</full_name>
        <docblock line="97">
          <description>Test the Bundle::started method.</description>
          <long-description></long-description>
          <tag line="97" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="114" package="Default">
        <name>testPrefixMethodReturnsCorrectPrefix</name>
        <full_name>testPrefixMethodReturnsCorrectPrefix</full_name>
        <docblock line="109">
          <description>Test the Bundle::prefix method.</description>
          <long-description></long-description>
          <tag line="109" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="Default">
        <name>testClassPrefixMethodReturnsProperClassPrefixForBundle</name>
        <full_name>testClassPrefixMethodReturnsProperClassPrefixForBundle</full_name>
        <docblock line="120">
          <description>Test the Bundle::class_prefix method.</description>
          <long-description></long-description>
          <tag line="120" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="Default">
        <name>testPathMethodReturnsCorrectPath</name>
        <full_name>testPathMethodReturnsCorrectPath</full_name>
        <docblock line="131">
          <description>Test the Bundle::path method.</description>
          <long-description></long-description>
          <tag line="131" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="148" package="Default">
        <name>testAssetPathReturnsPathToBundlesAssets</name>
        <full_name>testAssetPathReturnsPathToBundlesAssets</full_name>
        <docblock line="143">
          <description>Test the Bundle::asset method.</description>
          <long-description></long-description>
          <tag line="143" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="161" package="Default">
        <name>testBundleNameCanBeRetrievedFromIdentifier</name>
        <full_name>testBundleNameCanBeRetrievedFromIdentifier</full_name>
        <docblock line="156">
          <description>Test the Bundle::name method.</description>
          <long-description></long-description>
          <tag line="156" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="173" package="Default">
        <name>testElementCanBeRetrievedFromIdentifier</name>
        <full_name>testElementCanBeRetrievedFromIdentifier</full_name>
        <docblock line="168">
          <description>Test the Bundle::element method.</description>
          <long-description></long-description>
          <tag line="168" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="185" package="Default">
        <name>testIdentifierCanBeConstructed</name>
        <full_name>testIdentifierCanBeConstructed</full_name>
        <docblock line="180">
          <description>Test the Bundle::identifier method.</description>
          <long-description></long-description>
          <tag line="180" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="197" package="Default">
        <name>testBundleNamesCanBeResolved</name>
        <full_name>testBundleNamesCanBeResolved</full_name>
        <docblock line="192">
          <description>Test the Bundle::resolve method.</description>
          <long-description></long-description>
          <tag line="192" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="208" package="Default">
        <name>testParseMethodReturnsElementAndIdentifier</name>
        <full_name>testParseMethodReturnsElementAndIdentifier</full_name>
        <docblock line="203">
          <description>Test the Bundle::parse method.</description>
          <long-description></long-description>
          <tag line="203" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="Default">
        <name>testOptionMethodReturnsBundleOption</name>
        <full_name>testOptionMethodReturnsBundleOption</full_name>
        <docblock line="216">
          <description>Test the Bundle::get method.</description>
          <long-description></long-description>
          <tag line="216" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="232" package="Default">
        <name>testAllMethodReturnsBundleArray</name>
        <full_name>testAllMethodReturnsBundleArray</full_name>
        <docblock line="227">
          <description>Test the Bundle::all method.</description>
          <long-description></long-description>
          <tag line="227" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="244" package="Default">
        <name>testNamesMethodReturnsBundleNames</name>
        <full_name>testNamesMethodReturnsBundleNames</full_name>
        <docblock line="239">
          <description>Test the Bundle::names method.</description>
          <long-description></long-description>
          <tag line="239" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/bundle.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \BundleTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/controller.test.php" hash="a1feb17459cb0068eb11e052d65a2ba3" package="Default">
    <include line="253" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ControllerTest</name>
      <full_name>\ControllerTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="5">
          <description>Setup the testing environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="13">
          <description>Tear down the testing environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="Default">
        <name>testBasicControllerActionCanBeCalled</name>
        <full_name>testBasicControllerActionCanBeCalled</full_name>
        <docblock line="24">
          <description>Test the Controller::call method.</description>
          <long-description></long-description>
          <tag line="24" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Default">
        <name>testAssignedBeforeFiltersAreRun</name>
        <full_name>testAssignedBeforeFiltersAreRun</full_name>
        <docblock line="37">
          <description>Test basic controller filters are called.</description>
          <long-description></long-description>
          <tag line="37" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="Default">
        <name>testOnlyFiltersOnlyApplyToTheirAssignedMethods</name>
        <full_name>testOnlyFiltersOnlyApplyToTheirAssignedMethods</full_name>
        <docblock line="53">
          <description>Test that "only" filters only apply to their assigned methods.</description>
          <long-description></long-description>
          <tag line="53" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="76" package="Default">
        <name>testExceptFiltersOnlyApplyToTheExlucdedMethods</name>
        <full_name>testExceptFiltersOnlyApplyToTheExlucdedMethods</full_name>
        <docblock line="71">
          <description>Test that "except" filters only apply to the excluded methods.</description>
          <long-description></long-description>
          <tag line="71" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="95" package="Default">
        <name>testFiltersCanBeConstrainedByRequestMethod</name>
        <full_name>testFiltersCanBeConstrainedByRequestMethod</full_name>
        <docblock line="90">
          <description>Test that filters can be constrained by the request method.</description>
          <long-description></long-description>
          <tag line="90" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="122" package="Default">
        <name>testGlobalBeforeFilterIsNotCalledByController</name>
        <full_name>testGlobalBeforeFilterIsNotCalledByController</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="138" package="Default">
        <name>testBeforeFiltersCanOverrideResponses</name>
        <full_name>testBeforeFiltersCanOverrideResponses</full_name>
        <docblock line="133">
          <description>Test that before filters can override the controller response.</description>
          <long-description></long-description>
          <tag line="133" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="148" package="Default">
        <name>testAfterFiltersDoNotAffectControllerResponse</name>
        <full_name>testAfterFiltersDoNotAffectControllerResponse</full_name>
        <docblock line="143">
          <description>Test that after filters do not affect the response.</description>
          <long-description></long-description>
          <tag line="143" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="158" package="Default">
        <name>testFilterParametersArePassedToTheFilter</name>
        <full_name>testFilterParametersArePassedToTheFilter</full_name>
        <docblock line="153">
          <description>Test that filter parameters are passed to the filter.</description>
          <long-description></long-description>
          <tag line="153" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="168" package="Default">
        <name>testMultipleFiltersCanBeAssignedToAnAction</name>
        <full_name>testMultipleFiltersCanBeAssignedToAnAction</full_name>
        <docblock line="163">
          <description>Test that multiple filters can be assigned to a single method.</description>
          <long-description></long-description>
          <tag line="163" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="184" package="Default">
        <name>testRestfulControllersRespondWithRestfulMethods</name>
        <full_name>testRestfulControllersRespondWithRestfulMethods</full_name>
        <docblock line="179">
          <description>Test Restful controllers respond by request method.</description>
          <long-description></long-description>
          <tag line="179" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="207" package="Default">
        <name>testTemplateControllersReturnTheTemplate</name>
        <full_name>testTemplateControllersReturnTheTemplate</full_name>
        <docblock line="202">
          <description>Test that the template is returned by template controllers.</description>
          <long-description></long-description>
          <tag line="202" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="Default">
        <name>testControllerTemplatesCanBeNamedViews</name>
        <full_name>testControllerTemplatesCanBeNamedViews</full_name>
        <docblock line="216">
          <description>Test that controller templates can be named views.</description>
          <long-description></long-description>
          <tag line="216" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="239" package="Default">
        <name>testTheTemplateCanBeOverriden</name>
        <full_name>testTheTemplateCanBeOverriden</full_name>
        <docblock line="234">
          <description>Test that the "layout" method is called on the controller.</description>
          <long-description></long-description>
          <tag line="234" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="249" package="Default">
        <name>testResolveMethodChecksTheIoCContainer</name>
        <full_name>testResolveMethodChecksTheIoCContainer</full_name>
        <docblock line="244">
          <description>Test the Controller::resolve method.</description>
          <long-description></long-description>
          <tag line="244" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/controller.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \ControllerTest</error>
      <error line="122" code="50010">No DocBlock was found for method testGlobalBeforeFilterIsNotCalledByController()</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/auth.test.php" hash="f1ca27313950cd95adbf665d90036bfc" package="Default">
    <class final="false" abstract="false" namespace="global" line="12" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>AuthTest</name>
      <full_name>\AuthTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="Default">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="14">
          <description>Setup teh test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="30">
          <description>Tear down the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="52" package="Default">
        <name>setServerVar</name>
        <full_name>setServerVar</full_name>
        <docblock line="46">
          <description>Set one of the $_SERVER variables.</description>
          <long-description></long-description>
          <tag line="46" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="52">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="64" package="Default">
        <name>restartRequest</name>
        <full_name>restartRequest</full_name>
        <docblock line="59">
          <description>Reinitialize the global request.</description>
          <long-description></long-description>
          <tag line="59" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="78" package="Default">
        <name>testUserMethodReturnsCurrentUser</name>
        <full_name>testUserMethodReturnsCurrentUser</full_name>
        <docblock line="73">
          <description>Test the Auth::user method.</description>
          <long-description></long-description>
          <tag line="73" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="90" package="Default">
        <name>testCheckMethodReturnsTrueWhenUserIsSet</name>
        <full_name>testCheckMethodReturnsTrueWhenUserIsSet</full_name>
        <docblock line="85">
          <description>Test the Auth::check method.</description>
          <long-description></long-description>
          <tag line="85" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="Default">
        <name>testCheckMethodReturnsFalseWhenNoUserIsSet</name>
        <full_name>testCheckMethodReturnsFalseWhenNoUserIsSet</full_name>
        <docblock line="97">
          <description>Test the Auth::check method.</description>
          <long-description></long-description>
          <tag line="97" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="114" package="Default">
        <name>testGuestReturnsTrueWhenNoUserIsSet</name>
        <full_name>testGuestReturnsTrueWhenNoUserIsSet</full_name>
        <docblock line="109">
          <description>Test the Auth::guest method.</description>
          <long-description></long-description>
          <tag line="109" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="126" package="Default">
        <name>testGuestReturnsFalseWhenUserIsSet</name>
        <full_name>testGuestReturnsFalseWhenUserIsSet</full_name>
        <docblock line="121">
          <description>Test the Auth::guest method.</description>
          <long-description></long-description>
          <tag line="121" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="138" package="Default">
        <name>testUserMethodReturnsNullWhenNoUserExistsAndNoRecallerExists</name>
        <full_name>testUserMethodReturnsNullWhenNoUserExistsAndNoRecallerExists</full_name>
        <docblock line="133">
          <description>Test the Auth::user method.</description>
          <long-description></long-description>
          <tag line="133" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="150" package="Default">
        <name>testUserReturnsUserByID</name>
        <full_name>testUserReturnsUserByID</full_name>
        <docblock line="145">
          <description>Test the Auth::user method.</description>
          <long-description></long-description>
          <tag line="145" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="166" package="Default">
        <name>testNullReturnedWhenUserIDNotValidInteger</name>
        <full_name>testNullReturnedWhenUserIDNotValidInteger</full_name>
        <docblock line="161">
          <description>Test the Auth::user method.</description>
          <long-description></long-description>
          <tag line="161" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="180" package="Default">
        <name>testUserCanBeRecalledViaCookie</name>
        <full_name>testUserCanBeRecalledViaCookie</full_name>
        <docblock line="175">
          <description>Test the Auth::recall method.</description>
          <long-description></long-description>
          <tag line="175" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="199" package="Default">
        <name>testAttemptMethodReturnsFalseWhenCredentialsAreInvalid</name>
        <full_name>testAttemptMethodReturnsFalseWhenCredentialsAreInvalid</full_name>
        <docblock line="194">
          <description>Test the Auth::attempt method.</description>
          <long-description></long-description>
          <tag line="194" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="213" package="Default">
        <name>testAttemptReturnsTrueWhenCredentialsAreCorrect</name>
        <full_name>testAttemptReturnsTrueWhenCredentialsAreCorrect</full_name>
        <docblock line="208">
          <description>Test the Auth::attempt method.</description>
          <long-description></long-description>
          <tag line="208" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="238" package="Default">
        <name>testLoginMethodStoresUserKeyInSession</name>
        <full_name>testLoginMethodStoresUserKeyInSession</full_name>
        <docblock line="233">
          <description>Test Auth::login method.</description>
          <long-description></long-description>
          <tag line="233" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="263" package="Default">
        <name>testLoginStoresRememberCookieWhenNeeded</name>
        <full_name>testLoginStoresRememberCookieWhenNeeded</full_name>
        <docblock line="258">
          <description>Test the Auth::login method.</description>
          <long-description></long-description>
          <tag line="258" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="295" package="Default">
        <name>testLogoutMethodLogsOutUser</name>
        <full_name>testLogoutMethodLogsOutUser</full_name>
        <docblock line="290">
          <description>Test the Auth::logout method.</description>
          <long-description></long-description>
          <tag line="290" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="314" package="Default">
        <name>testAuthEventIsCalledProperly</name>
        <full_name>testAuthEventIsCalledProperly</full_name>
        <docblock line="309">
          <description>Test `laravel.auth: login` and `laravel.auth: logout` is called properly</description>
          <long-description></long-description>
          <tag line="309" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="342" package="Default">
      <extends>\Laravel\Auth\Drivers\Driver</extends>
      <name>AuthUserReturnsNull</name>
      <full_name>\AuthUserReturnsNull</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="344" package="Default">
        <name>user</name>
        <full_name>user</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="346" package="Default">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <argument line="346">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="348" package="Default">
        <name>attempt</name>
        <full_name>attempt</full_name>
        <argument line="348">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="352" package="Default">
      <extends>\Laravel\Auth\Drivers\Driver</extends>
      <name>AuthUserReturnsDummy</name>
      <full_name>\AuthUserReturnsDummy</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="354" package="Default">
        <name>user</name>
        <full_name>user</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="356" package="Default">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <argument line="356">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="358" package="Default">
        <name>attempt</name>
        <full_name>attempt</full_name>
        <argument line="358">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="365" package="Default">
      <extends>\Laravel\Auth\Drivers\Fluent</extends>
      <name>AuthLoginStub</name>
      <full_name>\AuthLoginStub</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="367" package="Default">
        <name>login</name>
        <full_name>login</full_name>
        <argument line="367">
          <name>$user</name>
          <default></default>
          <type/>
        </argument>
        <argument line="367">
          <name>$remember</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="376" package="Default">
        <name>logout</name>
        <full_name>logout</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="381" package="Default">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <argument line="381">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <fixme line="66">Ugly hack, but old contents from previous requests seem to</fixme>
      <fixme line="245">Not sure whether hard-coding the key is a good idea.</fixme>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/auth.test.php</error>
      <error line="12" code="50000">No DocBlock was found for \AuthTest</error>
      <error line="342" code="50000">No DocBlock was found for \AuthUserReturnsNull</error>
      <error line="344" code="50010">No DocBlock was found for method user()</error>
      <error line="346" code="50010">No DocBlock was found for method retrieve()</error>
      <error line="348" code="50010">No DocBlock was found for method attempt()</error>
      <error line="352" code="50000">No DocBlock was found for \AuthUserReturnsDummy</error>
      <error line="354" code="50010">No DocBlock was found for method user()</error>
      <error line="356" code="50010">No DocBlock was found for method retrieve()</error>
      <error line="358" code="50010">No DocBlock was found for method attempt()</error>
      <error line="365" code="50000">No DocBlock was found for \AuthLoginStub</error>
      <error line="367" code="50010">No DocBlock was found for method login()</error>
      <error line="376" code="50010">No DocBlock was found for method logout()</error>
      <error line="381" code="50010">No DocBlock was found for method retrieve()</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/routing.test.php" hash="abab3450a872273129a7efc67a6dc265" package="Default">
    <class final="false" abstract="false" namespace="global" line="5" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>RoutingTest</name>
      <full_name>\RoutingTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="7">
          <description>Destroy the testing environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="21" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="18">
          <description>Destroy the testing environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="Default">
        <name>testNamedRoutesCanBeLocatedByTheRouter</name>
        <full_name>testNamedRoutesCanBeLocatedByTheRouter</full_name>
        <docblock line="29">
          <description>Test the Router::find method.</description>
          <long-description></long-description>
          <tag line="29" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="Default">
        <name>testBasicRouteCanBeRouted</name>
        <full_name>testBasicRouteCanBeRouted</full_name>
        <docblock line="46">
          <description>Test the basic routing mechanism.</description>
          <long-description></long-description>
          <tag line="46" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="Default">
        <name>testWildcardRoutesCanBeRouted</name>
        <full_name>testWildcardRoutesCanBeRouted</full_name>
        <docblock line="61">
          <description>Test that the router can handle basic wildcards.</description>
          <long-description></long-description>
          <tag line="61" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="Default">
        <name>testOptionalWildcardsCanBeRouted</name>
        <full_name>testOptionalWildcardsCanBeRouted</full_name>
        <docblock line="84">
          <description>Test that optional wildcards can be routed.</description>
          <long-description></long-description>
          <tag line="84" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="111" package="Default">
        <name>testBasicRouteToControllerIsRouted</name>
        <full_name>testBasicRouteToControllerIsRouted</full_name>
        <docblock line="106">
          <description>Test that basic controller routing is working.</description>
          <long-description></long-description>
          <tag line="106" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="Default">
        <name>testRoutesToBundlesCanBeResolved</name>
        <full_name>testRoutesToBundlesCanBeResolved</full_name>
        <docblock line="120">
          <description>Test basic bundle route resolution.</description>
          <long-description></long-description>
          <tag line="120" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="Default">
        <name>testBundleControllersCanBeResolved</name>
        <full_name>testBundleControllersCanBeResolved</full_name>
        <docblock line="131">
          <description>Test bundle controller route resolution.</description>
          <long-description></long-description>
          <tag line="131" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="147" package="Default">
        <name>testForeignCharsInRoutes</name>
        <full_name>testForeignCharsInRoutes</full_name>
        <docblock line="142">
          <description>Test foreign characters can be used in routes.</description>
          <long-description></long-description>
          <tag line="142" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/routing.test.php</error>
      <error line="5" code="50000">No DocBlock was found for \RoutingTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/uri.test.php" hash="8afa008ba8569ed9ca9177287b344548" package="Default">
    <class final="false" abstract="false" namespace="global" line="5" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>URITest</name>
      <full_name>\URITest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="7">
          <description>Destroy the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="22" package="Default">
        <name>setRequestUri</name>
        <full_name>setRequestUri</full_name>
        <docblock line="17">
          <description>Set this request's URI to the given string</description>
          <long-description></long-description>
          <tag line="17" name="param" description="" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="Default">
        <name>testCorrectURIIsReturnedByCurrentMethod</name>
        <full_name>testCorrectURIIsReturnedByCurrentMethod</full_name>
        <docblock line="32">
          <description>Test the URI::current method.</description>
          <long-description></long-description>
          <tag line="32" name="group" description="laravel"/>
          <tag line="32" name="dataProvider" description="requestUriProvider"/>
        </docblock>
        <argument line="38">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="38">
          <name>$expectation</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Default">
        <name>testSegmentMethodReturnsAURISegment</name>
        <full_name>testSegmentMethodReturnsAURISegment</full_name>
        <docblock line="45">
          <description>Test the URI::segment method.</description>
          <long-description></long-description>
          <tag line="45" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Default">
        <name>requestUriProvider</name>
        <full_name>requestUriProvider</full_name>
        <docblock line="58">
          <description>Data provider for the URI::current test.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <markers>
      <fixme line="24">Ugly hack, but old contents from previous requests seem to</fixme>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/uri.test.php</error>
      <error line="5" code="50000">No DocBlock was found for \URITest</error>
      <error line="32" code="50015">Argument $uri is missing from the Docblock of testCorrectURIIsReturnedByCurrentMethod()</error>
      <error line="32" code="50015">Argument $expectation is missing from the Docblock of testCorrectURIIsReturnedByCurrentMethod()</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/ioc.test.php" hash="ecc4216ff6dd039d824ff68ce8d6f769" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>IoCTest</name>
      <full_name>\IoCTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>testRegisteredClassCanBeResolved</name>
        <full_name>testRegisteredClassCanBeResolved</full_name>
        <docblock line="5">
          <description>Test IoC::register and IoC::resolve.</description>
          <long-description></long-description>
          <tag line="5" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Default">
        <name>testSingletonsAreCreatedOnce</name>
        <full_name>testSingletonsAreCreatedOnce</full_name>
        <docblock line="20">
          <description>Test that singletons are created once.</description>
          <long-description></long-description>
          <tag line="20" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Default">
        <name>testInstancesAreReturnedBySingleton</name>
        <full_name>testInstancesAreReturnedBySingleton</full_name>
        <docblock line="37">
          <description>Test the IoC::instance method.</description>
          <long-description></long-description>
          <tag line="37" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="54" package="Default">
        <name>testRegisteredMethodIndicatesIfRegistered</name>
        <full_name>testRegisteredMethodIndicatesIfRegistered</full_name>
        <docblock line="51">
          <description>Test the IoC::registered method.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="Default">
        <name>testControllerMethodRegistersAController</name>
        <full_name>testControllerMethodRegistersAController</full_name>
        <docblock line="62">
          <description>Test the IoC::controller method.</description>
          <long-description></long-description>
          <tag line="62" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/ioc.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \IoCTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/hash.test.php" hash="941b483e4b8073c2646c3018534f7270" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>HashTest</name>
      <full_name>\HashTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>testHashProducesValidBcryptHash</name>
        <full_name>testHashProducesValidBcryptHash</full_name>
        <docblock line="5">
          <description>Test the Hash::make method.</description>
          <long-description></long-description>
          <tag line="5" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>testHashCheckFailsWhenNotMatching</name>
        <full_name>testHashCheckFailsWhenNotMatching</full_name>
        <docblock line="15">
          <description>Test the Hash::check method.</description>
          <long-description></long-description>
          <tag line="15" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Default">
        <name>testHashCheckPassesWhenMatches</name>
        <full_name>testHashCheckPassesWhenMatches</full_name>
        <docblock line="27">
          <description>Test the Hash::check method.</description>
          <long-description></long-description>
          <tag line="27" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/hash.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \HashTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/fluent.test.php" hash="4b27940ce9ca2205932ed247c1e9b596" package="Default">
    <class final="false" abstract="false" namespace="global" line="5" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>FluentTest</name>
      <full_name>\FluentTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="12" package="Default">
        <name>testAttributesAreSetByConstructor</name>
        <full_name>testAttributesAreSetByConstructor</full_name>
        <docblock line="7">
          <description>Test the Fluent constructor.</description>
          <long-description></long-description>
          <tag line="7" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Default">
        <name>testGetMethodReturnsAttribute</name>
        <full_name>testGetMethodReturnsAttribute</full_name>
        <docblock line="21">
          <description>Test the Fluent::get method.</description>
          <long-description></long-description>
          <tag line="21" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="Default">
        <name>testMagicMethodsCanBeUsedToSetAttributes</name>
        <full_name>testMagicMethodsCanBeUsedToSetAttributes</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/fluent.test.php</error>
      <error line="5" code="50000">No DocBlock was found for \FluentTest</error>
      <error line="36" code="50010">No DocBlock was found for method testMagicMethodsCanBeUsedToSetAttributes()</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/eloquent.test.php" hash="210f2e303c806ce0bb8d9ff5677dae7d" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>EloquentTest</name>
      <full_name>\EloquentTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>testAttributesAreSetByConstructor</name>
        <full_name>testAttributesAreSetByConstructor</full_name>
        <docblock line="5">
          <description>Test the Model constructor.</description>
          <long-description></long-description>
          <tag line="5" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Default">
        <name>testAttributesAreSetByFillMethod</name>
        <full_name>testAttributesAreSetByFillMethod</full_name>
        <docblock line="21">
          <description>Test the Model::fill method.</description>
          <long-description></long-description>
          <tag line="21" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="Default">
        <name>testAttributesAreSetByFillRawMethod</name>
        <full_name>testAttributesAreSetByFillRawMethod</full_name>
        <docblock line="38">
          <description>Test the Model::fill_raw method.</description>
          <long-description></long-description>
          <tag line="38" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="Default">
        <name>testAttributesAreSetByFillMethodWithAccessible</name>
        <full_name>testAttributesAreSetByFillMethodWithAccessible</full_name>
        <docblock line="53">
          <description>Test the Model::fill method with accessible.</description>
          <long-description></long-description>
          <tag line="53" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Default">
        <name>testAttributesAreSetByFillMethodWithEmptyAccessible</name>
        <full_name>testAttributesAreSetByFillMethodWithEmptyAccessible</full_name>
        <docblock line="74">
          <description>Test the Model::fill method with empty accessible array.</description>
          <long-description></long-description>
          <tag line="74" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="101" package="Default">
        <name>testAttributesAreSetByFillRawMethodWithAccessible</name>
        <full_name>testAttributesAreSetByFillRawMethodWithAccessible</full_name>
        <docblock line="96">
          <description>Test the Model::fill_raw method with accessible.</description>
          <long-description></long-description>
          <tag line="96" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="Default">
        <name>testAttributeMagicSetterMethodChangesAttribute</name>
        <full_name>testAttributeMagicSetterMethodChangesAttribute</full_name>
        <docblock line="115">
          <description>Test the Model::__set method.</description>
          <long-description></long-description>
          <tag line="115" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="141" package="Default">
        <name>testAttributeMagicGetterMethodReturnsAttribute</name>
        <full_name>testAttributeMagicGetterMethodReturnsAttribute</full_name>
        <docblock line="136">
          <description>Test the Model::__get method.</description>
          <long-description></long-description>
          <tag line="136" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="156" package="Default">
        <name>testAttributeSetterMethodChangesAttribute</name>
        <full_name>testAttributeSetterMethodChangesAttribute</full_name>
        <docblock line="151">
          <description>Test the Model::set_* method.</description>
          <long-description></long-description>
          <tag line="151" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="177" package="Default">
        <name>testAttributeGetterMethodReturnsAttribute</name>
        <full_name>testAttributeGetterMethodReturnsAttribute</full_name>
        <docblock line="172">
          <description>Test the Model::get_* method.</description>
          <long-description></long-description>
          <tag line="172" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="192" package="Default">
        <name>testDeterminationOfChangedAttributes</name>
        <full_name>testDeterminationOfChangedAttributes</full_name>
        <docblock line="187">
          <description>Test determination of dirty/changed attributes.</description>
          <long-description></long-description>
          <tag line="187" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="222" package="Default">
        <name>testAttributePurge</name>
        <full_name>testAttributePurge</full_name>
        <docblock line="217">
          <description>Test the Model::purge method.</description>
          <long-description></long-description>
          <tag line="217" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="244" package="Default">
        <name>testTableMethodReturnsCorrectName</name>
        <full_name>testTableMethodReturnsCorrectName</full_name>
        <docblock line="239">
          <description>Test the Model::table method.</description>
          <long-description></long-description>
          <tag line="239" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="261" package="Default">
        <name>testConvertingToArray</name>
        <full_name>testConvertingToArray</full_name>
        <docblock line="256">
          <description>Test the Model::to_array method.</description>
          <long-description></long-description>
          <tag line="256" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/eloquent.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \EloquentTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/input.test.php" hash="59895a8df974128832f8efac2af4d63d" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>InputTest</name>
      <full_name>\InputTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="5">
          <description>Setup the testing environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="13">
          <description>Tear down the testing environemnt.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Default">
        <name>testAllMethodReturnsInputAndFiles</name>
        <full_name>testAllMethodReturnsInputAndFiles</full_name>
        <docblock line="23">
          <description>Test the Input::all method.</description>
          <long-description></long-description>
          <tag line="23" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Default">
        <name>testHasMethodIndicatesTheExistenceOfInput</name>
        <full_name>testHasMethodIndicatesTheExistenceOfInput</full_name>
        <docblock line="37">
          <description>Test the Input::has method.</description>
          <long-description></long-description>
          <tag line="37" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="Default">
        <name>testGetMethodReturnsInputValue</name>
        <full_name>testGetMethodReturnsInputValue</full_name>
        <docblock line="51">
          <description>Test the Input::get method.</description>
          <long-description></long-description>
          <tag line="51" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="Default">
        <name>testOnlyMethodReturnsSubsetOfInput</name>
        <full_name>testOnlyMethodReturnsSubsetOfInput</full_name>
        <docblock line="64">
          <description>Test the Input::only method.</description>
          <long-description></long-description>
          <tag line="64" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="81" package="Default">
        <name>testExceptMethodReturnsSubsetOfInput</name>
        <full_name>testExceptMethodReturnsSubsetOfInput</full_name>
        <docblock line="76">
          <description>Test the Input::except method.</description>
          <long-description></long-description>
          <tag line="76" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="Default">
        <name>testOldInputCanBeRetrievedFromSession</name>
        <full_name>testOldInputCanBeRetrievedFromSession</full_name>
        <docblock line="88">
          <description>Test the Input::old method.</description>
          <long-description></long-description>
          <tag line="88" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="Default">
        <name>testFileMethodReturnsFromFileArray</name>
        <full_name>testFileMethodReturnsFromFileArray</full_name>
        <docblock line="105">
          <description>Test the Input::file method.</description>
          <long-description></long-description>
          <tag line="105" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="Default">
        <name>testFlashMethodFlashesInputToSession</name>
        <full_name>testFlashMethodFlashesInputToSession</full_name>
        <docblock line="118">
          <description>Test the Input::flash method.</description>
          <long-description></long-description>
          <tag line="118" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="148" package="Default">
        <name>testFlushMethodClearsFlashedInput</name>
        <full_name>testFlushMethodClearsFlashedInput</full_name>
        <docblock line="143">
          <description>Test the Input::flush method.</description>
          <long-description></long-description>
          <tag line="143" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="167" package="Default">
        <name>setSession</name>
        <full_name>setSession</full_name>
        <docblock line="164">
          <description>Set the session payload instance.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/input.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \InputTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/view.test.php" hash="fc65c97d07916ade74d0027485a5e9c4" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ViewTest</name>
      <full_name>\ViewTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="5">
          <description>Tear down the testing environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="Default">
        <name>testMakeMethodReturnsAViewInstance</name>
        <full_name>testMakeMethodReturnsAViewInstance</full_name>
        <docblock line="14">
          <description>Test the View::make method.</description>
          <long-description></long-description>
          <tag line="14" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="Default">
        <name>testViewNameIsSetByConstrutor</name>
        <full_name>testViewNameIsSetByConstrutor</full_name>
        <docblock line="24">
          <description>Test the View class constructor.</description>
          <long-description></long-description>
          <tag line="24" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="Default">
        <name>testViewIsCreatedWithCorrectPath</name>
        <full_name>testViewIsCreatedWithCorrectPath</full_name>
        <docblock line="36">
          <description>Test the View class constructor.</description>
          <long-description></long-description>
          <tag line="36" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="Default">
        <name>testBundleViewIsCreatedWithCorrectPath</name>
        <full_name>testBundleViewIsCreatedWithCorrectPath</full_name>
        <docblock line="51">
          <description>Test the View class constructor for bundles.</description>
          <long-description></long-description>
          <tag line="51" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="Default">
        <name>testDataIsSetOnViewByConstructor</name>
        <full_name>testDataIsSetOnViewByConstructor</full_name>
        <docblock line="66">
          <description>Test the View class constructor.</description>
          <long-description></long-description>
          <tag line="66" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Default">
        <name>testNameMethodRegistersAViewName</name>
        <full_name>testNameMethodRegistersAViewName</full_name>
        <docblock line="78">
          <description>Test the View::name method.</description>
          <long-description></long-description>
          <tag line="78" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="95" package="Default">
        <name>testSharedMethodAddsDataToSharedArray</name>
        <full_name>testSharedMethodAddsDataToSharedArray</full_name>
        <docblock line="90">
          <description>Test the View::shared method.</description>
          <long-description></long-description>
          <tag line="90" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="107" package="Default">
        <name>testViewDataCanBeSetUsingWithMethod</name>
        <full_name>testViewDataCanBeSetUsingWithMethod</full_name>
        <docblock line="102">
          <description>Test the View::with method.</description>
          <long-description></long-description>
          <tag line="102" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="119" package="Default">
        <name>testEmptyMessageContainerSetOnViewWhenNoErrorsInSession</name>
        <full_name>testEmptyMessageContainerSetOnViewWhenNoErrorsInSession</full_name>
        <docblock line="114">
          <description>Test the View class constructor.</description>
          <long-description></long-description>
          <tag line="114" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="131" package="Default">
        <name>testDataCanBeSetOnViewsThroughMagicMethods</name>
        <full_name>testDataCanBeSetOnViewsThroughMagicMethods</full_name>
        <docblock line="126">
          <description>Test the View __set method.</description>
          <long-description></long-description>
          <tag line="126" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="145" package="Default">
        <name>testDataCanBeRetrievedFromViewsThroughMagicMethods</name>
        <full_name>testDataCanBeRetrievedFromViewsThroughMagicMethods</full_name>
        <docblock line="140">
          <description>Test the View __get method.</description>
          <long-description></long-description>
          <tag line="140" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="159" package="Default">
        <name>testDataCanBeSetOnTheViewThroughArrayAccess</name>
        <full_name>testDataCanBeSetOnTheViewThroughArrayAccess</full_name>
        <docblock line="154">
          <description>Test the View's ArrayAccess implementation.</description>
          <long-description></long-description>
          <tag line="154" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="173" package="Default">
        <name>testDataCanBeRetrievedThroughArrayAccess</name>
        <full_name>testDataCanBeRetrievedThroughArrayAccess</full_name>
        <docblock line="168">
          <description>Test the View's ArrayAccess implementation.</description>
          <long-description></long-description>
          <tag line="168" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="187" package="Default">
        <name>testNestMethodSetsViewInstanceInData</name>
        <full_name>testNestMethodSetsViewInstanceInData</full_name>
        <docblock line="182">
          <description>Test the View::nest method.</description>
          <long-description></long-description>
          <tag line="182" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="Default">
        <name>testDataIsPassedToViewCorrectly</name>
        <full_name>testDataIsPassedToViewCorrectly</full_name>
        <docblock line="196">
          <description>Test that the registered data is passed to the view correctly.</description>
          <long-description></long-description>
          <tag line="196" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="215" package="Default">
        <name>testNestedViewsAreRendered</name>
        <full_name>testNestedViewsAreRendered</full_name>
        <docblock line="210">
          <description>Test that the View class renders nested views.</description>
          <long-description></long-description>
          <tag line="210" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="229" package="Default">
        <name>testNestedResponsesAreRendered</name>
        <full_name>testNestedResponsesAreRendered</full_name>
        <docblock line="224">
          <description>Test that the View class renders nested responses.</description>
          <long-description></long-description>
          <tag line="224" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="243" package="Default">
        <name>testComposerEventIsCalledWhenViewIsRendering</name>
        <full_name>testComposerEventIsCalledWhenViewIsRendering</full_name>
        <docblock line="238">
          <description>Test the View class raises a composer event.</description>
          <long-description></long-description>
          <tag line="238" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/view.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \ViewTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/query.test.php" hash="0090e009cc8bcd2e4b6cd79d1ea24543" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>QueryTest</name>
      <full_name>\QueryTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>testFindMethodCanReturnByID</name>
        <full_name>testFindMethodCanReturnByID</full_name>
        <docblock line="5">
          <description>Test the "find" method.</description>
          <long-description></long-description>
          <tag line="5" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>testSelectMethodLimitsColumns</name>
        <full_name>testSelectMethodLimitsColumns</full_name>
        <docblock line="15">
          <description>Test the select method.</description>
          <long-description></long-description>
          <tag line="15" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Default">
        <name>testRawWhereCanBeUsed</name>
        <full_name>testRawWhereCanBeUsed</full_name>
        <docblock line="28">
          <description>Test the raw_where method.</description>
          <long-description></long-description>
          <tag line="28" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="43" package="Default">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="38">
          <description>Get the query instance for the test case.</description>
          <long-description></long-description>
          <tag line="38" name="return" description="" type="\Query">
            <type by_reference="false">\Query</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/query.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \QueryTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/url.test.php" hash="da2f393e93cefd2111d4b5b5f54e366e" package="Default">
    <class final="false" abstract="false" namespace="global" line="5" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>URLTest</name>
      <full_name>\URLTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="7">
          <description>Setup the test enviornment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="21">
          <description>Destroy the test enviornment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="Default">
        <name>testToMethodGeneratesURL</name>
        <full_name>testToMethodGeneratesURL</full_name>
        <docblock line="36">
          <description>Test the URL::to method.</description>
          <long-description></long-description>
          <tag line="36" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Default">
        <name>testToActionMethodGeneratesURLToControllerAction</name>
        <full_name>testToActionMethodGeneratesURLToControllerAction</full_name>
        <docblock line="56">
          <description>Test the URL::to_action method.</description>
          <long-description></long-description>
          <tag line="56" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="Default">
        <name>testToAssetGeneratesURLWithoutFrontControllerInURL</name>
        <full_name>testToAssetGeneratesURLWithoutFrontControllerInURL</full_name>
        <docblock line="70">
          <description>Test the URL::to_asset method.</description>
          <long-description></long-description>
          <tag line="70" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="97" package="Default">
        <name>testToRouteMethodGeneratesURLsToRoutes</name>
        <full_name>testToRouteMethodGeneratesURLsToRoutes</full_name>
        <docblock line="92">
          <description>Test the URL::to_route method.</description>
          <long-description></long-description>
          <tag line="92" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="114" package="Default">
        <name>testToLanguageMethodGeneratesURLsToDifferentLanguage</name>
        <full_name>testToLanguageMethodGeneratesURLsToDifferentLanguage</full_name>
        <docblock line="109">
          <description>Test the URL::to_language method.</description>
          <long-description></long-description>
          <tag line="109" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="135" package="Default">
        <name>testUrlsGeneratedWithLanguages</name>
        <full_name>testUrlsGeneratedWithLanguages</full_name>
        <docblock line="130">
          <description>Test language based URL generation.</description>
          <long-description></long-description>
          <tag line="130" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/url.test.php</error>
      <error line="5" code="50000">No DocBlock was found for \URLTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/asset.test.php" hash="7f2d9686d4bf099c13b1e064f8e4342b" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>AssetTest</name>
      <full_name>\AssetTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="5">
          <description>Initialize the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>testContainersCanBeCreated</name>
        <full_name>testContainersCanBeCreated</full_name>
        <docblock line="15">
          <description>Test the Asset::container method.</description>
          <long-description></long-description>
          <tag line="15" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Default">
        <name>testDefaultContainerCreatedByDefault</name>
        <full_name>testDefaultContainerCreatedByDefault</full_name>
        <docblock line="28">
          <description>Test the Asset::container method for default container creation.</description>
          <long-description></long-description>
          <tag line="28" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="Default">
        <name>testContainerMethodsCanBeDynamicallyCalled</name>
        <full_name>testContainerMethodsCanBeDynamicallyCalled</full_name>
        <docblock line="38">
          <description>Test the Asset::__callStatic method.</description>
          <long-description></long-description>
          <tag line="38" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="55" package="Default">
        <name>testNameIsSetOnAssetContainerConstruction</name>
        <full_name>testNameIsSetOnAssetContainerConstruction</full_name>
        <docblock line="50">
          <description>Test the Asset_Container constructor.</description>
          <long-description></long-description>
          <tag line="50" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="Default">
        <name>testAddMethodProperlySniffsAssetType</name>
        <full_name>testAddMethodProperlySniffsAssetType</full_name>
        <docblock line="62">
          <description>Test the Asset_Container::add method.</description>
          <long-description></long-description>
          <tag line="62" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Default">
        <name>testStyleMethodProperlyRegistersAnAsset</name>
        <full_name>testStyleMethodProperlyRegistersAnAsset</full_name>
        <docblock line="78">
          <description>Test the Asset_Container::style method.</description>
          <long-description></long-description>
          <tag line="78" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="97" package="Default">
        <name>testStyleMethodProperlySetsMediaAttributeIfNotSet</name>
        <full_name>testStyleMethodProperlySetsMediaAttributeIfNotSet</full_name>
        <docblock line="92">
          <description>Test the Asset_Container::style method sets media attribute.</description>
          <long-description></long-description>
          <tag line="92" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="111" package="Default">
        <name>testStyleMethodProperlyIgnoresMediaAttributeIfSet</name>
        <full_name>testStyleMethodProperlyIgnoresMediaAttributeIfSet</full_name>
        <docblock line="106">
          <description>Test the Asset_Container::style method sets media attribute.</description>
          <long-description></long-description>
          <tag line="106" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="Default">
        <name>testScriptMethodProperlyRegistersAnAsset</name>
        <full_name>testScriptMethodProperlyRegistersAnAsset</full_name>
        <docblock line="120">
          <description>Test the Asset_Container::script method.</description>
          <long-description></long-description>
          <tag line="120" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="139" package="Default">
        <name>testAddMethodProperlySetsDependencies</name>
        <full_name>testAddMethodProperlySetsDependencies</full_name>
        <docblock line="134">
          <description>Test the Asset_Container::add method properly sets dependencies.</description>
          <long-description></long-description>
          <tag line="134" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="Default">
        <name>testAddMethodProperlySetsAttributes</name>
        <full_name>testAddMethodProperlySetsAttributes</full_name>
        <docblock line="150">
          <description>Test the Asset_Container::add method properly sets attributes.</description>
          <long-description></long-description>
          <tag line="150" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="171" package="Default">
        <name>testBundleMethodCorrectlySetsTheAssetBundle</name>
        <full_name>testBundleMethodCorrectlySetsTheAssetBundle</full_name>
        <docblock line="166">
          <description>Test the Asset_Container::bundle method.</description>
          <long-description></long-description>
          <tag line="166" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="185" package="Default">
        <name>testPathMethodReturnsCorrectPathForABundleAsset</name>
        <full_name>testPathMethodReturnsCorrectPathForABundleAsset</full_name>
        <docblock line="180">
          <description>Test the Asset_Container::path method.</description>
          <long-description></long-description>
          <tag line="180" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="199" package="Default">
        <name>testPathMethodReturnsCorrectPathForAnApplicationAsset</name>
        <full_name>testPathMethodReturnsCorrectPathForAnApplicationAsset</full_name>
        <docblock line="194">
          <description>Test the Asset_Container::path method.</description>
          <long-description></long-description>
          <tag line="194" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="211" package="Default">
        <name>testScriptsCanBeRetrieved</name>
        <full_name>testScriptsCanBeRetrieved</full_name>
        <docblock line="206">
          <description>Test the Asset_Container::scripts method.</description>
          <long-description></long-description>
          <tag line="206" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="231" package="Default">
        <name>testStylesCanBeRetrieved</name>
        <full_name>testStylesCanBeRetrieved</full_name>
        <docblock line="226">
          <description>Test the Asset_Container::styles method.</description>
          <long-description></long-description>
          <tag line="226" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="253" package="Default">
        <name>getContainer</name>
        <full_name>getContainer</full_name>
        <docblock line="247">
          <description>Get an asset container instance.</description>
          <long-description></long-description>
          <tag line="247" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="247" name="return" description="" type="\Asset_Container">
            <type by_reference="false">\Asset_Container</type>
          </tag>
        </docblock>
        <argument line="253">
          <name>$name</name>
          <default>'foo'</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/asset.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \AssetTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/validator.test.php" hash="2d3a9d368c6a910f013a76e8d7f705c1" package="Default">
    <include line="515" type="Require" package="Default">
      <name/>
    </include>
    <include line="560" type="Require" package="Default">
      <name/>
    </include>
    <include line="594" type="Require" package="Default">
      <name/>
    </include>
    <include line="628" type="Require" package="Default">
      <name/>
    </include>
    <include line="663" type="Require" package="Default">
      <name/>
    </include>
    <include line="681" type="Require" package="Default">
      <name/>
    </include>
    <include line="698" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ValidatorTest</name>
      <full_name>\ValidatorTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="5">
          <description>Setup the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="13">
          <description>Tear down the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="Default">
        <name>testRequiredRule</name>
        <full_name>testRequiredRule</full_name>
        <docblock line="22">
          <description>Test the required validation rule.</description>
          <long-description></long-description>
          <tag line="22" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="Default">
        <name>testTheConfirmedRule</name>
        <full_name>testTheConfirmedRule</full_name>
        <docblock line="46">
          <description>Test the confirmed validation rule.</description>
          <long-description></long-description>
          <tag line="46" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="Default">
        <name>testTheDifferentRule</name>
        <full_name>testTheDifferentRule</full_name>
        <docblock line="64">
          <description>Test the different validation rule.</description>
          <long-description></long-description>
          <tag line="64" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="Default">
        <name>testTheAcceptedRule</name>
        <full_name>testTheAcceptedRule</full_name>
        <docblock line="82">
          <description>Test the accepted validation rule.</description>
          <long-description></long-description>
          <tag line="82" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="Default">
        <name>testTheNumericRule</name>
        <full_name>testTheNumericRule</full_name>
        <docblock line="104">
          <description>Test the numeric validation rule.</description>
          <long-description></long-description>
          <tag line="104" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="130" package="Default">
        <name>testTheIntegerRule</name>
        <full_name>testTheIntegerRule</full_name>
        <docblock line="125">
          <description>Test the integer validation rule.</description>
          <long-description></long-description>
          <tag line="125" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="151" package="Default">
        <name>testTheSizeRule</name>
        <full_name>testTheSizeRule</full_name>
        <docblock line="146">
          <description>Test the size validation rule.</description>
          <long-description></long-description>
          <tag line="146" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="183" package="Default">
        <name>testTheBetweenRule</name>
        <full_name>testTheBetweenRule</full_name>
        <docblock line="178">
          <description>Test the between validation rule.</description>
          <long-description></long-description>
          <tag line="178" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="215" package="Default">
        <name>testTheMinRule</name>
        <full_name>testTheMinRule</full_name>
        <docblock line="210">
          <description>Test the between validation rule.</description>
          <long-description></long-description>
          <tag line="210" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="247" package="Default">
        <name>testTheMaxRule</name>
        <full_name>testTheMaxRule</full_name>
        <docblock line="242">
          <description>Test the between validation rule.</description>
          <long-description></long-description>
          <tag line="242" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="279" package="Default">
        <name>testTheInRule</name>
        <full_name>testTheInRule</full_name>
        <docblock line="274">
          <description>Test the in validation rule.</description>
          <long-description></long-description>
          <tag line="274" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="294" package="Default">
        <name>testTheNotInRule</name>
        <full_name>testTheNotInRule</full_name>
        <docblock line="289">
          <description>Test the not-in validation rule.</description>
          <long-description></long-description>
          <tag line="289" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="309" package="Default">
        <name>testTheIPRule</name>
        <full_name>testTheIPRule</full_name>
        <docblock line="304">
          <description>Test the IP validation rule.</description>
          <long-description></long-description>
          <tag line="304" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="324" package="Default">
        <name>testTheEmailRule</name>
        <full_name>testTheEmailRule</full_name>
        <docblock line="319">
          <description>Test the e-mail validation rule.</description>
          <long-description></long-description>
          <tag line="319" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="339" package="Default">
        <name>testTheUrlRule</name>
        <full_name>testTheUrlRule</full_name>
        <docblock line="334">
          <description>Test the URL validation rule.</description>
          <long-description></long-description>
          <tag line="334" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="354" package="Default">
        <name>testTheActiveUrlRule</name>
        <full_name>testTheActiveUrlRule</full_name>
        <docblock line="349">
          <description>Test the active URL validation rule.</description>
          <long-description></long-description>
          <tag line="349" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="369" package="Default">
        <name>testTheImageRule</name>
        <full_name>testTheImageRule</full_name>
        <docblock line="364">
          <description>Test the image validation rule.</description>
          <long-description></long-description>
          <tag line="364" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="384" package="Default">
        <name>testTheAlphaRule</name>
        <full_name>testTheAlphaRule</full_name>
        <docblock line="379">
          <description>Test the alpha validation rule.</description>
          <long-description></long-description>
          <tag line="379" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="399" package="Default">
        <name>testTheAlphaNumRule</name>
        <full_name>testTheAlphaNumRule</full_name>
        <docblock line="394">
          <description>Test the alpha_num validation rule.</description>
          <long-description></long-description>
          <tag line="394" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="414" package="Default">
        <name>testTheAlphaDashRule</name>
        <full_name>testTheAlphaDashRule</full_name>
        <docblock line="409">
          <description>Test the alpha_num validation rule.</description>
          <long-description></long-description>
          <tag line="409" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="429" package="Default">
        <name>testTheMimesRule</name>
        <full_name>testTheMimesRule</full_name>
        <docblock line="424">
          <description>Test the mimes validation rule.</description>
          <long-description></long-description>
          <tag line="424" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="451" package="Default">
        <name>testUniqueRule</name>
        <full_name>testUniqueRule</full_name>
        <docblock line="446">
          <description>Test the unique validation rule.</description>
          <long-description></long-description>
          <tag line="446" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="469" package="Default">
        <name>testExistsRule</name>
        <full_name>testExistsRule</full_name>
        <docblock line="464">
          <description>Tests the exists validation rule.</description>
          <long-description></long-description>
          <tag line="464" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="491" package="Default">
        <name>testTheDateFormatRule</name>
        <full_name>testTheDateFormatRule</full_name>
        <docblock line="486">
          <description>Tests the date_format validation rule.</description>
          <long-description></long-description>
          <tag line="486" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="513" package="Default">
        <name>testCorrectMessagesAreSet</name>
        <full_name>testCorrectMessagesAreSet</full_name>
        <docblock line="508">
          <description>Test that the validator sets the correct messages.</description>
          <long-description></long-description>
          <tag line="508" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="532" package="Default">
        <name>testCustomMessagesAreRecognize</name>
        <full_name>testCustomMessagesAreRecognize</full_name>
        <docblock line="527">
          <description>Test that custom messages are recognized.</description>
          <long-description></long-description>
          <tag line="527" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="558" package="Default">
        <name>testNumericSizeReplacementsAreMade</name>
        <full_name>testNumericSizeReplacementsAreMade</full_name>
        <docblock line="553">
          <description>Test that size replacements are made on messages.</description>
          <long-description></long-description>
          <tag line="553" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="592" package="Default">
        <name>testStringSizeReplacementsAreMade</name>
        <full_name>testStringSizeReplacementsAreMade</full_name>
        <docblock line="587">
          <description>Test that string size replacements are made on messages.</description>
          <long-description></long-description>
          <tag line="587" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="626" package="Default">
        <name>testFileSizeReplacementsAreMade</name>
        <full_name>testFileSizeReplacementsAreMade</full_name>
        <docblock line="621">
          <description>Test that string size replacements are made on messages.</description>
          <long-description></long-description>
          <tag line="621" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="661" package="Default">
        <name>testValuesGetReplaced</name>
        <full_name>testValuesGetReplaced</full_name>
        <docblock line="656">
          <description>Test that values get replaced in messages.</description>
          <long-description></long-description>
          <tag line="656" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="679" package="Default">
        <name>testCustomAttributesAreReplaced</name>
        <full_name>testCustomAttributesAreReplaced</full_name>
        <docblock line="674">
          <description>Test custom attribute names are replaced.</description>
          <long-description></long-description>
          <tag line="674" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="696" package="Default">
        <name>testRequiredWithAttributesAreReplaced</name>
        <full_name>testRequiredWithAttributesAreReplaced</full_name>
        <docblock line="691">
          <description>Test required_with attribute names are replaced.</description>
          <long-description></long-description>
          <tag line="691" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/validator.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \ValidatorTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/blade.test.php" hash="e41d6be57654fbe838471a65632e4532" package="Default">
    <class final="false" abstract="false" namespace="global" line="5" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>BladeTest</name>
      <full_name>\BladeTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="12" package="Default">
        <name>testEchosAreConvertedProperly</name>
        <full_name>testEchosAreConvertedProperly</full_name>
        <docblock line="7">
          <description>Test the compilation of echo statements.</description>
          <long-description></long-description>
          <tag line="7" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Default">
        <name>testCommentsAreConvertedProperly</name>
        <full_name>testCommentsAreConvertedProperly</full_name>
        <docblock line="25">
          <description>Test the compilation of comments statements.</description>
          <long-description></long-description>
          <tag line="25" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Default">
        <name>testControlStructuresAreCreatedCorrectly</name>
        <full_name>testControlStructuresAreCreatedCorrectly</full_name>
        <docblock line="39">
          <description>Test the compilation of control structures.</description>
          <long-description></long-description>
          <tag line="39" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="Default">
        <name>testYieldsAreCompiledCorrectly</name>
        <full_name>testYieldsAreCompiledCorrectly</full_name>
        <docblock line="72">
          <description>Test the compilation of yield statements.</description>
          <long-description></long-description>
          <tag line="72" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="Default">
        <name>testSectionsAreCompiledCorrectly</name>
        <full_name>testSectionsAreCompiledCorrectly</full_name>
        <docblock line="84">
          <description>Test the compilation of section statements.</description>
          <long-description></long-description>
          <tag line="84" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="101" package="Default">
        <name>testIncludesAreCompiledCorrectly</name>
        <full_name>testIncludesAreCompiledCorrectly</full_name>
        <docblock line="96">
          <description>Test the compilation of include statements.</description>
          <long-description></long-description>
          <tag line="96" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="115" package="Default">
        <name>testRendersAreCompiledCorrectly</name>
        <full_name>testRendersAreCompiledCorrectly</full_name>
        <docblock line="110">
          <description>Test the compilation of render statements.</description>
          <long-description></long-description>
          <tag line="110" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/blade.test.php</error>
      <error line="5" code="50000">No DocBlock was found for \BladeTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/str.test.php" hash="2e96e0c953597f9590d34d34757472f8" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>StrTest</name>
      <full_name>\StrTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>testEncodingShouldReturnApplicationEncoding</name>
        <full_name>testEncodingShouldReturnApplicationEncoding</full_name>
        <docblock line="5">
          <description>Test the Str::encoding method.</description>
          <long-description></long-description>
          <tag line="5" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="Default">
        <name>testStringLengthIsCorrect</name>
        <full_name>testStringLengthIsCorrect</full_name>
        <docblock line="18">
          <description>Test the Str::length method.</description>
          <long-description></long-description>
          <tag line="18" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="Default">
        <name>testStringCanBeConvertedToLowercase</name>
        <full_name>testStringCanBeConvertedToLowercase</full_name>
        <docblock line="29">
          <description>Test the Str::lower method.</description>
          <long-description></long-description>
          <tag line="29" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Default">
        <name>testStringCanBeConvertedToUppercase</name>
        <full_name>testStringCanBeConvertedToUppercase</full_name>
        <docblock line="40">
          <description>Test the Str::upper method.</description>
          <long-description></long-description>
          <tag line="40" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="Default">
        <name>testStringCanBeConvertedToTitleCase</name>
        <full_name>testStringCanBeConvertedToTitleCase</full_name>
        <docblock line="51">
          <description>Test the Str::title method.</description>
          <long-description></long-description>
          <tag line="51" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="Default">
        <name>testStringCanBeLimitedByCharacters</name>
        <full_name>testStringCanBeLimitedByCharacters</full_name>
        <docblock line="62">
          <description>Test the Str::limit method.</description>
          <long-description></long-description>
          <tag line="62" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Default">
        <name>testStringCanBeLimitedByWords</name>
        <full_name>testStringCanBeLimitedByWords</full_name>
        <docblock line="74">
          <description>Test the Str::words method.</description>
          <long-description></long-description>
          <tag line="74" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="91" package="Default">
        <name>testStringsCanBeSingularOrPlural</name>
        <full_name>testStringsCanBeSingularOrPlural</full_name>
        <docblock line="86">
          <description>Test the Str::plural and Str::singular methods.</description>
          <long-description></long-description>
          <tag line="86" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="Default">
        <name>testStringsCanBeSlugged</name>
        <full_name>testStringsCanBeSlugged</full_name>
        <docblock line="103">
          <description>Test the Str::slug method.</description>
          <long-description></long-description>
          <tag line="103" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="119" package="Default">
        <name>testStringsCanBeClassified</name>
        <full_name>testStringsCanBeClassified</full_name>
        <docblock line="114">
          <description>Test the Str::classify method.</description>
          <long-description></long-description>
          <tag line="114" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="130" package="Default">
        <name>testRandomStringsCanBeGenerated</name>
        <full_name>testRandomStringsCanBeGenerated</full_name>
        <docblock line="125">
          <description>Test the Str::random method.</description>
          <long-description></long-description>
          <tag line="125" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/str.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \StrTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/event.test.php" hash="73b37658ae304703f5350266b60c0c5e" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>EventTest</name>
      <full_name>\EventTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="5">
          <description>Tear down the testing environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="18" package="Default">
        <name>testListenersAreFiredForEvents</name>
        <full_name>testListenersAreFiredForEvents</full_name>
        <docblock line="13">
          <description>Test basic event firing.</description>
          <long-description></long-description>
          <tag line="13" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="Default">
        <name>testParametersCanBePassedToEvents</name>
        <full_name>testParametersCanBePassedToEvents</full_name>
        <docblock line="29">
          <description>Test parameters can be passed to event listeners.</description>
          <long-description></long-description>
          <tag line="29" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/event.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \EventTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/cases/form.test.php" hash="177aa9f15399f8f1865ba6b5d9e8bad2" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>FormTest</name>
      <full_name>\FormTest</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="5">
          <description>Setup the test environment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="Default">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="14">
          <description>Destroy the test enviornment.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Default">
        <name>testOpeningForm</name>
        <full_name>testOpeningForm</full_name>
        <docblock line="23">
          <description>Test the compilation of opening a form</description>
          <long-description></long-description>
          <tag line="23" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="Default">
        <name>testOpeningFormSecure</name>
        <full_name>testOpeningFormSecure</full_name>
        <docblock line="41">
          <description>Test the compilation of opening a secure form</description>
          <long-description></long-description>
          <tag line="41" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="Default">
        <name>testOpeningFormForFile</name>
        <full_name>testOpeningFormForFile</full_name>
        <docblock line="59">
          <description>Test the compilation of opening a form for files</description>
          <long-description></long-description>
          <tag line="59" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="Default">
        <name>testOpeningFormSecureForFile</name>
        <full_name>testOpeningFormSecureForFile</full_name>
        <docblock line="77">
          <description>Test the compilation of opening a secure form for files</description>
          <long-description></long-description>
          <tag line="77" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="Default">
        <name>testClosingForm</name>
        <full_name>testClosingForm</full_name>
        <docblock line="95">
          <description>Test the compilation of closing a form</description>
          <long-description></long-description>
          <tag line="95" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="Default">
        <name>testFormLabel</name>
        <full_name>testFormLabel</full_name>
        <docblock line="105">
          <description>Test the compilation of form label</description>
          <long-description></long-description>
          <tag line="105" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="124" package="Default">
        <name>testFormInput</name>
        <full_name>testFormInput</full_name>
        <docblock line="119">
          <description>Test the compilation of form input</description>
          <long-description></long-description>
          <tag line="119" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="140" package="Default">
        <name>testFormText</name>
        <full_name>testFormText</full_name>
        <docblock line="135">
          <description>Test the compilation of form text</description>
          <long-description></long-description>
          <tag line="135" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="158" package="Default">
        <name>testFormPassword</name>
        <full_name>testFormPassword</full_name>
        <docblock line="153">
          <description>Test the compilation of form password</description>
          <long-description></long-description>
          <tag line="153" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="Default">
        <name>testFormHidden</name>
        <full_name>testFormHidden</full_name>
        <docblock line="169">
          <description>Test the compilation of form hidden</description>
          <long-description></long-description>
          <tag line="169" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="192" package="Default">
        <name>testFormSearch</name>
        <full_name>testFormSearch</full_name>
        <docblock line="187">
          <description>Test the compilation of form search</description>
          <long-description></long-description>
          <tag line="187" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="210" package="Default">
        <name>testFormEmail</name>
        <full_name>testFormEmail</full_name>
        <docblock line="205">
          <description>Test the compilation of form email</description>
          <long-description></long-description>
          <tag line="205" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="228" package="Default">
        <name>testFormTelephone</name>
        <full_name>testFormTelephone</full_name>
        <docblock line="223">
          <description>Test the compilation of form telephone</description>
          <long-description></long-description>
          <tag line="223" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="246" package="Default">
        <name>testFormUrl</name>
        <full_name>testFormUrl</full_name>
        <docblock line="241">
          <description>Test the compilation of form url</description>
          <long-description></long-description>
          <tag line="241" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="264" package="Default">
        <name>testFormNumber</name>
        <full_name>testFormNumber</full_name>
        <docblock line="259">
          <description>Test the compilation of form number</description>
          <long-description></long-description>
          <tag line="259" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="282" package="Default">
        <name>testFormDate</name>
        <full_name>testFormDate</full_name>
        <docblock line="277">
          <description>Test the compilation of form date</description>
          <long-description></long-description>
          <tag line="277" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="300" package="Default">
        <name>testFormFile</name>
        <full_name>testFormFile</full_name>
        <docblock line="295">
          <description>Test the compilation of form file</description>
          <long-description></long-description>
          <tag line="295" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="316" package="Default">
        <name>testFormTextarea</name>
        <full_name>testFormTextarea</full_name>
        <docblock line="311">
          <description>Test the compilation of form textarea</description>
          <long-description></long-description>
          <tag line="311" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="332" package="Default">
        <name>testFormSelect</name>
        <full_name>testFormSelect</full_name>
        <docblock line="327">
          <description>Test the compilation of form select</description>
          <long-description></long-description>
          <tag line="327" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="362" package="Default">
        <name>testFormCheckbox</name>
        <full_name>testFormCheckbox</full_name>
        <docblock line="357">
          <description>Test the compilation of form checkbox</description>
          <long-description></long-description>
          <tag line="357" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="380" package="Default">
        <name>testFormRadio</name>
        <full_name>testFormRadio</full_name>
        <docblock line="375">
          <description>Test the compilation of form date</description>
          <long-description></long-description>
          <tag line="375" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="398" package="Default">
        <name>testFormSubmit</name>
        <full_name>testFormSubmit</full_name>
        <docblock line="393">
          <description>Test the compilation of form submit</description>
          <long-description></long-description>
          <tag line="393" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="412" package="Default">
        <name>testFormReset</name>
        <full_name>testFormReset</full_name>
        <docblock line="407">
          <description>Test the compilation of form reset</description>
          <long-description></long-description>
          <tag line="407" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="426" package="Default">
        <name>testFormImage</name>
        <full_name>testFormImage</full_name>
        <docblock line="421">
          <description>Test the compilation of form image</description>
          <long-description></long-description>
          <tag line="421" name="group" description="laravel"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="443" package="Default">
        <name>testFormButton</name>
        <full_name>testFormButton</full_name>
        <docblock line="438">
          <description>Test the compilation of form button</description>
          <long-description></long-description>
          <tag line="438" name="group" description="laravel"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/cases/form.test.php</error>
      <error line="3" code="50000">No DocBlock was found for \FormTest</error>
    </parse_markers>
  </file>
  <file path="laravel/tests/phpunit.php" hash="8d2c57382f0e5af4e84f59bb5b4ab8f3" package="Default">
    <include line="11" type="Require" package="Default">
      <name>paths.php</name>
    </include>
    <include line="27" type="Require" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="6" package="Default">
      <name>DS</name>
      <full_name>\DS</full_name>
      <value>DIRECTORY_SEPARATOR</value>
    </constant>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/tests/phpunit.php</error>
    </parse_markers>
  </file>
  <file path="laravel/messages.php" hash="5e6b032b9b3b5bdec6cc719e17b075e7" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Messages</name>
      <full_name>\Laravel\Messages</full_name>
      <property final="false" static="false" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$messages</name>
        <default></default>
        <docblock line="5">
          <description>All of the registered messages.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$format</name>
        <default>':message'</default>
        <docblock line="12">
          <description>Default format for message output.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="25" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="19">
          <description>Create a new Messages instance.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="19" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$messages</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="42" package="Default">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="30">
          <description>Add a message to the collector.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Add a message for the e-mail attribute
    $messages-&gt;add('email', 'The e-mail address is invalid.');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="30" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="42">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="54" package="Default">
        <name>unique</name>
        <full_name>unique</full_name>
        <docblock line="47">
          <description>Determine if a key and message combination already exists.</description>
          <long-description></long-description>
          <tag line="47" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="54">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="73" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="59">
          <description>Determine if messages exist for a given key.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Is there a message for the e-mail attribute
    return $messages-&gt;has('email');

    // Is there a message for the any attribute
    echo $messages-&gt;has();
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="59" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="88" package="Default">
        <name>format</name>
        <full_name>format</full_name>
        <docblock line="78">
          <description>Set the default message format for output.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Apply a new default format.
    $messages-&gt;format('email', '&lt;p&gt;this is my :message&lt;/p&gt;');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="78" name="param" description="" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$format</name>
          <default>':message'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="111" package="Default">
        <name>first</name>
        <full_name>first</full_name>
        <docblock line="93">
          <description>Get the first message from the container for a given key.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Echo the first message out of all messages.
    echo $messages-&gt;first();

    // Echo the first message for the e-mail attribute
    echo $messages-&gt;first('email');

    // Format the first message for the e-mail attribute
    echo $messages-&gt;first('email', '&lt;p&gt;:message&lt;/p&gt;');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="93" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="93" name="param" description="" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="93" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="111">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="111">
          <name>$format</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="135" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="120">
          <description>Get all of the messages from the container for a given key.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Echo all of the messages for the e-mail attribute
    echo $messages-&gt;get('email');

    // Format all of the messages for the e-mail attribute
    echo $messages-&gt;get('email', '&lt;p&gt;:message&lt;/p&gt;');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="120" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="param" description="" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="135">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="135">
          <name>$format</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="161" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="147">
          <description>Get all of the messages for every key in the container.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get all of the messages in the collector
    $all = $messages-&gt;all();

    // Format all of the messages in the collector
    $all = $messages-&gt;all('&lt;p&gt;:message&lt;/p&gt;');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="147" name="param" description="" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="147" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="161">
          <name>$format</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="182" package="Default">
        <name>transform</name>
        <full_name>transform</full_name>
        <docblock line="175">
          <description>Format an array of messages.</description>
          <long-description></long-description>
          <tag line="175" name="param" description="" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="175" name="param" description="" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="175" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$messages</name>
          <default></default>
          <type/>
        </argument>
        <argument line="182">
          <name>$format</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/messages.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Messages</error>
    </parse_markers>
  </file>
  <file path="laravel/error.php" hash="9e160685e80eaeb6408d70e612387a5e" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Error</name>
      <full_name>\Laravel\Error</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="12" package="Default">
        <name>exception</name>
        <full_name>exception</full_name>
        <docblock line="5">
          <description>Handle an exception and display the exception report.</description>
          <long-description></long-description>
          <tag line="5" name="param" description="" type="\Laravel\Exception" variable="$exception">
            <type by_reference="false">\Laravel\Exception</type>
          </tag>
          <tag line="5" name="param" description="" type="bool" variable="$trace">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="12">
          <name>$exception</name>
          <default></default>
          <type/>
        </argument>
        <argument line="12">
          <name>$trace</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="78" package="Default">
        <name>native</name>
        <full_name>native</full_name>
        <docblock line="69">
          <description>Handle a native PHP error as an ErrorException.</description>
          <long-description></long-description>
          <tag line="69" name="param" description="" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="69" name="param" description="" type="string" variable="$error">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="param" description="" type="int" variable="$line">
            <type by_reference="false">int</type>
          </tag>
          <tag line="69" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
        <argument line="78">
          <name>$error</name>
          <default></default>
          <type/>
        </argument>
        <argument line="78">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
        <argument line="78">
          <name>$line</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="100" package="Default">
        <name>shutdown</name>
        <full_name>shutdown</full_name>
        <docblock line="95">
          <description>Handle the PHP shutdown event.</description>
          <long-description></long-description>
          <tag line="95" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="121" package="Default">
        <name>log</name>
        <full_name>log</full_name>
        <docblock line="115">
          <description>Log an exception.</description>
          <long-description></long-description>
          <tag line="115" name="param" description="" type="\Laravel\Exception" variable="$exception">
            <type by_reference="false">\Laravel\Exception</type>
          </tag>
          <tag line="115" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$exception</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/error.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Error</error>
    </parse_markers>
  </file>
  <file path="laravel/uri.php" hash="a15b96c0d47b8fd3a914e670f0b30145" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>URI</name>
      <full_name>\Laravel\URI</full_name>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$uri</name>
        <default></default>
        <docblock line="5">
          <description>The URI for the current request.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$segments</name>
        <default>array()</default>
        <docblock line="12">
          <description>The URI segments for the current request.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="24" package="Default">
        <name>full</name>
        <full_name>full</full_name>
        <docblock line="19">
          <description>Get the full URI including the query string.</description>
          <long-description></long-description>
          <tag line="19" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="34" package="Default">
        <name>current</name>
        <full_name>current</full_name>
        <docblock line="29">
          <description>Get the URI for the current request.</description>
          <long-description></long-description>
          <tag line="29" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="54" package="Default">
        <name>format</name>
        <full_name>format</full_name>
        <docblock line="48">
          <description>Format a given URI.</description>
          <long-description></long-description>
          <tag line="48" name="param" description="" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="65" package="Default">
        <name>is</name>
        <full_name>is</full_name>
        <docblock line="59">
          <description>Determine if the current URI matches a given pattern.</description>
          <long-description></long-description>
          <tag line="59" name="param" description="" type="string" variable="$pattern">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$pattern</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="85" package="Default">
        <name>segment</name>
        <full_name>segment</full_name>
        <docblock line="70">
          <description>Get a specific segment of the request URI via a one-based index.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get the first segment of the request URI
    $segment = URI::segment(1);

    // Get the second segment of the URI, or return a default value
    $segment = URI::segment(2, 'Taylor');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="70" name="param" description="" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
          <tag line="70" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="70" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
        <argument line="85">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="98" package="Default">
        <name>segments</name>
        <full_name>segments</full_name>
        <docblock line="92">
          <description>Set the URI segments for the request.</description>
          <long-description></long-description>
          <tag line="92" name="param" description="" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/uri.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\URI</error>
    </parse_markers>
  </file>
  <file path="laravel/session/payload.php" hash="62cd6e6edc0e2479de2201ae5e17f5ab" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Session" line="10" package="Default">
      <extends/>
      <name>Payload</name>
      <full_name>\Laravel\Session\Payload</full_name>
      <property final="false" static="false" visibility="public" line="17" namespace="Laravel\Session" package="Default">
        <name>$session</name>
        <default></default>
        <docblock line="12">
          <description>The session array that is stored by the driver.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="Laravel\Session" package="Default">
        <name>$driver</name>
        <default></default>
        <docblock line="19">
          <description>The session driver used to retrieve and store the session payload.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="\Laravel\Session\Drivers\Driver">
            <type by_reference="false">\Laravel\Session\Drivers\Driver</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="Laravel\Session" package="Default">
        <name>$exists</name>
        <default>true</default>
        <docblock line="26">
          <description>Indicates if the session already exists in storage.</description>
          <long-description></long-description>
          <tag line="26" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session" line="39" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="33">
          <description>Create a new session payload instance.</description>
          <long-description></long-description>
          <tag line="33" name="param" description="" type="\Laravel\Session\Drivers\Driver" variable="$driver">
            <type by_reference="false">\Laravel\Session\Drivers\Driver</type>
          </tag>
          <tag line="33" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$driver</name>
          <default></default>
          <type>\Laravel\Session\Drivers\Driver</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session" line="50" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="44">
          <description>Load the session for the current request.</description>
          <long-description></long-description>
          <tag line="44" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel\Session" line="81" package="Default">
        <name>expired</name>
        <full_name>expired</full_name>
        <docblock line="73">
          <description>Determine if the session payload instance is valid.</description>
          <long-description>&lt;p&gt;The session is considered valid if it exists and has not expired.&lt;/p&gt;</long-description>
          <tag line="73" name="param" description="" type="array" variable="$session">
            <type by_reference="false">array</type>
          </tag>
          <tag line="73" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$session</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session" line="94" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="88">
          <description>Determine if the session or flash data contains an item.</description>
          <long-description></long-description>
          <tag line="88" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session" line="116" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="99">
          <description>Get an item from the session.</description>
          <long-description>&lt;p&gt;The session flash data will also be checked for the requested item.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Get an item from the session
    $name = Session::get('name');

    // Return a default value if the item doesn't exist
    $name = Session::get('name', 'Taylor');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="99" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="99" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="116">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session" line="151" package="Default">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="139">
          <description>Write an item to the session.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Write an item to the session payload
    Session::put('name', 'Taylor');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="139" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="139" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="151">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session" line="170" package="Default">
        <name>flash</name>
        <full_name>flash</full_name>
        <docblock line="156">
          <description>Write an item to the session flash data.</description>
          <long-description>&lt;p&gt;Flash data only exists for the current and next request to the application.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Write an item to the session payload's flash data
    Session::flash('name', 'Taylor');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="156" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="156" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="170">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="170">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session" line="180" package="Default">
        <name>reflash</name>
        <full_name>reflash</full_name>
        <docblock line="175">
          <description>Keep all of the session flash data from expiring after the request.</description>
          <long-description></long-description>
          <tag line="175" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session" line="201" package="Default">
        <name>keep</name>
        <full_name>keep</full_name>
        <docblock line="187">
          <description>Keep a session flash item from expiring at the end of the request.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Keep the "name" item from expiring from the flash data
    Session::keep('name');

    // Keep the "name" and "email" items from expiring from the flash data
    Session::keep(array('name', 'email'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="187" name="param" description="" type="string|array" variable="$keys">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="187" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$keys</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session" line="215" package="Default">
        <name>forget</name>
        <full_name>forget</full_name>
        <docblock line="209">
          <description>Remove an item from the session data.</description>
          <long-description></long-description>
          <tag line="209" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="209" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="215">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session" line="227" package="Default">
        <name>flush</name>
        <full_name>flush</full_name>
        <docblock line="220">
          <description>Remove all of the items from the session.</description>
          <long-description>&lt;p&gt;The CSRF token will not be removed from the session.&lt;/p&gt;</long-description>
          <tag line="220" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session" line="241" package="Default">
        <name>regenerate</name>
        <full_name>regenerate</full_name>
        <docblock line="236">
          <description>Assign a new, random ID to the session.</description>
          <long-description></long-description>
          <tag line="236" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session" line="253" package="Default">
        <name>token</name>
        <full_name>token</full_name>
        <docblock line="248">
          <description>Get the CSRF token that is stored in the session data.</description>
          <long-description></long-description>
          <tag line="248" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session" line="263" package="Default">
        <name>activity</name>
        <full_name>activity</full_name>
        <docblock line="258">
          <description>Get the last activity for the session.</description>
          <long-description></long-description>
          <tag line="258" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session" line="275" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="268">
          <description>Store the session payload in storage.</description>
          <long-description>&lt;p&gt;This method will be called automatically at the end of the request.&lt;/p&gt;</long-description>
          <tag line="268" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session" line="319" package="Default">
        <name>sweep</name>
        <full_name>sweep</full_name>
        <docblock line="311">
          <description>Clean up expired sessions.</description>
          <long-description>&lt;p&gt;If the session driver is a sweeper, it must clean up expired sessions
from time to time. This method triggers garbage collection.&lt;/p&gt;</long-description>
          <tag line="311" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Session" line="332" package="Default">
        <name>age</name>
        <full_name>age</full_name>
        <docblock line="327">
          <description>Age the session flash data.</description>
          <long-description></long-description>
          <tag line="327" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Session" line="345" package="Default">
        <name>cookie</name>
        <full_name>cookie</full_name>
        <docblock line="339">
          <description>Send the session ID cookie to the browser.</description>
          <long-description></long-description>
          <tag line="339" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="339" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="345">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/session/payload.php</error>
      <error line="10" code="50000">No DocBlock was found for \Laravel\Session\Payload</error>
    </parse_markers>
  </file>
  <file path="laravel/session/drivers/apc.php" hash="b71476656a60102d28b77c04706e5d6c" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Session\Drivers" line="3" package="Default">
      <extends>\Laravel\Session\Drivers\Driver</extends>
      <name>APC</name>
      <full_name>\Laravel\Session\Drivers\APC</full_name>
      <property final="false" static="false" visibility="private" line="10" namespace="Laravel\Session\Drivers" package="Default">
        <name>$apc</name>
        <default></default>
        <docblock line="5">
          <description>The APC cache driver instance.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="\Laravel\Session\Drivers\Laravel\Cache\Drivers\APC">
            <type by_reference="false">\Laravel\Session\Drivers\Laravel\Cache\Drivers\APC</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="18" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="12">
          <description>Create a new APC session driver instance.</description>
          <long-description></long-description>
          <tag line="12" name="param" description="" type="\Laravel\Session\Drivers\Laravel\Cache\Drivers\APC" variable="$apc">
            <type by_reference="false">\Laravel\Session\Drivers\Laravel\Cache\Drivers\APC</type>
          </tag>
          <tag line="12" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$apc</name>
          <default></default>
          <type>\Laravel\Cache\Drivers\APC</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="31" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="23">
          <description>Load a session from storage by a given ID.</description>
          <long-description>&lt;p&gt;If no session is found for the ID, null will be returned.&lt;/p&gt;</long-description>
          <tag line="23" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="44" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="36">
          <description>Save a given session to storage.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="" type="array" variable="$session">
            <type by_reference="false">array</type>
          </tag>
          <tag line="36" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="36" name="param" description="" type="bool" variable="$exists">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="36" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$session</name>
          <default></default>
          <type/>
        </argument>
        <argument line="44">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
        <argument line="44">
          <name>$exists</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="55" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="49">
          <description>Delete a session from storage by a given ID.</description>
          <long-description></long-description>
          <tag line="49" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/session/drivers/apc.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Session\Drivers\APC</error>
      <error line="12" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $apc in __construct()</error>
    </parse_markers>
  </file>
  <file path="laravel/session/drivers/sweeper.php" hash="cf1f9c1a09e19c2c5d87e2b090cdc39d" package="Default">
    <interface namespace="Laravel\Session\Drivers" line="3" package="Default">
      <name>Sweeper</name>
      <full_name>\Laravel\Session\Drivers\Sweeper</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="11" package="Default">
        <name>sweep</name>
        <full_name>sweep</full_name>
        <docblock line="5">
          <description>Delete all expired sessions from persistent storage.</description>
          <long-description></long-description>
          <tag line="5" name="param" description="" type="int" variable="$expiration">
            <type by_reference="false">int</type>
          </tag>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="11">
          <name>$expiration</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/session/drivers/sweeper.php</error>
    </parse_markers>
  </file>
  <file path="laravel/session/drivers/driver.php" hash="d13b9a34253d1ae8827f0cef5377ba1b" package="Default">
    <class final="false" abstract="true" namespace="Laravel\Session\Drivers" line="3" package="Default">
      <extends/>
      <name>Driver</name>
      <full_name>\Laravel\Session\Drivers\Driver</full_name>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="13" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="5">
          <description>Load a session from storage by a given ID.</description>
          <long-description>&lt;p&gt;If no session is found for the ID, null will be returned.&lt;/p&gt;</long-description>
          <tag line="5" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="5" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="13">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="23" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="15">
          <description>Save a given session to storage.</description>
          <long-description></long-description>
          <tag line="15" name="param" description="" type="array" variable="$session">
            <type by_reference="false">array</type>
          </tag>
          <tag line="15" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="15" name="param" description="" type="bool" variable="$exists">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="15" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="23">
          <name>$session</name>
          <default></default>
          <type/>
        </argument>
        <argument line="23">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
        <argument line="23">
          <name>$exists</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="31" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="25">
          <description>Delete a session from storage by a given ID.</description>
          <long-description></long-description>
          <tag line="25" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="25" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="38" package="Default">
        <name>fresh</name>
        <full_name>fresh</full_name>
        <docblock line="33">
          <description>Create a fresh session array with a unique ID.</description>
          <long-description></long-description>
          <tag line="33" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="54" package="Default">
        <name>id</name>
        <full_name>id</full_name>
        <docblock line="49">
          <description>Get a new session ID that isn't assigned to any current session.</description>
          <long-description></long-description>
          <tag line="49" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/session/drivers/driver.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Session\Drivers\Driver</error>
    </parse_markers>
  </file>
  <file path="laravel/session/drivers/cookie.php" hash="94bfae6abc7913c0b433b616d470749e" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Session\Drivers" line="3" package="Default">
      <extends>\Laravel\Session\Drivers\Driver</extends>
      <name>Cookie</name>
      <full_name>\Laravel\Session\Drivers\Cookie</full_name>
      <constant namespace="Laravel\Session\Drivers" line="10" package="Default">
        <name>payload</name>
        <full_name>payload</full_name>
        <value>'session_payload'</value>
        <docblock line="5">
          <description>The name of the cookie used to store the session payload.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="20" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="12">
          <description>Load a session from storage by a given ID.</description>
          <long-description>&lt;p&gt;If no session is found for the ID, null will be returned.&lt;/p&gt;</long-description>
          <tag line="12" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="20">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="36" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="28">
          <description>Save a given session to storage.</description>
          <long-description></long-description>
          <tag line="28" name="param" description="" type="array" variable="$session">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="param" description="" type="bool" variable="$exists">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="28" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$session</name>
          <default></default>
          <type/>
        </argument>
        <argument line="36">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
        <argument line="36">
          <name>$exists</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="51" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="45">
          <description>Delete a session from storage by a given ID.</description>
          <long-description></long-description>
          <tag line="45" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/session/drivers/cookie.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Session\Drivers\Cookie</error>
    </parse_markers>
  </file>
  <file path="laravel/session/drivers/memcached.php" hash="9ea001e314f8ea858243180a2cefadd2" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Session\Drivers" line="3" package="Default">
      <extends>\Laravel\Session\Drivers\Driver</extends>
      <name>Memcached</name>
      <full_name>\Laravel\Session\Drivers\Memcached</full_name>
      <property final="false" static="false" visibility="private" line="10" namespace="Laravel\Session\Drivers" package="Default">
        <name>$memcached</name>
        <default></default>
        <docblock line="5">
          <description>The Memcache cache driver instance.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="\Laravel\Session\Drivers\Laravel\Cache\Drivers\Memcached">
            <type by_reference="false">\Laravel\Session\Drivers\Laravel\Cache\Drivers\Memcached</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="18" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="12">
          <description>Create a new Memcached session driver instance.</description>
          <long-description></long-description>
          <tag line="12" name="param" description="" type="\Laravel\Session\Drivers\Laravel\Cache\Drivers\Memcached" variable="$memcached">
            <type by_reference="false">\Laravel\Session\Drivers\Laravel\Cache\Drivers\Memcached</type>
          </tag>
          <tag line="12" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$memcached</name>
          <default></default>
          <type>\Laravel\Cache\Drivers\Memcached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="31" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="23">
          <description>Load a session from storage by a given ID.</description>
          <long-description>&lt;p&gt;If no session is found for the ID, null will be returned.&lt;/p&gt;</long-description>
          <tag line="23" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="44" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="36">
          <description>Save a given session to storage.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="" type="array" variable="$session">
            <type by_reference="false">array</type>
          </tag>
          <tag line="36" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="36" name="param" description="" type="bool" variable="$exists">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="36" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$session</name>
          <default></default>
          <type/>
        </argument>
        <argument line="44">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
        <argument line="44">
          <name>$exists</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="55" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="49">
          <description>Delete a session from storage by a given ID.</description>
          <long-description></long-description>
          <tag line="49" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/session/drivers/memcached.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Session\Drivers\Memcached</error>
      <error line="12" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $memcached in __construct()</error>
    </parse_markers>
  </file>
  <file path="laravel/session/drivers/database.php" hash="22b061bcce9fcafb3e171355896f1951" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Session\Drivers" line="6" package="Default">
      <extends>\Laravel\Session\Drivers\Driver</extends>
      <implements>\Laravel\Session\Drivers\Sweeper</implements>
      <name>Database</name>
      <full_name>\Laravel\Session\Drivers\Database</full_name>
      <property final="false" static="false" visibility="protected" line="13" namespace="Laravel\Session\Drivers" package="Default">
        <name>$connection</name>
        <default></default>
        <docblock line="8">
          <description>The database connection.</description>
          <long-description></long-description>
          <tag line="8" name="var" description="" type="\Laravel\Database\Connection">
            <type by_reference="false">\Laravel\Database\Connection</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="21" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="15">
          <description>Create a new database session driver.</description>
          <long-description></long-description>
          <tag line="15" name="param" description="" type="\Laravel\Database\Connection" variable="$connection">
            <type by_reference="false">\Laravel\Database\Connection</type>
          </tag>
          <tag line="15" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="21">
          <name>$connection</name>
          <default></default>
          <type>\Laravel\Database\Connection</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="34" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="26">
          <description>Load a session from storage by a given ID.</description>
          <long-description>&lt;p&gt;If no session is found for the ID, null will be returned.&lt;/p&gt;</long-description>
          <tag line="26" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="56" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="48">
          <description>Save a given session to storage.</description>
          <long-description></long-description>
          <tag line="48" name="param" description="" type="array" variable="$session">
            <type by_reference="false">array</type>
          </tag>
          <tag line="48" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="48" name="param" description="" type="bool" variable="$exists">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="48" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$session</name>
          <default></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$exists</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="81" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="75">
          <description>Delete a session from storage by a given ID.</description>
          <long-description></long-description>
          <tag line="75" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="75" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="92" package="Default">
        <name>sweep</name>
        <full_name>sweep</full_name>
        <docblock line="86">
          <description>Delete all expired sessions from persistent storage.</description>
          <long-description></long-description>
          <tag line="86" name="param" description="" type="int" variable="$expiration">
            <type by_reference="false">int</type>
          </tag>
          <tag line="86" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$expiration</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Laravel\Session\Drivers" line="102" package="Default">
        <name>table</name>
        <full_name>table</full_name>
        <docblock line="97">
          <description>Get a session database query.</description>
          <long-description></long-description>
          <tag line="97" name="return" description="" type="\Laravel\Session\Drivers\Query">
            <type by_reference="false">\Laravel\Session\Drivers\Query</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/session/drivers/database.php</error>
      <error line="6" code="50000">No DocBlock was found for \Laravel\Session\Drivers\Database</error>
    </parse_markers>
  </file>
  <file path="laravel/session/drivers/file.php" hash="6c7392a9fdea76c12205ac3c3226cd3f" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Session\Drivers" line="3" package="Default">
      <extends>\Laravel\Session\Drivers\Driver</extends>
      <implements>\Laravel\Session\Drivers\Sweeper</implements>
      <name>File</name>
      <full_name>\Laravel\Session\Drivers\File</full_name>
      <property final="false" static="false" visibility="private" line="10" namespace="Laravel\Session\Drivers" package="Default">
        <name>$path</name>
        <default></default>
        <docblock line="5">
          <description>The path to which the session files should be written.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="18" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="12">
          <description>Create a new File session driver instance.</description>
          <long-description></long-description>
          <tag line="12" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="31" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="23">
          <description>Load a session from storage by a given ID.</description>
          <long-description>&lt;p&gt;If no session is found for the ID, null will be returned.&lt;/p&gt;</long-description>
          <tag line="23" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="47" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="39">
          <description>Save a given session to storage.</description>
          <long-description></long-description>
          <tag line="39" name="param" description="" type="array" variable="$session">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="param" description="" type="bool" variable="$exists">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="39" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$session</name>
          <default></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$exists</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="58" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="52">
          <description>Delete a session from storage by a given ID.</description>
          <long-description></long-description>
          <tag line="52" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="52" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="72" package="Default">
        <name>sweep</name>
        <full_name>sweep</full_name>
        <docblock line="66">
          <description>Delete all expired sessions from persistent storage.</description>
          <long-description></long-description>
          <tag line="66" name="param" description="" type="int" variable="$expiration">
            <type by_reference="false">int</type>
          </tag>
          <tag line="66" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$expiration</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/session/drivers/file.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Session\Drivers\File</error>
    </parse_markers>
  </file>
  <file path="laravel/session/drivers/redis.php" hash="c4be0eabebb209b3fcd9efe12d8f5ac8" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Session\Drivers" line="3" package="Default">
      <extends>\Laravel\Session\Drivers\Driver</extends>
      <name>Redis</name>
      <full_name>\Laravel\Session\Drivers\Redis</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel\Session\Drivers" package="Default">
        <name>$redis</name>
        <default></default>
        <docblock line="5">
          <description>The Redis cache driver instance.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="\Laravel\Session\Drivers\Laravel\Cache\Drivers\Redis">
            <type by_reference="false">\Laravel\Session\Drivers\Laravel\Cache\Drivers\Redis</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="18" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="12">
          <description>Create a new Redis session driver.</description>
          <long-description></long-description>
          <tag line="12" name="param" description="" type="\Laravel\Session\Drivers\Laravel\Cache\Drivers\Redis" variable="$redis">
            <type by_reference="false">\Laravel\Session\Drivers\Laravel\Cache\Drivers\Redis</type>
          </tag>
          <tag line="12" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$redis</name>
          <default></default>
          <type>\Laravel\Cache\Drivers\Redis</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="31" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="23">
          <description>Load a session from storage by a given ID.</description>
          <long-description>&lt;p&gt;If no session is found for the ID, null will be returned.&lt;/p&gt;</long-description>
          <tag line="23" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="44" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="36">
          <description>Save a given session to storage.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="" type="array" variable="$session">
            <type by_reference="false">array</type>
          </tag>
          <tag line="36" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="36" name="param" description="" type="bool" variable="$exists">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="36" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$session</name>
          <default></default>
          <type/>
        </argument>
        <argument line="44">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
        <argument line="44">
          <name>$exists</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="55" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="49">
          <description>Delete a session from storage by a given ID.</description>
          <long-description></long-description>
          <tag line="49" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/session/drivers/redis.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Session\Drivers\Redis</error>
      <error line="12" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $redis in __construct()</error>
    </parse_markers>
  </file>
  <file path="laravel/session/drivers/memory.php" hash="5e381f158c49572d8c7b6783bd081ec8" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Session\Drivers" line="3" package="Default">
      <extends>\Laravel\Session\Drivers\Driver</extends>
      <name>Memory</name>
      <full_name>\Laravel\Session\Drivers\Memory</full_name>
      <property final="false" static="false" visibility="public" line="10" namespace="Laravel\Session\Drivers" package="Default">
        <name>$session</name>
        <default></default>
        <docblock line="5">
          <description>The session payload that will be returned by the driver.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="20" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="12">
          <description>Load a session from storage by a given ID.</description>
          <long-description>&lt;p&gt;If no session is found for the ID, null will be returned.&lt;/p&gt;</long-description>
          <tag line="12" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="20">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="33" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="25">
          <description>Save a given session to storage.</description>
          <long-description></long-description>
          <tag line="25" name="param" description="" type="array" variable="$session">
            <type by_reference="false">array</type>
          </tag>
          <tag line="25" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="25" name="param" description="" type="bool" variable="$exists">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="25" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$session</name>
          <default></default>
          <type/>
        </argument>
        <argument line="33">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
        <argument line="33">
          <name>$exists</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Session\Drivers" line="44" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="38">
          <description>Delete a session from storage by a given ID.</description>
          <long-description></long-description>
          <tag line="38" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/session/drivers/memory.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Session\Drivers\Memory</error>
    </parse_markers>
  </file>
  <file path="laravel/cache/drivers/apc.php" hash="234433861eb8b7adee99cd81d91042f9" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Cache\Drivers" line="3" package="Default">
      <extends>\Laravel\Cache\Drivers\Driver</extends>
      <name>APC</name>
      <full_name>\Laravel\Cache\Drivers\APC</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel\Cache\Drivers" package="Default">
        <name>$key</name>
        <default></default>
        <docblock line="5">
          <description>The cache key from the cache configuration file.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="18" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="12">
          <description>Create a new APC cache driver instance.</description>
          <long-description></long-description>
          <tag line="12" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="29" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="23">
          <description>Determine if an item exists in the cache.</description>
          <long-description></long-description>
          <tag line="23" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="40" package="Default">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="34">
          <description>Retrieve an item from the cache driver.</description>
          <long-description></long-description>
          <tag line="34" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="61" package="Default">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="48">
          <description>Write an item to the cache for a given number of minutes.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Put an item in the cache for 15 minutes
    Cache::put('name', 'Taylor', 15);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="48" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="48" name="param" description="" type="int" variable="$minutes">
            <type by_reference="false">int</type>
          </tag>
          <tag line="48" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$minutes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="73" package="Default">
        <name>forever</name>
        <full_name>forever</full_name>
        <docblock line="66">
          <description>Write an item to the cache that lasts forever.</description>
          <long-description></long-description>
          <tag line="66" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="66" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="84" package="Default">
        <name>forget</name>
        <full_name>forget</full_name>
        <docblock line="78">
          <description>Delete an item from the cache.</description>
          <long-description></long-description>
          <tag line="78" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cache/drivers/apc.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Cache\Drivers\APC</error>
    </parse_markers>
  </file>
  <file path="laravel/cache/drivers/wincache.php" hash="ac40a5abf2fbc61a11a57735dd71cdf1" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Cache\Drivers" line="3" package="Default">
      <extends>\Laravel\Cache\Drivers\Driver</extends>
      <name>WinCache</name>
      <full_name>\Laravel\Cache\Drivers\WinCache</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel\Cache\Drivers" package="Default">
        <name>$key</name>
        <default></default>
        <docblock line="5">
          <description>The cache key from the cache configuration file.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="18" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="12">
          <description>Create a new WinCache cache driver instance.</description>
          <long-description></long-description>
          <tag line="12" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="29" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="23">
          <description>Determine if an item exists in the cache.</description>
          <long-description></long-description>
          <tag line="23" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="40" package="Default">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="34">
          <description>Retrieve an item from the cache driver.</description>
          <long-description></long-description>
          <tag line="34" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="61" package="Default">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="48">
          <description>Write an item to the cache for a given number of minutes.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Put an item in the cache for 15 minutes
    Cache::put('name', 'Taylor', 15);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="48" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="48" name="param" description="" type="int" variable="$minutes">
            <type by_reference="false">int</type>
          </tag>
          <tag line="48" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$minutes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="73" package="Default">
        <name>forever</name>
        <full_name>forever</full_name>
        <docblock line="66">
          <description>Write an item to the cache that lasts forever.</description>
          <long-description></long-description>
          <tag line="66" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="66" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="84" package="Default">
        <name>forget</name>
        <full_name>forget</full_name>
        <docblock line="78">
          <description>Delete an item from the cache.</description>
          <long-description></long-description>
          <tag line="78" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cache/drivers/wincache.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Cache\Drivers\WinCache</error>
    </parse_markers>
  </file>
  <file path="laravel/cache/drivers/sectionable.php" hash="9ef360b76ec9b652df57ee7ada2a9569" package="Default">
    <class final="false" abstract="true" namespace="Laravel\Cache\Drivers" line="3" package="Default">
      <extends>\Laravel\Cache\Drivers\Driver</extends>
      <name>Sectionable</name>
      <full_name>\Laravel\Cache\Drivers\Sectionable</full_name>
      <property final="false" static="false" visibility="public" line="10" namespace="Laravel\Cache\Drivers" package="Default">
        <name>$implicit</name>
        <default>true</default>
        <docblock line="5">
          <description>Indicates that section caching is implicit based on keys.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="17" namespace="Laravel\Cache\Drivers" package="Default">
        <name>$delimiter</name>
        <default>'::'</default>
        <docblock line="12">
          <description>The implicit section key delimiter.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="27" package="Default">
        <name>get_from_section</name>
        <full_name>get_from_section</full_name>
        <docblock line="19">
          <description>Retrieve a sectioned item from the cache driver.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="19" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
        <argument line="27">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="27">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="41" package="Default">
        <name>put_in_section</name>
        <full_name>put_in_section</full_name>
        <docblock line="32">
          <description>Write a sectioned item to the cache.</description>
          <long-description></long-description>
          <tag line="32" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="32" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="32" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="32" name="param" description="" type="int" variable="$minutes">
            <type by_reference="false">int</type>
          </tag>
          <tag line="32" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
        <argument line="41">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="41">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="41">
          <name>$minutes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="54" package="Default">
        <name>forever_in_section</name>
        <full_name>forever_in_section</full_name>
        <docblock line="46">
          <description>Write a sectioned item to the cache that lasts forever.</description>
          <long-description></long-description>
          <tag line="46" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="46" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
        <argument line="54">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="54">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="69" package="Default">
        <name>remember_in_section</name>
        <full_name>remember_in_section</full_name>
        <docblock line="59">
          <description>Get a sectioned item from the cache, or cache and return the default value.</description>
          <long-description></long-description>
          <tag line="59" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="59" name="param" description="" type="int" variable="$minutes">
            <type by_reference="false">int</type>
          </tag>
          <tag line="59" name="param" description="" type="string" variable="$function">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$default</name>
          <default></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$minutes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$function</name>
          <default>'put'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="84" package="Default">
        <name>sear_in_section</name>
        <full_name>sear_in_section</full_name>
        <docblock line="76">
          <description>Get a sectioned item from the cache, or cache the default value forever.</description>
          <long-description></long-description>
          <tag line="76" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="76" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
        <argument line="84">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="84">
          <name>$default</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="96" package="Default">
        <name>forget_in_section</name>
        <full_name>forget_in_section</full_name>
        <docblock line="89">
          <description>Delete a sectioned item from the cache.</description>
          <long-description></long-description>
          <tag line="89" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="89" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="89" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
        <argument line="96">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="107" package="Default">
        <name>forget_section</name>
        <full_name>forget_section</full_name>
        <docblock line="101">
          <description>Delete an entire section from the cache.</description>
          <long-description></long-description>
          <tag line="101" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="return" description="" type="int|bool">
            <type by_reference="false">int</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="115" package="Default">
        <name>sectionable</name>
        <full_name>sectionable</full_name>
        <docblock line="109">
          <description>Indicates if a key is sectionable.</description>
          <long-description></long-description>
          <tag line="109" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="109" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="126" package="Default">
        <name>sectioned</name>
        <full_name>sectioned</full_name>
        <docblock line="120">
          <description>Determine if a key is sectioned.</description>
          <long-description></long-description>
          <tag line="120" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="137" package="Default">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="131">
          <description>Get the section and key from a sectioned key.</description>
          <long-description></long-description>
          <tag line="131" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="131" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cache/drivers/sectionable.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Cache\Drivers\Sectionable</error>
    </parse_markers>
  </file>
  <file path="laravel/cache/drivers/driver.php" hash="516207bb6d3cd8a202187760288f8e92" package="Default">
    <class final="false" abstract="true" namespace="Laravel\Cache\Drivers" line="3" package="Default">
      <extends/>
      <name>Driver</name>
      <full_name>\Laravel\Cache\Drivers\Driver</full_name>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="11" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="5">
          <description>Determine if an item exists in the cache.</description>
          <long-description></long-description>
          <tag line="5" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="5" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="11">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="28" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="13">
          <description>Get an item from the cache.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get an item from the cache driver
    $name = Cache::driver('name');

    // Return a default value if the requested item isn't cached
    $name = Cache::get('name', 'Taylor');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="13" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="13" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="13" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="28">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="39" package="Default">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="33">
          <description>Retrieve an item from the cache driver.</description>
          <long-description></long-description>
          <tag line="33" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="33" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="54" package="Default">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="41">
          <description>Write an item to the cache for a given number of minutes.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Put an item in the cache for 15 minutes
    Cache::put('name', 'Taylor', 15);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="41" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="41" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="41" name="param" description="" type="int" variable="$minutes">
            <type by_reference="false">int</type>
          </tag>
          <tag line="41" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="54">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="54">
          <name>$minutes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="73" package="Default">
        <name>remember</name>
        <full_name>remember</full_name>
        <docblock line="56">
          <description>Get an item from the cache, or cache and return the default value.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get an item from the cache, or cache a value for 15 minutes
    $name = Cache::remember('name', 'Taylor', 15);

    // Use a closure for deferred execution
    $count = Cache::remember('count', function() { return User::count(); }, 15);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="56" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="56" name="param" description="" type="int" variable="$minutes">
            <type by_reference="false">int</type>
          </tag>
          <tag line="56" name="param" description="" type="string" variable="$function">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$default</name>
          <default></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$minutes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$function</name>
          <default>'put'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="89" package="Default">
        <name>sear</name>
        <full_name>sear</full_name>
        <docblock line="82">
          <description>Get an item from the cache, or cache the default value forever.</description>
          <long-description></long-description>
          <tag line="82" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="82" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$default</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="100" package="Default">
        <name>forget</name>
        <full_name>forget</full_name>
        <docblock line="94">
          <description>Delete an item from the cache.</description>
          <long-description></long-description>
          <tag line="94" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="108" package="Default">
        <name>expiration</name>
        <full_name>expiration</full_name>
        <docblock line="102">
          <description>Get the expiration time as a UNIX timestamp.</description>
          <long-description></long-description>
          <tag line="102" name="param" description="" type="int" variable="$minutes">
            <type by_reference="false">int</type>
          </tag>
          <tag line="102" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$minutes</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cache/drivers/driver.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Cache\Drivers\Driver</error>
    </parse_markers>
  </file>
  <file path="laravel/cache/drivers/memcached.php" hash="8c8ed1dcbe216f4c7069e3b91e5bdc93" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Cache\Drivers" line="3" package="Default">
      <extends>\Laravel\Cache\Drivers\Sectionable</extends>
      <name>Memcached</name>
      <full_name>\Laravel\Cache\Drivers\Memcached</full_name>
      <property final="false" static="false" visibility="public" line="10" namespace="Laravel\Cache\Drivers" package="Default">
        <name>$memcache</name>
        <default></default>
        <docblock line="5">
          <description>The Memcache instance.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="\Laravel\Cache\Drivers\Memcached">
            <type by_reference="false">\Laravel\Cache\Drivers\Memcached</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="17" namespace="Laravel\Cache\Drivers" package="Default">
        <name>$key</name>
        <default></default>
        <docblock line="12">
          <description>The cache key from the cache configuration file.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="26" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="19">
          <description>Create a new Memcached cache driver instance.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="" type="\Laravel\Cache\Drivers\Memcached" variable="$memcache">
            <type by_reference="false">\Laravel\Cache\Drivers\Memcached</type>
          </tag>
          <tag line="19" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$memcache</name>
          <default></default>
          <type>\Memcached</type>
        </argument>
        <argument line="26">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="38" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="32">
          <description>Determine if an item exists in the cache.</description>
          <long-description></long-description>
          <tag line="32" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="32" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="49" package="Default">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="43">
          <description>Retrieve an item from the cache driver.</description>
          <long-description></long-description>
          <tag line="43" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="76" package="Default">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="63">
          <description>Write an item to the cache for a given number of minutes.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Put an item in the cache for 15 minutes
    Cache::put('name', 'Taylor', 15);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="63" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="63" name="param" description="" type="int" variable="$minutes">
            <type by_reference="false">int</type>
          </tag>
          <tag line="63" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$minutes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="97" package="Default">
        <name>forever</name>
        <full_name>forever</full_name>
        <docblock line="90">
          <description>Write an item to the cache that lasts forever.</description>
          <long-description></long-description>
          <tag line="90" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="90" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="117" package="Default">
        <name>forget</name>
        <full_name>forget</full_name>
        <docblock line="111">
          <description>Delete an item from the cache.</description>
          <long-description></long-description>
          <tag line="111" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="144" package="Default">
        <name>forget_section</name>
        <full_name>forget_section</full_name>
        <docblock line="138">
          <description>Delete an entire section from the cache.</description>
          <long-description></long-description>
          <tag line="138" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="138" name="return" description="" type="int|bool">
            <type by_reference="false">int</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="144">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="155" package="Default">
        <name>section_id</name>
        <full_name>section_id</full_name>
        <docblock line="149">
          <description>Get the current section ID for a given section.</description>
          <long-description></long-description>
          <tag line="149" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="149" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="169" package="Default">
        <name>section_key</name>
        <full_name>section_key</full_name>
        <docblock line="163">
          <description>Get a section key name for a given section.</description>
          <long-description></long-description>
          <tag line="163" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="163" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="169">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="181" package="Default">
        <name>section_item_key</name>
        <full_name>section_item_key</full_name>
        <docblock line="174">
          <description>Get a section item key for a given section and key.</description>
          <long-description></long-description>
          <tag line="174" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="174" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="174" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="181">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
        <argument line="181">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cache/drivers/memcached.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Cache\Drivers\Memcached</error>
      <error line="19" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $memcache in __construct()</error>
    </parse_markers>
  </file>
  <file path="laravel/cache/drivers/database.php" hash="0fdc47e9a3683db612d044239b81b9ac" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Cache\Drivers" line="7" package="Default">
      <extends>\Laravel\Cache\Drivers\Driver</extends>
      <name>Database</name>
      <full_name>\Laravel\Cache\Drivers\Database</full_name>
      <property final="false" static="false" visibility="protected" line="14" namespace="Laravel\Cache\Drivers" package="Default">
        <name>$key</name>
        <default></default>
        <docblock line="9">
          <description>The cache key from the cache configuration file.</description>
          <long-description></long-description>
          <tag line="9" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="22" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="16">
          <description>Create a new database cache driver instance.</description>
          <long-description></long-description>
          <tag line="16" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="16" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="33" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="27">
          <description>Determine if an item exists in the cache.</description>
          <long-description></long-description>
          <tag line="27" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="44" package="Default">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="38">
          <description>Retrieve an item from the cache driver.</description>
          <long-description></long-description>
          <tag line="38" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="69" package="Default">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="56">
          <description>Write an item to the cache for a given number of minutes.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Put an item in the cache for 15 minutes
    Cache::put('name', 'Taylor', 15);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="56" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="56" name="param" description="" type="int" variable="$minutes">
            <type by_reference="false">int</type>
          </tag>
          <tag line="56" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$minutes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="97" package="Default">
        <name>forever</name>
        <full_name>forever</full_name>
        <docblock line="90">
          <description>Write an item to the cache for five years.</description>
          <long-description></long-description>
          <tag line="90" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="90" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="108" package="Default">
        <name>forget</name>
        <full_name>forget</full_name>
        <docblock line="102">
          <description>Delete an item from the cache.</description>
          <long-description></long-description>
          <tag line="102" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="102" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="118" package="Default">
        <name>table</name>
        <full_name>table</full_name>
        <docblock line="113">
          <description>Get a query builder for the database table.</description>
          <long-description></long-description>
          <tag line="113" name="return" description="" type="\Laravel\Cache\Drivers\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Cache\Drivers\Laravel\Database\Query</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cache/drivers/database.php</error>
      <error line="7" code="50000">No DocBlock was found for \Laravel\Cache\Drivers\Database</error>
    </parse_markers>
  </file>
  <file path="laravel/cache/drivers/file.php" hash="f5c33b6ac628148999ac0b6186544779" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Cache\Drivers" line="3" package="Default">
      <extends>\Laravel\Cache\Drivers\Driver</extends>
      <name>File</name>
      <full_name>\Laravel\Cache\Drivers\File</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel\Cache\Drivers" package="Default">
        <name>$path</name>
        <default></default>
        <docblock line="5">
          <description>The path to which the cache files should be written.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="18" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="12">
          <description>Create a new File cache driver instance.</description>
          <long-description></long-description>
          <tag line="12" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="29" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="23">
          <description>Determine if an item exists in the cache.</description>
          <long-description></long-description>
          <tag line="23" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="40" package="Default">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="34">
          <description>Retrieve an item from the cache driver.</description>
          <long-description></long-description>
          <tag line="34" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="68" package="Default">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="55">
          <description>Write an item to the cache for a given number of minutes.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Put an item in the cache for 15 minutes
    Cache::put('name', 'Taylor', 15);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="55" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="55" name="param" description="" type="int" variable="$minutes">
            <type by_reference="false">int</type>
          </tag>
          <tag line="55" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$minutes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="84" package="Default">
        <name>forever</name>
        <full_name>forever</full_name>
        <docblock line="77">
          <description>Write an item to the cache for five years.</description>
          <long-description></long-description>
          <tag line="77" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="77" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="84">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="95" package="Default">
        <name>forget</name>
        <full_name>forget</full_name>
        <docblock line="89">
          <description>Delete an item from the cache.</description>
          <long-description></long-description>
          <tag line="89" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="89" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cache/drivers/file.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Cache\Drivers\File</error>
    </parse_markers>
  </file>
  <file path="laravel/cache/drivers/redis.php" hash="9e038469790adfbedc1109a465c31c52" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Cache\Drivers" line="3" package="Default">
      <extends>\Laravel\Cache\Drivers\Driver</extends>
      <name>Redis</name>
      <full_name>\Laravel\Cache\Drivers\Redis</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel\Cache\Drivers" package="Default">
        <name>$redis</name>
        <default></default>
        <docblock line="5">
          <description>The Redis database instance.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="\Laravel\Cache\Drivers\Laravel\Redis">
            <type by_reference="false">\Laravel\Cache\Drivers\Laravel\Redis</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="18" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="12">
          <description>Create a new Redis cache driver instance.</description>
          <long-description></long-description>
          <tag line="12" name="param" description="" type="\Laravel\Cache\Drivers\Laravel\Redis" variable="$redis">
            <type by_reference="false">\Laravel\Cache\Drivers\Laravel\Redis</type>
          </tag>
          <tag line="12" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$redis</name>
          <default></default>
          <type>\Laravel\Redis</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="29" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="23">
          <description>Determine if an item exists in the cache.</description>
          <long-description></long-description>
          <tag line="23" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="40" package="Default">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="34">
          <description>Retrieve an item from the cache driver.</description>
          <long-description></long-description>
          <tag line="34" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="61" package="Default">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="48">
          <description>Write an item to the cache for a given number of minutes.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Put an item in the cache for 15 minutes
    Cache::put('name', 'Taylor', 15);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="48" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="48" name="param" description="" type="int" variable="$minutes">
            <type by_reference="false">int</type>
          </tag>
          <tag line="48" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$minutes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="75" package="Default">
        <name>forever</name>
        <full_name>forever</full_name>
        <docblock line="68">
          <description>Write an item to the cache that lasts forever.</description>
          <long-description></long-description>
          <tag line="68" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="68" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="86" package="Default">
        <name>forget</name>
        <full_name>forget</full_name>
        <docblock line="80">
          <description>Delete an item from the cache.</description>
          <long-description></long-description>
          <tag line="80" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cache/drivers/redis.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Cache\Drivers\Redis</error>
      <error line="12" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $redis in __construct()</error>
    </parse_markers>
  </file>
  <file path="laravel/cache/drivers/memory.php" hash="145047257e06676cbad4db2184bf3f29" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Cache\Drivers" line="3" package="Default">
      <extends>\Laravel\Cache\Drivers\Sectionable</extends>
      <name>Memory</name>
      <full_name>\Laravel\Cache\Drivers\Memory</full_name>
      <property final="false" static="false" visibility="public" line="10" namespace="Laravel\Cache\Drivers" package="Default">
        <name>$storage</name>
        <default>array()</default>
        <docblock line="5">
          <description>The in-memory array of cached items.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="18" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="12">
          <description>Determine if an item exists in the cache.</description>
          <long-description></long-description>
          <tag line="12" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="29" package="Default">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="23">
          <description>Retrieve an item from the cache driver.</description>
          <long-description></long-description>
          <tag line="23" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="56" package="Default">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="43">
          <description>Write an item to the cache for a given number of minutes.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Put an item in the cache for 15 minutes
    Cache::put('name', 'Taylor', 15);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="43" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="43" name="param" description="" type="int" variable="$minutes">
            <type by_reference="false">int</type>
          </tag>
          <tag line="43" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$minutes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="77" package="Default">
        <name>forever</name>
        <full_name>forever</full_name>
        <docblock line="70">
          <description>Write an item to the cache that lasts forever.</description>
          <long-description></long-description>
          <tag line="70" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="70" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="77">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="97" package="Default">
        <name>forget</name>
        <full_name>forget</full_name>
        <docblock line="91">
          <description>Delete an item from the cache.</description>
          <long-description></long-description>
          <tag line="91" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="124" package="Default">
        <name>forget_section</name>
        <full_name>forget_section</full_name>
        <docblock line="118">
          <description>Delete an entire section from the cache.</description>
          <long-description></long-description>
          <tag line="118" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="return" description="" type="int|bool">
            <type by_reference="false">int</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Cache\Drivers" line="134" package="Default">
        <name>flush</name>
        <full_name>flush</full_name>
        <docblock line="129">
          <description>Flush the entire cache.</description>
          <long-description></long-description>
          <tag line="129" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Cache\Drivers" line="146" package="Default">
        <name>section_item_key</name>
        <full_name>section_item_key</full_name>
        <docblock line="139">
          <description>Get a section item key for a given section and key.</description>
          <long-description></long-description>
          <tag line="139" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
        <argument line="146">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cache/drivers/memory.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Cache\Drivers\Memory</error>
    </parse_markers>
  </file>
  <file path="laravel/config.php" hash="09b1f5d179200c35366a1237545e1f78" package="Default">
    <include line="207" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Config</name>
      <full_name>\Laravel\Config</full_name>
      <constant namespace="Laravel" line="26" package="Default">
        <name>loader</name>
        <full_name>loader</full_name>
        <value>'laravel.config.loader'</value>
        <docblock line="21">
          <description>The configuration loader event name.</description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="public" line="12" namespace="Laravel" package="Default">
        <name>$items</name>
        <default>array()</default>
        <docblock line="5">
          <description>All of the loaded configuration items.</description>
          <long-description>&lt;p&gt;The configuration arrays are keyed by their owning bundle and file.&lt;/p&gt;</long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="19" namespace="Laravel" package="Default">
        <name>$cache</name>
        <default>array()</default>
        <docblock line="14">
          <description>A cache of the parsed configuration items.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="42" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="28">
          <description>Determine if a configuration item or file exists.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Determine if the "session" configuration file exists
    $exists = Config::has('session');

    // Determine if the "timezone" option exists in the configuration
    $exists = Config::has('application.timezone');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="28" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="67" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="47">
          <description>Get a configuration item.</description>
          <long-description>&lt;p&gt;If no item is requested, the entire configuration array will be returned.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Get the "session" configuration array
    $session = Config::get('session');

    // Get a configuration item from a bundle's configuration file
    $name = Config::get('admin::names.first');

    // Get the "timezone" option from the "application" configuration file
    $timezone = Config::get('application.timezone');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="47" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="47" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="67">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="106" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="88">
          <description>Set a configuration item's value.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Set the "session" configuration array
    Config::set('session', $array);

    // Set a configuration option that belongs by a bundle
    Config::set('admin::names.first', 'Taylor');

    // Set the "timezone" option in the "application" configuration file
    Config::set('application.timezone', 'UTC');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="88" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="88" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="133" package="Default">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="125">
          <description>Parse a key and return its bundle, file, and key segments.</description>
          <long-description>&lt;p&gt;Configuration items are named using the {bundle}::{file}.{item} convention.&lt;/p&gt;</long-description>
          <tag line="125" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="133">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="169" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="162">
          <description>Load all of the configuration items from a configuration file.</description>
          <long-description></long-description>
          <tag line="162" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="162" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="162" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="169">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="169">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="196" package="Default">
        <name>file</name>
        <full_name>file</full_name>
        <docblock line="189">
          <description>Load the configuration items from a configuration file.</description>
          <long-description></long-description>
          <tag line="189" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="189" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="189" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="196">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="220" package="Default">
        <name>paths</name>
        <full_name>paths</full_name>
        <docblock line="214">
          <description>Get the array of configuration paths that should be searched for a bundle.</description>
          <long-description></long-description>
          <tag line="214" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="214" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="220">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/config.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Config</error>
    </parse_markers>
  </file>
  <file path="laravel/redirect.php" hash="1f873b09effe881b74570603cae816c8" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends>\Laravel\Response</extends>
      <name>Redirect</name>
      <full_name>\Laravel\Redirect</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="12" package="Default">
        <name>home</name>
        <full_name>home</full_name>
        <docblock line="5">
          <description>Create a redirect response to application root.</description>
          <long-description></long-description>
          <tag line="5" name="param" description="" type="int" variable="$status">
            <type by_reference="false">int</type>
          </tag>
          <tag line="5" name="param" description="" type="bool" variable="$https">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="5" name="return" description="" type="\Laravel\Redirect">
            <type by_reference="false">\Laravel\Redirect</type>
          </tag>
        </docblock>
        <argument line="12">
          <name>$status</name>
          <default>302</default>
          <type/>
        </argument>
        <argument line="12">
          <name>$https</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="23" package="Default">
        <name>back</name>
        <full_name>back</full_name>
        <docblock line="17">
          <description>Create a redirect response to the HTTP referrer.</description>
          <long-description></long-description>
          <tag line="17" name="param" description="" type="int" variable="$status">
            <type by_reference="false">int</type>
          </tag>
          <tag line="17" name="return" description="" type="\Laravel\Redirect">
            <type by_reference="false">\Laravel\Redirect</type>
          </tag>
        </docblock>
        <argument line="23">
          <name>$status</name>
          <default>302</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="44" package="Default">
        <name>to</name>
        <full_name>to</full_name>
        <docblock line="28">
          <description>Create a redirect response.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a redirect response to a location within the application
    return Redirect::to('user/profile');

    // Create a redirect response with a 301 status code
    return Redirect::to('user/profile', 301);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="28" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="param" description="" type="int" variable="$status">
            <type by_reference="false">int</type>
          </tag>
          <tag line="28" name="param" description="" type="bool" variable="$https">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="28" name="return" description="" type="\Laravel\Redirect">
            <type by_reference="false">\Laravel\Redirect</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="44">
          <name>$status</name>
          <default>302</default>
          <type/>
        </argument>
        <argument line="44">
          <name>$https</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="56" package="Default">
        <name>to_secure</name>
        <full_name>to_secure</full_name>
        <docblock line="49">
          <description>Create a redirect response to a HTTPS URL.</description>
          <long-description></long-description>
          <tag line="49" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="param" description="" type="int" variable="$status">
            <type by_reference="false">int</type>
          </tag>
          <tag line="49" name="return" description="" type="\Laravel\Redirect">
            <type by_reference="false">\Laravel\Redirect</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$status</name>
          <default>302</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="69" package="Default">
        <name>to_action</name>
        <full_name>to_action</full_name>
        <docblock line="61">
          <description>Create a redirect response to a controller action.</description>
          <long-description></long-description>
          <tag line="61" name="param" description="" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="61" name="param" description="" type="int" variable="$status">
            <type by_reference="false">int</type>
          </tag>
          <tag line="61" name="return" description="" type="\Laravel\Redirect">
            <type by_reference="false">\Laravel\Redirect</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="69">
          <name>$status</name>
          <default>302</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="90" package="Default">
        <name>to_route</name>
        <full_name>to_route</full_name>
        <docblock line="74">
          <description>Create a redirect response to a named route.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a redirect response to the "login" named route
    return Redirect::to_route('login');

    // Create a redirect response to the "profile" named route with parameters
    return Redirect::to_route('profile', array($username));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="74" name="param" description="" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="74" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="74" name="param" description="" type="int" variable="$status">
            <type by_reference="false">int</type>
          </tag>
          <tag line="74" name="return" description="" type="\Laravel\Redirect">
            <type by_reference="false">\Laravel\Redirect</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="90">
          <name>$status</name>
          <default>302</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="109" package="Default">
        <name>with</name>
        <full_name>with</full_name>
        <docblock line="95">
          <description>Add an item to the session flash data.</description>
          <long-description>&lt;p&gt;This is useful for "passing" status messages or other data to the next request.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Create a redirect response and flash to the session
    return Redirect::to('profile')-&gt;with('message', 'Welcome Back!');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="95" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="95" name="return" description="" type="\Laravel\Redirect">
            <type by_reference="false">\Laravel\Redirect</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="141" package="Default">
        <name>with_input</name>
        <full_name>with_input</full_name>
        <docblock line="121">
          <description>Flash the old input to the session and return the Redirect instance.</description>
          <long-description>&lt;p&gt;Once the input has been flashed, it can be retrieved via the Input::old method.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Redirect and flash all of the input data to the session
    return Redirect::to('login')-&gt;with_input();

    // Redirect and flash only a few of the input items
    return Redirect::to('login')-&gt;with_input('only', array('email', 'username'));

    // Redirect and flash all but a few of the input items
    return Redirect::to('login')-&gt;with_input('except', array('password', 'ssn'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="121" name="param" description="" type="string" variable="$filter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="121" name="param" description="" type="array" variable="$items">
            <type by_reference="false">array</type>
          </tag>
          <tag line="121" name="return" description="" type="\Laravel\Redirect">
            <type by_reference="false">\Laravel\Redirect</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$filter</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="141">
          <name>$items</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="161" package="Default">
        <name>with_errors</name>
        <full_name>with_errors</full_name>
        <docblock line="148">
          <description>Flash a Validator's errors to the session data.</description>
          <long-description>&lt;p&gt;This method allows you to conveniently pass validation errors back to views.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Redirect and flash validator errors the session
    return Redirect::to('register')-&gt;with_errors($validator);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="148" name="param" description="" type="\Laravel\Validator|\Laravel\Messages" variable="$container">
            <type by_reference="false">\Laravel\Validator</type>
            <type by_reference="false">\Laravel\Messages</type>
          </tag>
          <tag line="148" name="return" description="" type="\Laravel\Redirect">
            <type by_reference="false">\Laravel\Redirect</type>
          </tag>
        </docblock>
        <argument line="161">
          <name>$container</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="173" package="Default">
        <name>send</name>
        <full_name>send</full_name>
        <docblock line="168">
          <description>Send the headers and content of the response to the browser.</description>
          <long-description></long-description>
          <tag line="168" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/redirect.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Redirect</error>
    </parse_markers>
  </file>
  <file path="laravel/html.php" hash="34b70b0a652feab9a83136be24905f4c" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>HTML</name>
      <full_name>\Laravel\HTML</full_name>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$macros</name>
        <default>array()</default>
        <docblock line="5">
          <description>The registered custom macros.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$encoding</name>
        <default>null</default>
        <docblock line="12">
          <description>Cache application encoding locally to save expensive calls to config::get().</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="26" package="Default">
        <name>macro</name>
        <full_name>macro</full_name>
        <docblock line="19">
          <description>Registers a custom macro.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="param" description="" type="\Laravel\Closure" variable="$macro">
            <type by_reference="false">\Laravel\Closure</type>
          </tag>
          <tag line="19" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="26">
          <name>$macro</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="39" package="Default">
        <name>entities</name>
        <full_name>entities</full_name>
        <docblock line="31">
          <description>Convert HTML characters to entities.</description>
          <long-description>&lt;p&gt;The encoding specified in the application configuration file will be used.&lt;/p&gt;</long-description>
          <tag line="31" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="50" package="Default">
        <name>decode</name>
        <full_name>decode</full_name>
        <docblock line="44">
          <description>Convert entities to HTML characters.</description>
          <long-description></long-description>
          <tag line="44" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="63" package="Default">
        <name>specialchars</name>
        <full_name>specialchars</full_name>
        <docblock line="55">
          <description>Convert HTML special characters.</description>
          <long-description>&lt;p&gt;The encoding specified in the application configuration file will be used.&lt;/p&gt;</long-description>
          <tag line="55" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="83" package="Default">
        <name>script</name>
        <full_name>script</full_name>
        <docblock line="68">
          <description>Generate a link to a JavaScript file.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Generate a link to a JavaScript file
    echo HTML::script('js/jquery.js');

    // Generate a link to a JavaScript file and add some attributes
    echo HTML::script('js/jquery.js', array('defer'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="68" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="68" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="83">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="107" package="Default">
        <name>style</name>
        <full_name>style</full_name>
        <docblock line="90">
          <description>Generate a link to a CSS file.</description>
          <long-description>&lt;p&gt;If no media type is selected, "all" will be used.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Generate a link to a CSS file
    echo HTML::style('css/common.css');

    // Generate a link to a CSS file and add some attributes
    echo HTML::style('css/common.css', array('media' =&gt; 'print'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="90" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="90" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="107">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="125" package="Default">
        <name>span</name>
        <full_name>span</full_name>
        <docblock line="118">
          <description>Generate a HTML span.</description>
          <long-description></long-description>
          <tag line="118" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="118" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="125">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="147" package="Default">
        <name>link</name>
        <full_name>link</full_name>
        <docblock line="130">
          <description>Generate a HTML link.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Generate a link to a location within the application
    echo HTML::link('user/profile', 'User Profile');

    // Generate a link to a location outside of the application
    echo HTML::link('http://google.com', 'Google');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="130" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="param" description="" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="130" name="param" description="" type="bool" variable="$https">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="130" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="147">
          <name>$title</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="147">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="147">
          <name>$https</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="164" package="Default">
        <name>link_to_secure</name>
        <full_name>link_to_secure</full_name>
        <docblock line="156">
          <description>Generate a HTTPS HTML link.</description>
          <long-description></long-description>
          <tag line="156" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="param" description="" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="156" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="164">
          <name>$title</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="164">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="180" package="Default">
        <name>link_to_asset</name>
        <full_name>link_to_asset</full_name>
        <docblock line="169">
          <description>Generate an HTML link to an asset.</description>
          <long-description>&lt;p&gt;The application index page will not be added to asset links.&lt;/p&gt;</long-description>
          <tag line="169" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="169" name="param" description="" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
          <tag line="169" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="169" name="param" description="" type="bool" variable="$https">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="169" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="180">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="180">
          <name>$title</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="180">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="180">
          <name>$https</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="197" package="Default">
        <name>link_to_secure_asset</name>
        <full_name>link_to_secure_asset</full_name>
        <docblock line="189">
          <description>Generate an HTTPS HTML link to an asset.</description>
          <long-description></long-description>
          <tag line="189" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="189" name="param" description="" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
          <tag line="189" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="189" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="197">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="197">
          <name>$title</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="197">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="221" package="Default">
        <name>link_to_route</name>
        <full_name>link_to_route</full_name>
        <docblock line="202">
          <description>Generate an HTML link to a route.</description>
          <long-description>&lt;p&gt;An array of parameters may be specified to fill in URI segment wildcards.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Generate a link to the "profile" named route
    echo HTML::link_to_route('profile', 'Profile');

    // Generate a link to the "profile" route and add some parameters
    echo HTML::link_to_route('profile', 'Profile', array('taylor'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="202" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="202" name="param" description="" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
          <tag line="202" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="202" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="202" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="221">
          <name>$title</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="221">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="221">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="245" package="Default">
        <name>link_to_action</name>
        <full_name>link_to_action</full_name>
        <docblock line="226">
          <description>Generate an HTML link to a controller action.</description>
          <long-description>&lt;p&gt;An array of parameters may be specified to fill in URI segment wildcards.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Generate a link to the "home@index" action
    echo HTML::link_to_action('home@index', 'Home');

    // Generate a link to the "user@profile" route and add some parameters
    echo HTML::link_to_action('user@profile', 'Profile', array('taylor'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="226" name="param" description="" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="226" name="param" description="" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
          <tag line="226" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="226" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="226" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="245">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
        <argument line="245">
          <name>$title</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="245">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="245">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="258" package="Default">
        <name>link_to_language</name>
        <full_name>link_to_language</full_name>
        <docblock line="250">
          <description>Generate an HTML link to a different language</description>
          <long-description></long-description>
          <tag line="250" name="param" description="" type="string" variable="$language">
            <type by_reference="false">string</type>
          </tag>
          <tag line="250" name="param" description="" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
          <tag line="250" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="250" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="258">
          <name>$language</name>
          <default></default>
          <type/>
        </argument>
        <argument line="258">
          <name>$title</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="258">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="273" package="Default">
        <name>mailto</name>
        <full_name>mailto</full_name>
        <docblock line="263">
          <description>Generate an HTML mailto link.</description>
          <long-description>&lt;p&gt;The E-Mail address will be obfuscated to protect it from spam bots.&lt;/p&gt;</long-description>
          <tag line="263" name="param" description="" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="263" name="param" description="" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
          <tag line="263" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="263" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="273">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
        <argument line="273">
          <name>$title</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="273">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="290" package="Default">
        <name>email</name>
        <full_name>email</full_name>
        <docblock line="284">
          <description>Obfuscate an e-mail address to prevent spam-bots from sniffing it.</description>
          <long-description></long-description>
          <tag line="284" name="param" description="" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="284" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="290">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="303" package="Default">
        <name>image</name>
        <full_name>image</full_name>
        <docblock line="295">
          <description>Generate an HTML image element.</description>
          <long-description></long-description>
          <tag line="295" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="295" name="param" description="" type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="295" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="295" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="303">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="303">
          <name>$alt</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="303">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="317" package="Default">
        <name>ol</name>
        <full_name>ol</full_name>
        <docblock line="310">
          <description>Generate an ordered list of items.</description>
          <long-description></long-description>
          <tag line="310" name="param" description="" type="array" variable="$list">
            <type by_reference="false">array</type>
          </tag>
          <tag line="310" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="310" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="317">
          <name>$list</name>
          <default></default>
          <type/>
        </argument>
        <argument line="317">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="329" package="Default">
        <name>ul</name>
        <full_name>ul</full_name>
        <docblock line="322">
          <description>Generate an un-ordered list of items.</description>
          <long-description></long-description>
          <tag line="322" name="param" description="" type="array" variable="$list">
            <type by_reference="false">array</type>
          </tag>
          <tag line="322" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="322" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="329">
          <name>$list</name>
          <default></default>
          <type/>
        </argument>
        <argument line="329">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="Laravel" line="342" package="Default">
        <name>listing</name>
        <full_name>listing</full_name>
        <docblock line="334">
          <description>Generate an ordered or un-ordered list.</description>
          <long-description></long-description>
          <tag line="334" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="334" name="param" description="" type="array" variable="$list">
            <type by_reference="false">array</type>
          </tag>
          <tag line="334" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="334" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="342">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="342">
          <name>$list</name>
          <default></default>
          <type/>
        </argument>
        <argument line="342">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="380" package="Default">
        <name>dl</name>
        <full_name>dl</full_name>
        <docblock line="373">
          <description>Generate a definition list.</description>
          <long-description></long-description>
          <tag line="373" name="param" description="" type="array" variable="$list">
            <type by_reference="false">array</type>
          </tag>
          <tag line="373" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="373" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="380">
          <name>$list</name>
          <default></default>
          <type/>
        </argument>
        <argument line="380">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="401" package="Default">
        <name>attributes</name>
        <full_name>attributes</full_name>
        <docblock line="395">
          <description>Build a list of HTML attributes from an array.</description>
          <long-description></long-description>
          <tag line="395" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="395" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="401">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="427" package="Default">
        <name>obfuscate</name>
        <full_name>obfuscate</full_name>
        <docblock line="421">
          <description>Obfuscate a string to prevent spam-bots from sniffing it.</description>
          <long-description></long-description>
          <tag line="421" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="421" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="427">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="459" package="Default">
        <name>encoding</name>
        <full_name>encoding</full_name>
        <docblock line="454">
          <description>Get the appliction.encoding without needing to request it from Config::get() each time.</description>
          <long-description></long-description>
          <tag line="454" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="471" package="Default">
        <name>__callStatic</name>
        <full_name>__callStatic</full_name>
        <docblock line="464">
          <description>Dynamically handle calls to custom macros.</description>
          <long-description></long-description>
          <tag line="464" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="464" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="464" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="471">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="471">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/html.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\HTML</error>
    </parse_markers>
  </file>
  <file path="laravel/crypter.php" hash="6c12ddf5dc764604d49abb4a8d5da0b2" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Crypter</name>
      <full_name>\Laravel\Crypter</full_name>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$cipher</name>
        <default>MCRYPT_RIJNDAEL_256</default>
        <docblock line="5">
          <description>The encryption cipher.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$mode</name>
        <default>MCRYPT_MODE_CBC</default>
        <docblock line="12">
          <description>The encryption mode.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="24" namespace="Laravel" package="Default">
        <name>$block</name>
        <default>32</default>
        <docblock line="19">
          <description>The block size of the cipher.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="34" package="Default">
        <name>encrypt</name>
        <full_name>encrypt</full_name>
        <docblock line="26">
          <description>Encrypt a string using Mcrypt.</description>
          <long-description>&lt;p&gt;The string will be encrypted using the AES-256 scheme and will be base64 encoded.&lt;/p&gt;</long-description>
          <tag line="26" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="51" package="Default">
        <name>decrypt</name>
        <full_name>decrypt</full_name>
        <docblock line="45">
          <description>Decrypt a string using Mcrypt.</description>
          <long-description></long-description>
          <tag line="45" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="77" package="Default">
        <name>randomizer</name>
        <full_name>randomizer</full_name>
        <docblock line="72">
          <description>Get the most secure random number generator for the system.</description>
          <long-description></long-description>
          <tag line="72" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="106" package="Default">
        <name>iv_size</name>
        <full_name>iv_size</full_name>
        <docblock line="101">
          <description>Get the input vector size for the cipher and mode.</description>
          <long-description></long-description>
          <tag line="101" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="117" package="Default">
        <name>pad</name>
        <full_name>pad</full_name>
        <docblock line="111">
          <description>Add PKCS7 compatible padding on the given value.</description>
          <long-description></long-description>
          <tag line="111" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="130" package="Default">
        <name>unpad</name>
        <full_name>unpad</full_name>
        <docblock line="124">
          <description>Remove the PKCS7 compatible padding from the given value.</description>
          <long-description></long-description>
          <tag line="124" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="124" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="130">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="173" package="Default">
        <name>key</name>
        <full_name>key</full_name>
        <docblock line="168">
          <description>Get the encryption key from the application configuration.</description>
          <long-description></long-description>
          <tag line="168" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/crypter.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Crypter</error>
    </parse_markers>
  </file>
  <file path="laravel/core.php" hash="d201a3409ae88678d2e7f0e4a24b78b8" package="Default">
    <include line="45" type="Require" package="Default">
      <name/>
    </include>
    <include line="46" type="Require" package="Default">
      <name/>
    </include>
    <include line="47" type="Require" package="Default">
      <name/>
    </include>
    <include line="48" type="Require" package="Default">
      <name/>
    </include>
    <include line="49" type="Require" package="Default">
      <name/>
    </include>
    <include line="50" type="Require" package="Default">
      <name/>
    </include>
    <include line="238" type="Require" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="14" package="Default">
      <name>EXT</name>
      <full_name>\EXT</full_name>
      <value>'.php'</value>
    </constant>
    <constant namespace="global" line="15" package="Default">
      <name>CRLF</name>
      <full_name>\CRLF</full_name>
      <value>"\r\n"</value>
    </constant>
    <constant namespace="global" line="16" package="Default">
      <name>BLADE_EXT</name>
      <full_name>\BLADE_EXT</full_name>
      <value>'.blade.php'</value>
    </constant>
    <constant namespace="global" line="17" package="Default">
      <name>DEFAULT_BUNDLE</name>
      <full_name>\DEFAULT_BUNDLE</full_name>
      <value>'application'</value>
    </constant>
    <constant namespace="global" line="18" package="Default">
      <name>MB_STRING</name>
      <full_name>\MB_STRING</full_name>
      <value>(int) function_exists('mb_get_info')</value>
    </constant>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/core.php</error>
    </parse_markers>
  </file>
  <file path="laravel/blade.php" hash="34bd412ac68e439bd9c092d0a301b951" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Blade</name>
      <full_name>\Laravel\Blade</full_name>
      <property final="false" static="true" visibility="protected" line="10" namespace="Laravel" package="Default">
        <name>$compilers</name>
        <default>array('extensions', 'layouts', 'comments', 'echos', 'forelse', 'empty', 'endforelse', 'structure_openings', 'structure_closings', 'else', 'unless', 'endunless', 'includes', 'render_each', 'render', 'yields', 'yield_sections', 'section_start', 'section_end')</default>
        <docblock line="5">
          <description>All of the compiler functions used by Blade.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="37" namespace="Laravel" package="Default">
        <name>$extensions</name>
        <default>array()</default>
        <docblock line="32">
          <description>An array of user defined compilers.</description>
          <long-description></long-description>
          <tag line="32" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="44" package="Default">
        <name>sharpen</name>
        <full_name>sharpen</full_name>
        <docblock line="39">
          <description>Register the Blade view engine with Laravel.</description>
          <long-description></long-description>
          <tag line="39" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="88" package="Default">
        <name>extend</name>
        <full_name>extend</full_name>
        <docblock line="75">
          <description>Register a custom Blade compiler.</description>
          <long-description>&lt;pre&gt;&lt;code&gt;     Blade::extend(function($view)
    {
            return str_replace('foo', 'bar', $view);
        });
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="75" name="param" description="" type="\Closure" variable="$compiler">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="75" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$compiler</name>
          <default></default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="100" package="Default">
        <name>expired</name>
        <full_name>expired</full_name>
        <docblock line="93">
          <description>Determine if a view is "expired" and needs to be re-compiled.</description>
          <long-description></long-description>
          <tag line="93" name="param" description="" type="string" variable="$view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="93" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="93" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$view</name>
          <default></default>
          <type/>
        </argument>
        <argument line="100">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="111" package="Default">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="105">
          <description>Compiles the specified file containing Blade pseudo-code into valid PHP.</description>
          <long-description></long-description>
          <tag line="105" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="105" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="111">
          <name>$view</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="123" package="Default">
        <name>compile_string</name>
        <full_name>compile_string</full_name>
        <docblock line="116">
          <description>Compiles the given string containing Blade pseudo-code into valid PHP.</description>
          <long-description></long-description>
          <tag line="116" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="116" name="param" description="" type="\Laravel\View" variable="$view">
            <type by_reference="false">\Laravel\View</type>
          </tag>
          <tag line="116" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="123">
          <name>$view</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="141" package="Default">
        <name>compile_layouts</name>
        <full_name>compile_layouts</full_name>
        <docblock line="135">
          <description>Rewrites Blade "@layout" expressions into valid PHP.</description>
          <long-description></long-description>
          <tag line="135" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="135" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="172" package="Default">
        <name>extract</name>
        <full_name>extract</full_name>
        <docblock line="166">
          <description>Extract a variable value out of a Blade expression.</description>
          <long-description></long-description>
          <tag line="166" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="166" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="172">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="172">
          <name>$expression</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="185" package="Default">
        <name>compile_comments</name>
        <full_name>compile_comments</full_name>
        <docblock line="179">
          <description>Rewrites Blade comments into PHP comments.</description>
          <long-description></long-description>
          <tag line="179" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="198" package="Default">
        <name>compile_echos</name>
        <full_name>compile_echos</full_name>
        <docblock line="192">
          <description>Rewrites Blade echo statements into PHP echo statements.</description>
          <long-description></long-description>
          <tag line="192" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="192" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="198">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="211" package="Default">
        <name>compile_forelse</name>
        <full_name>compile_forelse</full_name>
        <docblock line="205">
          <description>Rewrites Blade "for else" statements into valid PHP.</description>
          <long-description></long-description>
          <tag line="205" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="205" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="211">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="245" package="Default">
        <name>compile_empty</name>
        <full_name>compile_empty</full_name>
        <docblock line="239">
          <description>Rewrites Blade "empty" statements into valid PHP.</description>
          <long-description></long-description>
          <tag line="239" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="239" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="245">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="256" package="Default">
        <name>compile_endforelse</name>
        <full_name>compile_endforelse</full_name>
        <docblock line="250">
          <description>Rewrites Blade "forelse" endings into valid PHP.</description>
          <long-description></long-description>
          <tag line="250" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="250" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="256">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="267" package="Default">
        <name>compile_structure_openings</name>
        <full_name>compile_structure_openings</full_name>
        <docblock line="261">
          <description>Rewrites Blade structure openings into PHP structure openings.</description>
          <long-description></long-description>
          <tag line="261" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="261" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="267">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="280" package="Default">
        <name>compile_structure_closings</name>
        <full_name>compile_structure_closings</full_name>
        <docblock line="274">
          <description>Rewrites Blade structure closings into PHP structure closings.</description>
          <long-description></long-description>
          <tag line="274" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="274" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="280">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="293" package="Default">
        <name>compile_else</name>
        <full_name>compile_else</full_name>
        <docblock line="287">
          <description>Rewrites Blade else statements into PHP else statements.</description>
          <long-description></long-description>
          <tag line="287" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="287" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="293">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="304" package="Default">
        <name>compile_unless</name>
        <full_name>compile_unless</full_name>
        <docblock line="298">
          <description>Rewrites Blade "unless" statements into valid PHP.</description>
          <long-description></long-description>
          <tag line="298" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="298" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="304">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="317" package="Default">
        <name>compile_endunless</name>
        <full_name>compile_endunless</full_name>
        <docblock line="311">
          <description>Rewrites Blade "unless" endings into valid PHP.</description>
          <long-description></long-description>
          <tag line="311" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="311" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="317">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="328" package="Default">
        <name>compile_includes</name>
        <full_name>compile_includes</full_name>
        <docblock line="322">
          <description>Rewrites Blade @include statements into valid PHP.</description>
          <long-description></long-description>
          <tag line="322" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="322" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="328">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="341" package="Default">
        <name>compile_render</name>
        <full_name>compile_render</full_name>
        <docblock line="335">
          <description>Rewrites Blade @render statements into valid PHP.</description>
          <long-description></long-description>
          <tag line="335" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="335" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="341">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="354" package="Default">
        <name>compile_render_each</name>
        <full_name>compile_render_each</full_name>
        <docblock line="348">
          <description>Rewrites Blade @render_each statements into valid PHP.</description>
          <long-description></long-description>
          <tag line="348" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="348" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="354">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="369" package="Default">
        <name>compile_yields</name>
        <full_name>compile_yields</full_name>
        <docblock line="361">
          <description>Rewrites Blade @yield statements into Section statements.</description>
          <long-description>&lt;p&gt;The Blade @yield statement is a shortcut to the Section::yield method.&lt;/p&gt;</long-description>
          <tag line="361" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="361" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="369">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="381" package="Default">
        <name>compile_yield_sections</name>
        <full_name>compile_yield_sections</full_name>
        <docblock line="376">
          <description>Rewrites Blade yield section statements into valid PHP.</description>
          <long-description></long-description>
          <tag line="376" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="381">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="396" package="Default">
        <name>compile_section_start</name>
        <full_name>compile_section_start</full_name>
        <docblock line="388">
          <description>Rewrites Blade @section statements into Section statements.</description>
          <long-description>&lt;p&gt;The Blade @section statement is a shortcut to the Section::start method.&lt;/p&gt;</long-description>
          <tag line="388" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="388" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="396">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="411" package="Default">
        <name>compile_section_end</name>
        <full_name>compile_section_end</full_name>
        <docblock line="403">
          <description>Rewrites Blade @endsection statements into Section statements.</description>
          <long-description>&lt;p&gt;The Blade @endsection statement is a shortcut to the Section::stop method.&lt;/p&gt;</long-description>
          <tag line="403" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="403" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="411">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="422" package="Default">
        <name>compile_extensions</name>
        <full_name>compile_extensions</full_name>
        <docblock line="416">
          <description>Execute user defined compilers.</description>
          <long-description></long-description>
          <tag line="416" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="416" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="422">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="438" package="Default">
        <name>matcher</name>
        <full_name>matcher</full_name>
        <docblock line="432">
          <description>Get the regular expression for a generic Blade function.</description>
          <long-description></long-description>
          <tag line="432" name="param" description="" type="string" variable="$function">
            <type by_reference="false">string</type>
          </tag>
          <tag line="432" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="438">
          <name>$function</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="449" package="Default">
        <name>compiled</name>
        <full_name>compiled</full_name>
        <docblock line="443">
          <description>Get the fully qualified path for a compiled view.</description>
          <long-description></long-description>
          <tag line="443" name="param" description="" type="string" variable="$view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="443" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="449">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/blade.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Blade</error>
      <error line="105" code="50014">Name of argument $view does not match with the DocBlock's name $path in compile()</error>
      <notice line="105" code="50013">Parameter $path could not be found in compile()</notice>
      <error line="166" code="50015">Argument $expression is missing from the Docblock of extract()</error>
      <error line="376" code="50015">Argument $value is missing from the Docblock of compile_yield_sections()</error>
      <error line="443" code="50014">Name of argument $path does not match with the DocBlock's name $view in compiled()</error>
      <notice line="443" code="50013">Parameter $view could not be found in compiled()</notice>
    </parse_markers>
  </file>
  <file path="laravel/bundle.php" hash="b16d7b9af26e6e0f1e7b0890ebb88963" package="Default">
    <include line="102" type="Require" package="Default">
      <name/>
    </include>
    <include line="136" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Laravel" line="6" package="Default">
      <extends/>
      <name>Bundle</name>
      <full_name>\Laravel\Bundle</full_name>
      <property final="false" static="true" visibility="public" line="13" namespace="Laravel" package="Default">
        <name>$bundles</name>
        <default>array()</default>
        <docblock line="8">
          <description>All of the application's bundles.</description>
          <long-description></long-description>
          <tag line="8" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="20" namespace="Laravel" package="Default">
        <name>$elements</name>
        <default>array()</default>
        <docblock line="15">
          <description>A cache of the parsed bundle elements.</description>
          <long-description></long-description>
          <tag line="15" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="27" namespace="Laravel" package="Default">
        <name>$started</name>
        <default>array()</default>
        <docblock line="22">
          <description>All of the bundles that have been started.</description>
          <long-description></long-description>
          <tag line="22" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="34" namespace="Laravel" package="Default">
        <name>$routed</name>
        <default>array()</default>
        <docblock line="29">
          <description>All of the bundles that have their routes files loaded.</description>
          <long-description></long-description>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="43" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="36">
          <description>Register the bundle for the application.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="36" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="36" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$config</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="84" package="Default">
        <name>start</name>
        <full_name>start</full_name>
        <docblock line="76">
          <description>Load a bundle by running its start-up script.</description>
          <long-description>&lt;p&gt;If the bundle has already been started, no action will be taken.&lt;/p&gt;</long-description>
          <tag line="76" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="121" package="Default">
        <name>routes</name>
        <full_name>routes</full_name>
        <docblock line="115">
          <description>Load the "routes" file for a given bundle.</description>
          <long-description></long-description>
          <tag line="115" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="115" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="147" package="Default">
        <name>autoloads</name>
        <full_name>autoloads</full_name>
        <docblock line="140">
          <description>Register the auto-loading configuration for a bundle.</description>
          <long-description></long-description>
          <tag line="140" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="140" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="147">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="175" package="Default">
        <name>disable</name>
        <full_name>disable</full_name>
        <docblock line="169">
          <description>Disable a bundle for the current request.</description>
          <long-description></long-description>
          <tag line="169" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="169" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="188" package="Default">
        <name>handles</name>
        <full_name>handles</full_name>
        <docblock line="180">
          <description>Determine which bundle handles the given URI.</description>
          <long-description>&lt;p&gt;The default bundle is returned if no other bundle is assigned.&lt;/p&gt;</long-description>
          <tag line="180" name="param" description="" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="180" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="188">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="209" package="Default">
        <name>exists</name>
        <full_name>exists</full_name>
        <docblock line="203">
          <description>Determine if a bundle exists within the bundles directory.</description>
          <long-description></long-description>
          <tag line="203" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="203" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="209">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="220" package="Default">
        <name>started</name>
        <full_name>started</full_name>
        <docblock line="214">
          <description>Determine if a given bundle has been started for the request.</description>
          <long-description></long-description>
          <tag line="214" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="214" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="220">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="231" package="Default">
        <name>routed</name>
        <full_name>routed</full_name>
        <docblock line="225">
          <description>Determine if a given bundle has its routes file loaded.</description>
          <long-description></long-description>
          <tag line="225" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="225" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="231">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="242" package="Default">
        <name>prefix</name>
        <full_name>prefix</full_name>
        <docblock line="236">
          <description>Get the identifier prefix for the bundle.</description>
          <long-description></long-description>
          <tag line="236" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="236" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="242">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="253" package="Default">
        <name>class_prefix</name>
        <full_name>class_prefix</full_name>
        <docblock line="247">
          <description>Get the class prefix for a given bundle.</description>
          <long-description></long-description>
          <tag line="247" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="247" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="253">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="272" package="Default">
        <name>path</name>
        <full_name>path</full_name>
        <docblock line="258">
          <description>Return the root bundle path for a given bundle.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Returns the bundle path for the "admin" bundle
    $path = Bundle::path('admin');

    // Returns the path('app') constant as the default bundle
    $path = Bundle::path('application');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="258" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="258" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="272">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="300" package="Default">
        <name>assets</name>
        <full_name>assets</full_name>
        <docblock line="294">
          <description>Return the root asset path for the given bundle.</description>
          <long-description></long-description>
          <tag line="294" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="294" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="300">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="318" package="Default">
        <name>name</name>
        <full_name>name</full_name>
        <docblock line="307">
          <description>Get the bundle name from a given identifier.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Returns "admin" as the bundle name for the identifier
    $bundle = Bundle::name('admin::home.index');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="307" name="param" description="" type="string" variable="$identifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="307" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="318">
          <name>$identifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="336" package="Default">
        <name>element</name>
        <full_name>element</full_name>
        <docblock line="325">
          <description>Get the element name from a given identifier.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Returns "home.index" as the element name for the identifier
    $bundle = Bundle::bundle('admin::home.index');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="325" name="param" description="" type="string" variable="$identifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="325" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="336">
          <name>$identifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="358" package="Default">
        <name>identifier</name>
        <full_name>identifier</full_name>
        <docblock line="343">
          <description>Reconstruct an identifier from a given bundle and element.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Returns "admin::home.index"
    $identifier = Bundle::identifier('admin', 'home.index');

    // Returns "home.index"
    $identifier = Bundle::identifier('application', 'home.index');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="343" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="343" name="param" description="" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="343" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="358">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="358">
          <name>$element</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="369" package="Default">
        <name>resolve</name>
        <full_name>resolve</full_name>
        <docblock line="363">
          <description>Return the bundle name if it exists, else return the default bundle.</description>
          <long-description></long-description>
          <tag line="363" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="363" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="369">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="388" package="Default">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="374">
          <description>Parse an element identifier and return the bundle name and element.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Returns array(null, 'admin.user')
    $element = Bundle::parse('admin.user');

    // Parses "admin::user" and returns array('admin', 'user')
    $element = Bundle::parse('admin::user');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="374" name="param" description="" type="string" variable="$identifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="374" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="388">
          <name>$identifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="419" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="413">
          <description>Get the information for a given bundle.</description>
          <long-description></long-description>
          <tag line="413" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="413" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="419">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="432" package="Default">
        <name>option</name>
        <full_name>option</full_name>
        <docblock line="424">
          <description>Get an option for a given bundle.</description>
          <long-description></long-description>
          <tag line="424" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="424" name="param" description="" type="string" variable="$option">
            <type by_reference="false">string</type>
          </tag>
          <tag line="424" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="424" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="432">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="432">
          <name>$option</name>
          <default></default>
          <type/>
        </argument>
        <argument line="432">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="449" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="444">
          <description>Get all of the installed bundles for the application.</description>
          <long-description></long-description>
          <tag line="444" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="459" package="Default">
        <name>names</name>
        <full_name>names</full_name>
        <docblock line="454">
          <description>Get all of the installed bundle names.</description>
          <long-description></long-description>
          <tag line="454" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="470" package="Default">
        <name>expand</name>
        <full_name>expand</full_name>
        <docblock line="464">
          <description>Expand given bundle path of form "[bundle::]path/.</description>
          <long-description>&lt;p&gt;..".&lt;/p&gt;</long-description>
          <tag line="464" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="464" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="470">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/bundle.php</error>
      <error line="6" code="50000">No DocBlock was found for \Laravel\Bundle</error>
    </parse_markers>
  </file>
  <file path="laravel/view.php" hash="eb70e8a36c945d28e43787f94077c313" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <implements>\ArrayAccess</implements>
      <name>View</name>
      <full_name>\Laravel\View</full_name>
      <constant namespace="Laravel" line="66" package="Default">
        <name>loader</name>
        <full_name>loader</full_name>
        <value>'laravel.view.loader'</value>
        <docblock line="61">
          <description>The Laravel view loader event name.</description>
          <long-description></long-description>
          <tag line="61" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="Laravel" line="73" package="Default">
        <name>engine</name>
        <full_name>engine</full_name>
        <value>'laravel.view.engine'</value>
        <docblock line="68">
          <description>The Laravel view engine event name.</description>
          <long-description></long-description>
          <tag line="68" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$view</name>
        <default></default>
        <docblock line="5">
          <description>The name of the view.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$data</name>
        <default></default>
        <docblock line="12">
          <description>The view data.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="Laravel" package="Default">
        <name>$path</name>
        <default></default>
        <docblock line="19">
          <description>The path to the view on disk.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="31" namespace="Laravel" package="Default">
        <name>$shared</name>
        <default>array()</default>
        <docblock line="26">
          <description>All of the shared view data.</description>
          <long-description></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="38" namespace="Laravel" package="Default">
        <name>$names</name>
        <default>array()</default>
        <docblock line="33">
          <description>All of the registered view names.</description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="45" namespace="Laravel" package="Default">
        <name>$cache</name>
        <default>array()</default>
        <docblock line="40">
          <description>The cache content of loaded view files.</description>
          <long-description></long-description>
          <tag line="40" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="52" namespace="Laravel" package="Default">
        <name>$last</name>
        <default></default>
        <docblock line="47">
          <description>THe last view to be rendered.</description>
          <long-description></long-description>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="59" namespace="Laravel" package="Default">
        <name>$render_count</name>
        <default>0</default>
        <docblock line="54">
          <description>The render operations taking place.</description>
          <long-description></long-description>
          <tag line="54" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="93" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="75">
          <description>Create a new view instance.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a new view instance
    $view = new View('home.index');

    // Create a new view instance of a bundle's view
    $view = new View('admin::home.index');

    // Create a new view instance with bound data
    $view = new View('home.index', array('name' =&gt; 'Taylor'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="75" name="param" description="" type="string" variable="$view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="75" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="75" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$view</name>
          <default></default>
          <type/>
        </argument>
        <argument line="93">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="133" package="Default">
        <name>exists</name>
        <full_name>exists</full_name>
        <docblock line="126">
          <description>Determine if the given view exists.</description>
          <long-description></long-description>
          <tag line="126" name="param" description="" type="string" variable="$view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="param" description="" type="boolean" variable="$return_path">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="126" name="return" description="" type="string|bool">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="133">
          <name>$view</name>
          <default></default>
          <type/>
        </argument>
        <argument line="133">
          <name>$return_path</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="163" package="Default">
        <name>path</name>
        <full_name>path</full_name>
        <docblock line="157">
          <description>Get the path to a given view on disk.</description>
          <long-description></long-description>
          <tag line="157" name="param" description="" type="string" variable="$view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="157" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$view</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="181" package="Default">
        <name>file</name>
        <full_name>file</full_name>
        <docblock line="173">
          <description>Get the path to a view using the default folder convention.</description>
          <long-description></long-description>
          <tag line="173" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="173" name="param" description="" type="string" variable="$view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="173" name="param" description="" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="173" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="181">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="181">
          <name>$view</name>
          <default></default>
          <type/>
        </argument>
        <argument line="181">
          <name>$directory</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="216" package="Default">
        <name>make</name>
        <full_name>make</full_name>
        <docblock line="198">
          <description>Create a new view instance.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a new view instance
    $view = View::make('home.index');

    // Create a new view instance of a bundle's view
    $view = View::make('admin::home.index');

    // Create a new view instance with bound data
    $view = View::make('home.index', array('name' =&gt; 'Taylor'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="198" name="param" description="" type="string" variable="$view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="198" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="198" name="return" description="" type="\Laravel\View">
            <type by_reference="false">\Laravel\View</type>
          </tag>
        </docblock>
        <argument line="216">
          <name>$view</name>
          <default></default>
          <type/>
        </argument>
        <argument line="216">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="236" package="Default">
        <name>of</name>
        <full_name>of</full_name>
        <docblock line="221">
          <description>Create a new view instance of a named view.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a new named view instance
    $view = View::of('profile');

    // Create a new named view instance with bound data
    $view = View::of('profile', array('name' =&gt; 'Taylor'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="221" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="221" name="return" description="" type="\Laravel\View">
            <type by_reference="false">\Laravel\View</type>
          </tag>
        </docblock>
        <argument line="236">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="236">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="256" package="Default">
        <name>name</name>
        <full_name>name</full_name>
        <docblock line="241">
          <description>Assign a name to a view.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Assign a name to a view
    View::name('partials.profile', 'profile');

    // Resolve an instance of a named view
    $view = View::of('profile');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="241" name="param" description="" type="string" variable="$view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="241" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="241" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="256">
          <name>$view</name>
          <default></default>
          <type/>
        </argument>
        <argument line="256">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="276" package="Default">
        <name>composer</name>
        <full_name>composer</full_name>
        <docblock line="261">
          <description>Register a view composer with the Event class.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Register a composer for the "home.index" view
    View::composer('home.index', function($view)
    {
        $view['title'] = 'Home';
    });
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="261" name="param" description="" type="string|array" variable="$views">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="261" name="param" description="" type="\Closure" variable="$composer">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="261" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="276">
          <name>$views</name>
          <default></default>
          <type/>
        </argument>
        <argument line="276">
          <name>$composer</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="295" package="Default">
        <name>render_each</name>
        <full_name>render_each</full_name>
        <docblock line="286">
          <description>Get the rendered contents of a partial from a loop.</description>
          <long-description></long-description>
          <tag line="286" name="param" description="" type="string" variable="$view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="286" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="286" name="param" description="" type="string" variable="$iterator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="286" name="param" description="" type="string" variable="$empty">
            <type by_reference="false">string</type>
          </tag>
          <tag line="286" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="295">
          <name>$view</name>
          <default></default>
          <type/>
        </argument>
        <argument line="295">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="295">
          <name>$iterator</name>
          <default></default>
          <type/>
        </argument>
        <argument line="295">
          <name>$empty</name>
          <default>'raw|'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="335" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="330">
          <description>Get the evaluated string content of the view.</description>
          <long-description></long-description>
          <tag line="330" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="370" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="365">
          <description>Get the evaluated contents of the view.</description>
          <long-description></long-description>
          <tag line="365" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="415" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="410">
          <description>Get the contents of the view file from disk.</description>
          <long-description></long-description>
          <tag line="410" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="436" package="Default">
        <name>data</name>
        <full_name>data</full_name>
        <docblock line="429">
          <description>Get the array of view data for the view instance.</description>
          <long-description>&lt;p&gt;The shared view data will be combined with the view data.&lt;/p&gt;</long-description>
          <tag line="429" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="470" package="Default">
        <name>nest</name>
        <full_name>nest</full_name>
        <docblock line="454">
          <description>Add a view instance to the view data.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Add a view instance to a view's data
    $view = View::make('foo')-&gt;nest('footer', 'partials.footer');

    // Equivalent functionality using the "with" method
    $view = View::make('foo')-&gt;with('footer', View::make('partials.footer'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="454" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="454" name="param" description="" type="string" variable="$view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="454" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="454" name="return" description="" type="\Laravel\View">
            <type by_reference="false">\Laravel\View</type>
          </tag>
        </docblock>
        <argument line="470">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="470">
          <name>$view</name>
          <default></default>
          <type/>
        </argument>
        <argument line="470">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="484" package="Default">
        <name>with</name>
        <full_name>with</full_name>
        <docblock line="475">
          <description>Add a key / value pair to the view data.</description>
          <long-description>&lt;p&gt;Bound data will be available to the view as variables.&lt;/p&gt;</long-description>
          <tag line="475" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="475" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="475" name="return" description="" type="\Laravel\View">
            <type by_reference="false">\Laravel\View</type>
          </tag>
        </docblock>
        <argument line="484">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="484">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="507" package="Default">
        <name>shares</name>
        <full_name>shares</full_name>
        <docblock line="498">
          <description>Add a key / value pair to the shared view data.</description>
          <long-description>&lt;p&gt;Shared view data is accessible to every view created by the application.&lt;/p&gt;</long-description>
          <tag line="498" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="498" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="498" name="return" description="" type="\Laravel\View">
            <type by_reference="false">\Laravel\View</type>
          </tag>
        </docblock>
        <argument line="507">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="507">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="522" package="Default">
        <name>share</name>
        <full_name>share</full_name>
        <docblock line="513">
          <description>Add a key / value pair to the shared view data.</description>
          <long-description>&lt;p&gt;Shared view data is accessible to every view created by the application.&lt;/p&gt;</long-description>
          <tag line="513" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="513" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="513" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="522">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="522">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="530" package="Default">
        <name>offsetExists</name>
        <full_name>offsetExists</full_name>
        <docblock line="527">
          <description>Implementation of the ArrayAccess offsetExists method.</description>
          <long-description></long-description>
        </docblock>
        <argument line="530">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="538" package="Default">
        <name>offsetGet</name>
        <full_name>offsetGet</full_name>
        <docblock line="535">
          <description>Implementation of the ArrayAccess offsetGet method.</description>
          <long-description></long-description>
        </docblock>
        <argument line="538">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="546" package="Default">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="543">
          <description>Implementation of the ArrayAccess offsetSet method.</description>
          <long-description></long-description>
        </docblock>
        <argument line="546">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="546">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="554" package="Default">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="551">
          <description>Implementation of the ArrayAccess offsetUnset method.</description>
          <long-description></long-description>
        </docblock>
        <argument line="554">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="562" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="559">
          <description>Magic Method for handling dynamic data access.</description>
          <long-description></long-description>
        </docblock>
        <argument line="562">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="570" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="567">
          <description>Magic Method for handling the dynamic setting of data.</description>
          <long-description></long-description>
        </docblock>
        <argument line="570">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="570">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="578" package="Default">
        <name>__isset</name>
        <full_name>__isset</full_name>
        <docblock line="575">
          <description>Magic Method for checking dynamically-set data.</description>
          <long-description></long-description>
        </docblock>
        <argument line="578">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="588" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="583">
          <description>Get the evaluated string content of the view.</description>
          <long-description></long-description>
          <tag line="583" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="598" package="Default">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="593">
          <description>Magic Method for handling dynamic functions.</description>
          <long-description>&lt;p&gt;This method handles calls to dynamic with helpers.&lt;/p&gt;</long-description>
        </docblock>
        <argument line="598">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="598">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/view.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\View</error>
      <error line="527" code="50015">Argument $offset is missing from the Docblock of offsetExists()</error>
      <error line="535" code="50015">Argument $offset is missing from the Docblock of offsetGet()</error>
      <error line="543" code="50015">Argument $offset is missing from the Docblock of offsetSet()</error>
      <error line="543" code="50015">Argument $value is missing from the Docblock of offsetSet()</error>
      <error line="551" code="50015">Argument $offset is missing from the Docblock of offsetUnset()</error>
      <error line="559" code="50015">Argument $key is missing from the Docblock of __get()</error>
      <error line="567" code="50015">Argument $key is missing from the Docblock of __set()</error>
      <error line="567" code="50015">Argument $value is missing from the Docblock of __set()</error>
      <error line="575" code="50015">Argument $key is missing from the Docblock of __isset()</error>
      <error line="593" code="50015">Argument $method is missing from the Docblock of __call()</error>
      <error line="593" code="50015">Argument $parameters is missing from the Docblock of __call()</error>
    </parse_markers>
  </file>
  <file path="laravel/validator.php" hash="0495e76cd78370574a756e0de725ac7d" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Validator</name>
      <full_name>\Laravel\Validator</full_name>
      <property final="false" static="false" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$attributes</name>
        <default></default>
        <docblock line="5">
          <description>The array being validated.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$errors</name>
        <default></default>
        <docblock line="12">
          <description>The post-validation error messages.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="\Laravel\Messages">
            <type by_reference="false">\Laravel\Messages</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="Laravel" package="Default">
        <name>$rules</name>
        <default>array()</default>
        <docblock line="19">
          <description>The validation rules.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="Laravel" package="Default">
        <name>$messages</name>
        <default>array()</default>
        <docblock line="26">
          <description>The validation messages.</description>
          <long-description></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="Laravel" package="Default">
        <name>$db</name>
        <default></default>
        <docblock line="33">
          <description>The database connection that should be used by the validator.</description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="\Laravel\Database\Connection">
            <type by_reference="false">\Laravel\Database\Connection</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="Laravel" package="Default">
        <name>$bundle</name>
        <default>DEFAULT_BUNDLE</default>
        <docblock line="40">
          <description>The bundle for which the validation is being run.</description>
          <long-description></long-description>
          <tag line="40" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="Laravel" package="Default">
        <name>$language</name>
        <default></default>
        <docblock line="47">
          <description>The language that should be used when retrieving error messages.</description>
          <long-description></long-description>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="59" namespace="Laravel" package="Default">
        <name>$size_rules</name>
        <default>array('size', 'between', 'min', 'max')</default>
        <docblock line="54">
          <description>The size related validation rules.</description>
          <long-description></long-description>
          <tag line="54" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="66" namespace="Laravel" package="Default">
        <name>$numeric_rules</name>
        <default>array('numeric', 'integer')</default>
        <docblock line="61">
          <description>The numeric related validation rules.</description>
          <long-description></long-description>
          <tag line="61" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="73" namespace="Laravel" package="Default">
        <name>$validators</name>
        <default>array()</default>
        <docblock line="68">
          <description>The registered custom validators.</description>
          <long-description></long-description>
          <tag line="68" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="83" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="75">
          <description>Create a new validator instance.</description>
          <long-description></long-description>
          <tag line="75" name="param" description="" type="mixed" variable="$attributes">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="75" name="param" description="" type="array" variable="$rules">
            <type by_reference="false">array</type>
          </tag>
          <tag line="75" name="param" description="" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="75" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="83">
          <name>$rules</name>
          <default></default>
          <type/>
        </argument>
        <argument line="83">
          <name>$messages</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="103" package="Default">
        <name>make</name>
        <full_name>make</full_name>
        <docblock line="95">
          <description>Create a new validator instance.</description>
          <long-description></long-description>
          <tag line="95" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="95" name="param" description="" type="array" variable="$rules">
            <type by_reference="false">array</type>
          </tag>
          <tag line="95" name="param" description="" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="95" name="return" description="" type="\Laravel\Validator">
            <type by_reference="false">\Laravel\Validator</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="103">
          <name>$rules</name>
          <default></default>
          <type/>
        </argument>
        <argument line="103">
          <name>$messages</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="115" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="108">
          <description>Register a custom validator.</description>
          <long-description></long-description>
          <tag line="108" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="108" name="param" description="" type="\Closure" variable="$validator">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="108" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="115">
          <name>$validator</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="125" package="Default">
        <name>passes</name>
        <full_name>passes</full_name>
        <docblock line="120">
          <description>Validate the target array using the specified validation rules.</description>
          <long-description></long-description>
          <tag line="120" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="135" package="Default">
        <name>fails</name>
        <full_name>fails</full_name>
        <docblock line="130">
          <description>Validate the target array using the specified validation rules.</description>
          <long-description></long-description>
          <tag line="130" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="145" package="Default">
        <name>invalid</name>
        <full_name>invalid</full_name>
        <docblock line="140">
          <description>Validate the target array using the specified validation rules.</description>
          <long-description></long-description>
          <tag line="140" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="155" package="Default">
        <name>valid</name>
        <full_name>valid</full_name>
        <docblock line="150">
          <description>Validate the target array using the specified validation rules.</description>
          <long-description></long-description>
          <tag line="150" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="174" package="Default">
        <name>check</name>
        <full_name>check</full_name>
        <docblock line="167">
          <description>Evaluate an attribute against a validation rule.</description>
          <long-description></long-description>
          <tag line="167" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="174">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="204" package="Default">
        <name>validatable</name>
        <full_name>validatable</full_name>
        <docblock line="192">
          <description>Determine if an attribute is validatable.</description>
          <long-description>&lt;p&gt;To be considered validatable, the attribute must either exist, or the rule
being checked must implicitly validate "required", such as the "required"
rule or the "accepted" rule.&lt;/p&gt;</long-description>
          <tag line="192" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="192" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="192" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="192" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="204">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="204">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="204">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="215" package="Default">
        <name>implicit</name>
        <full_name>implicit</full_name>
        <docblock line="209">
          <description>Determine if a given rule implies that the attribute is required.</description>
          <long-description></long-description>
          <tag line="209" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="209" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="215">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="228" package="Default">
        <name>error</name>
        <full_name>error</full_name>
        <docblock line="220">
          <description>Add an error message to the validator's collection of messages.</description>
          <long-description></long-description>
          <tag line="220" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="220" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="220" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="220" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="228">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="228">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="228">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="242" package="Default">
        <name>validate_required</name>
        <full_name>validate_required</full_name>
        <docblock line="235">
          <description>Validate that a required attribute exists in the attributes array.</description>
          <long-description></long-description>
          <tag line="235" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="235" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="235" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="242">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="242">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="269" package="Default">
        <name>validate_required_with</name>
        <full_name>validate_required_with</full_name>
        <docblock line="260">
          <description>Validate that an attribute exists in the attributes array, if another
attribute exists in the attributes array.</description>
          <long-description></long-description>
          <tag line="260" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="260" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="260" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="260" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="269">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="269">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="269">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="289" package="Default">
        <name>validate_confirmed</name>
        <full_name>validate_confirmed</full_name>
        <docblock line="282">
          <description>Validate that an attribute has a matching confirmation attribute.</description>
          <long-description></long-description>
          <tag line="282" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="282" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="282" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="289">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="289">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="303" package="Default">
        <name>validate_accepted</name>
        <full_name>validate_accepted</full_name>
        <docblock line="294">
          <description>Validate that an attribute was "accepted".</description>
          <long-description>&lt;p&gt;This validation rule implies the attribute is "required".&lt;/p&gt;</long-description>
          <tag line="294" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="294" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="294" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="303">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="303">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="316" package="Default">
        <name>validate_same</name>
        <full_name>validate_same</full_name>
        <docblock line="308">
          <description>Validate that an attribute is the same as another attribute.</description>
          <long-description></long-description>
          <tag line="308" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="308" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="308" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="308" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="316">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="316">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="316">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="331" package="Default">
        <name>validate_different</name>
        <full_name>validate_different</full_name>
        <docblock line="323">
          <description>Validate that an attribute is different from another attribute.</description>
          <long-description></long-description>
          <tag line="323" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="323" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="323" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="323" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="331">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="331">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="331">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="345" package="Default">
        <name>validate_numeric</name>
        <full_name>validate_numeric</full_name>
        <docblock line="338">
          <description>Validate that an attribute is numeric.</description>
          <long-description></long-description>
          <tag line="338" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="338" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="338" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="345">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="345">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="357" package="Default">
        <name>validate_integer</name>
        <full_name>validate_integer</full_name>
        <docblock line="350">
          <description>Validate that an attribute is an integer.</description>
          <long-description></long-description>
          <tag line="350" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="350" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="350" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="357">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="357">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="370" package="Default">
        <name>validate_size</name>
        <full_name>validate_size</full_name>
        <docblock line="362">
          <description>Validate the size of an attribute.</description>
          <long-description></long-description>
          <tag line="362" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="362" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="362" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="362" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="370">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="370">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="370">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="383" package="Default">
        <name>validate_between</name>
        <full_name>validate_between</full_name>
        <docblock line="375">
          <description>Validate the size of an attribute is between a set of values.</description>
          <long-description></long-description>
          <tag line="375" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="375" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="375" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="375" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="383">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="383">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="383">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="398" package="Default">
        <name>validate_min</name>
        <full_name>validate_min</full_name>
        <docblock line="390">
          <description>Validate the size of an attribute is greater than a minimum value.</description>
          <long-description></long-description>
          <tag line="390" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="390" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="390" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="390" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="398">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="398">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="398">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="411" package="Default">
        <name>validate_max</name>
        <full_name>validate_max</full_name>
        <docblock line="403">
          <description>Validate the size of an attribute is less than a maximum value.</description>
          <long-description></long-description>
          <tag line="403" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="403" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="403" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="403" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="411">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="411">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="411">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="423" package="Default">
        <name>size</name>
        <full_name>size</full_name>
        <docblock line="416">
          <description>Get the size of an attribute.</description>
          <long-description></long-description>
          <tag line="416" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="416" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="416" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="423">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="423">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="451" package="Default">
        <name>validate_in</name>
        <full_name>validate_in</full_name>
        <docblock line="443">
          <description>Validate an attribute is contained within a list of values.</description>
          <long-description></long-description>
          <tag line="443" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="443" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="443" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="443" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="451">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="451">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="451">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="464" package="Default">
        <name>validate_not_in</name>
        <full_name>validate_not_in</full_name>
        <docblock line="456">
          <description>Validate an attribute is not contained within a list of values.</description>
          <long-description></long-description>
          <tag line="456" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="456" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="456" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="456" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="464">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="464">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="464">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="479" package="Default">
        <name>validate_unique</name>
        <full_name>validate_unique</full_name>
        <docblock line="469">
          <description>Validate the uniqueness of an attribute value on a given database table.</description>
          <long-description>&lt;p&gt;If a database column is not specified, the attribute will be used.&lt;/p&gt;</long-description>
          <tag line="469" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="469" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="469" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="469" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="479">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="479">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="479">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="512" package="Default">
        <name>validate_exists</name>
        <full_name>validate_exists</full_name>
        <docblock line="504">
          <description>Validate the existence of an attribute value in a database table.</description>
          <long-description></long-description>
          <tag line="504" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="504" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="504" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="504" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="512">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="512">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="512">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="545" package="Default">
        <name>validate_ip</name>
        <full_name>validate_ip</full_name>
        <docblock line="538">
          <description>Validate that an attribute is a valid IP.</description>
          <long-description></long-description>
          <tag line="538" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="538" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="538" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="545">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="545">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="557" package="Default">
        <name>validate_email</name>
        <full_name>validate_email</full_name>
        <docblock line="550">
          <description>Validate that an attribute is a valid e-mail address.</description>
          <long-description></long-description>
          <tag line="550" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="550" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="550" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="557">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="557">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="569" package="Default">
        <name>validate_url</name>
        <full_name>validate_url</full_name>
        <docblock line="562">
          <description>Validate that an attribute is a valid URL.</description>
          <long-description></long-description>
          <tag line="562" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="562" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="562" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="569">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="569">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="581" package="Default">
        <name>validate_active_url</name>
        <full_name>validate_active_url</full_name>
        <docblock line="574">
          <description>Validate that an attribute is an active URL.</description>
          <long-description></long-description>
          <tag line="574" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="574" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="574" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="581">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="581">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="595" package="Default">
        <name>validate_image</name>
        <full_name>validate_image</full_name>
        <docblock line="588">
          <description>Validate the MIME type of a file is an image MIME type.</description>
          <long-description></long-description>
          <tag line="588" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="588" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="588" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="595">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="595">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="607" package="Default">
        <name>validate_alpha</name>
        <full_name>validate_alpha</full_name>
        <docblock line="600">
          <description>Validate that an attribute contains only alphabetic characters.</description>
          <long-description></long-description>
          <tag line="600" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="600" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="600" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="607">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="607">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="619" package="Default">
        <name>validate_alpha_num</name>
        <full_name>validate_alpha_num</full_name>
        <docblock line="612">
          <description>Validate that an attribute contains only alpha-numeric characters.</description>
          <long-description></long-description>
          <tag line="612" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="612" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="612" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="619">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="619">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="631" package="Default">
        <name>validate_alpha_dash</name>
        <full_name>validate_alpha_dash</full_name>
        <docblock line="624">
          <description>Validate that an attribute contains only alpha-numeric characters, dashes, and underscores.</description>
          <long-description></long-description>
          <tag line="624" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="624" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="624" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="631">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="631">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="644" package="Default">
        <name>validate_match</name>
        <full_name>validate_match</full_name>
        <docblock line="636">
          <description>Validate that an attribute passes a regular expression check.</description>
          <long-description></long-description>
          <tag line="636" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="636" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="636" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="636" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="644">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="644">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="644">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="657" package="Default">
        <name>validate_mimes</name>
        <full_name>validate_mimes</full_name>
        <docblock line="649">
          <description>Validate the MIME type of a file upload attribute is in a set of MIME types.</description>
          <long-description></long-description>
          <tag line="649" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="649" name="param" description="" type="array" variable="$value">
            <type by_reference="false">array</type>
          </tag>
          <tag line="649" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="649" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="657">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="657">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="657">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="679" package="Default">
        <name>validate_array</name>
        <full_name>validate_array</full_name>
        <docblock line="672">
          <description>Validate that an attribute is an array</description>
          <long-description></long-description>
          <tag line="672" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="672" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="672" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="679">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="679">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="692" package="Default">
        <name>validate_count</name>
        <full_name>validate_count</full_name>
        <docblock line="684">
          <description>Validate that an attribute of type array has a specific count</description>
          <long-description></long-description>
          <tag line="684" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="684" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="684" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="684" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="692">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="692">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="692">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="705" package="Default">
        <name>validate_countmin</name>
        <full_name>validate_countmin</full_name>
        <docblock line="697">
          <description>Validate that an attribute of type array has a minimum of elements.</description>
          <long-description></long-description>
          <tag line="697" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="697" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="697" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="697" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="705">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="705">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="705">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="718" package="Default">
        <name>validate_countmax</name>
        <full_name>validate_countmax</full_name>
        <docblock line="710">
          <description>Validate that an attribute of type array has a maximum of elements.</description>
          <long-description></long-description>
          <tag line="710" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="710" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="710" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="710" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="718">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="718">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="718">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="731" package="Default">
        <name>validate_countbetween</name>
        <full_name>validate_countbetween</full_name>
        <docblock line="723">
          <description>Validate that an attribute of type array has elements between max and min.</description>
          <long-description></long-description>
          <tag line="723" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="723" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="723" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="723" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="731">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="731">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="731">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="744" package="Default">
        <name>validate_before</name>
        <full_name>validate_before</full_name>
        <docblock line="736">
          <description>Validate the date is before a given date.</description>
          <long-description></long-description>
          <tag line="736" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="736" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="736" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="736" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="744">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="744">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="744">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="757" package="Default">
        <name>validate_after</name>
        <full_name>validate_after</full_name>
        <docblock line="749">
          <description>Validate the date is after a given date.</description>
          <long-description></long-description>
          <tag line="749" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="749" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="749" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="749" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="757">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="757">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="757">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="770" package="Default">
        <name>validate_date_format</name>
        <full_name>validate_date_format</full_name>
        <docblock line="762">
          <description>Validate the date conforms to a given format.</description>
          <long-description></long-description>
          <tag line="762" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="762" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="762" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="762" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="770">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="770">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="770">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="782" package="Default">
        <name>message</name>
        <full_name>message</full_name>
        <docblock line="775">
          <description>Get the proper error message for an attribute and rule.</description>
          <long-description></long-description>
          <tag line="775" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="775" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="775" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="782">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="782">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="835" package="Default">
        <name>size_message</name>
        <full_name>size_message</full_name>
        <docblock line="827">
          <description>Get the proper error message for an attribute and size rule.</description>
          <long-description></long-description>
          <tag line="827" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="827" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="827" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="827" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="835">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="835">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="835">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="868" package="Default">
        <name>replace</name>
        <full_name>replace</full_name>
        <docblock line="859">
          <description>Replace all error message place-holders with actual values.</description>
          <long-description></long-description>
          <tag line="859" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="859" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="859" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="859" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="859" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="868">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="868">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="868">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="868">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="889" package="Default">
        <name>replace_required_with</name>
        <full_name>replace_required_with</full_name>
        <docblock line="880">
          <description>Replace all place-holders for the required_with rule.</description>
          <long-description></long-description>
          <tag line="880" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="880" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="880" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="880" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="880" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="889">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="889">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="889">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="889">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="903" package="Default">
        <name>replace_between</name>
        <full_name>replace_between</full_name>
        <docblock line="894">
          <description>Replace all place-holders for the between rule.</description>
          <long-description></long-description>
          <tag line="894" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="894" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="894" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="894" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="894" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="903">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="903">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="903">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="903">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="917" package="Default">
        <name>replace_size</name>
        <full_name>replace_size</full_name>
        <docblock line="908">
          <description>Replace all place-holders for the size rule.</description>
          <long-description></long-description>
          <tag line="908" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="908" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="908" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="908" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="908" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="917">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="917">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="917">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="917">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="931" package="Default">
        <name>replace_min</name>
        <full_name>replace_min</full_name>
        <docblock line="922">
          <description>Replace all place-holders for the min rule.</description>
          <long-description></long-description>
          <tag line="922" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="922" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="922" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="922" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="922" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="931">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="931">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="931">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="931">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="945" package="Default">
        <name>replace_max</name>
        <full_name>replace_max</full_name>
        <docblock line="936">
          <description>Replace all place-holders for the max rule.</description>
          <long-description></long-description>
          <tag line="936" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="936" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="936" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="936" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="936" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="945">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="945">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="945">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="945">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="959" package="Default">
        <name>replace_in</name>
        <full_name>replace_in</full_name>
        <docblock line="950">
          <description>Replace all place-holders for the in rule.</description>
          <long-description></long-description>
          <tag line="950" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="950" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="950" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="950" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="950" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="959">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="959">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="959">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="959">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="973" package="Default">
        <name>replace_not_in</name>
        <full_name>replace_not_in</full_name>
        <docblock line="964">
          <description>Replace all place-holders for the not_in rule.</description>
          <long-description></long-description>
          <tag line="964" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="964" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="964" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="964" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="964" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="973">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="973">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="973">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="973">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="987" package="Default">
        <name>replace_mimes</name>
        <full_name>replace_mimes</full_name>
        <docblock line="978">
          <description>Replace all place-holders for the mimes rule.</description>
          <long-description></long-description>
          <tag line="978" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="978" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="978" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="978" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="978" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="987">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="987">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="987">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="987">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="1001" package="Default">
        <name>replace_same</name>
        <full_name>replace_same</full_name>
        <docblock line="992">
          <description>Replace all place-holders for the same rule.</description>
          <long-description></long-description>
          <tag line="992" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="992" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="992" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="992" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="992" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1001">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1001">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1001">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1001">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="1015" package="Default">
        <name>replace_different</name>
        <full_name>replace_different</full_name>
        <docblock line="1006">
          <description>Replace all place-holders for the different rule.</description>
          <long-description></long-description>
          <tag line="1006" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1006" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1006" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1006" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1006" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1015">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1015">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1015">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1015">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="1029" package="Default">
        <name>replace_before</name>
        <full_name>replace_before</full_name>
        <docblock line="1020">
          <description>Replace all place-holders for the before rule.</description>
          <long-description></long-description>
          <tag line="1020" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1020" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1020" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1020" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1020" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1029">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1029">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1029">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1029">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="1043" package="Default">
        <name>replace_after</name>
        <full_name>replace_after</full_name>
        <docblock line="1034">
          <description>Replace all place-holders for the after rule.</description>
          <long-description></long-description>
          <tag line="1034" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1034" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1034" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1034" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1034" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1043">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1043">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1043">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1043">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="1057" package="Default">
        <name>replace_count</name>
        <full_name>replace_count</full_name>
        <docblock line="1048">
          <description>Replace all place-holders for the count rule.</description>
          <long-description></long-description>
          <tag line="1048" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1048" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1048" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1048" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1048" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1057">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1057">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1057">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1057">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="1071" package="Default">
        <name>replace_countmin</name>
        <full_name>replace_countmin</full_name>
        <docblock line="1062">
          <description>Replace all place-holders for the countmin rule.</description>
          <long-description></long-description>
          <tag line="1062" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1062" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1062" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1062" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1062" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1071">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1071">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1071">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1071">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="1085" package="Default">
        <name>replace_countmax</name>
        <full_name>replace_countmax</full_name>
        <docblock line="1076">
          <description>Replace all place-holders for the countmax rule.</description>
          <long-description></long-description>
          <tag line="1076" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1076" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1076" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1076" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1076" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1085">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1085">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1085">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1085">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="1099" package="Default">
        <name>replace_countbetween</name>
        <full_name>replace_countbetween</full_name>
        <docblock line="1090">
          <description>Replace all place-holders for the between rule.</description>
          <long-description></long-description>
          <tag line="1090" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1090" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1090" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1090" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1090" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1099">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1099">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1099">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1099">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="1110" package="Default">
        <name>attribute</name>
        <full_name>attribute</full_name>
        <docblock line="1104">
          <description>Get the displayable name for a given attribute.</description>
          <long-description></long-description>
          <tag line="1104" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1104" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1110">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="1140" package="Default">
        <name>has_rule</name>
        <full_name>has_rule</full_name>
        <docblock line="1133">
          <description>Determine if an attribute has a rule assigned to it.</description>
          <long-description></long-description>
          <tag line="1133" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1133" name="param" description="" type="array" variable="$rules">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1133" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1140">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1140">
          <name>$rules</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="1158" package="Default">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="1152">
          <description>Extract the rule name and parameters from a rule.</description>
          <long-description></long-description>
          <tag line="1152" name="param" description="" type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1152" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1158">
          <name>$rule</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="1181" package="Default">
        <name>bundle</name>
        <full_name>bundle</full_name>
        <docblock line="1173">
          <description>Set the bundle that the validator is running for.</description>
          <long-description>&lt;p&gt;The bundle determines which bundle the language lines will be loaded from.&lt;/p&gt;</long-description>
          <tag line="1173" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1173" name="return" description="" type="\Laravel\Validator">
            <type by_reference="false">\Laravel\Validator</type>
          </tag>
        </docblock>
        <argument line="1181">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="1193" package="Default">
        <name>speaks</name>
        <full_name>speaks</full_name>
        <docblock line="1187">
          <description>Set the language that should be used when retrieving error messages.</description>
          <long-description></long-description>
          <tag line="1187" name="param" description="" type="string" variable="$language">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1187" name="return" description="" type="\Laravel\Validator">
            <type by_reference="false">\Laravel\Validator</type>
          </tag>
        </docblock>
        <argument line="1193">
          <name>$language</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="1205" package="Default">
        <name>connection</name>
        <full_name>connection</full_name>
        <docblock line="1199">
          <description>Set the database connection that should be used by the validator.</description>
          <long-description></long-description>
          <tag line="1199" name="param" description="" type="\Laravel\Database\Connection" variable="$connection">
            <type by_reference="false">\Laravel\Database\Connection</type>
          </tag>
          <tag line="1199" name="return" description="" type="\Laravel\Validator">
            <type by_reference="false">\Laravel\Validator</type>
          </tag>
        </docblock>
        <argument line="1205">
          <name>$connection</name>
          <default></default>
          <type>\Laravel\Database\Connection</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="1216" package="Default">
        <name>db</name>
        <full_name>db</full_name>
        <docblock line="1211">
          <description>Get the database connection for the Validator.</description>
          <long-description></long-description>
          <tag line="1211" name="return" description="" type="\Laravel\Database\Connection">
            <type by_reference="false">\Laravel\Database\Connection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="1226" package="Default">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="1223">
          <description>Dynamically handle calls to custom registered validators.</description>
          <long-description></long-description>
        </docblock>
        <argument line="1226">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1226">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/validator.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Validator</error>
      <error line="1223" code="50015">Argument $method is missing from the Docblock of __call()</error>
      <error line="1223" code="50015">Argument $parameters is missing from the Docblock of __call()</error>
    </parse_markers>
  </file>
  <file path="laravel/log.php" hash="096e873f5cc0dd714ddfd71260e8129a" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Log</name>
      <full_name>\Laravel\Log</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="11" package="Default">
        <name>exception</name>
        <full_name>exception</full_name>
        <docblock line="5">
          <description>Log an exception to the log file.</description>
          <long-description></long-description>
          <tag line="5" name="param" description="" type="\Laravel\Exception" variable="$e">
            <type by_reference="false">\Laravel\Exception</type>
          </tag>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="11">
          <name>$e</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="22" package="Default">
        <name>exception_line</name>
        <full_name>exception_line</full_name>
        <docblock line="16">
          <description>Format a log friendly message from the given exception.</description>
          <long-description></long-description>
          <tag line="16" name="param" description="" type="\Laravel\Exception" variable="$e">
            <type by_reference="false">\Laravel\Exception</type>
          </tag>
          <tag line="16" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$e</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="47" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="27">
          <description>Write a message to the log file.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Write an "error" message to the log file
    Log::write('error', 'Something went horribly wrong!');

    // Write an "error" message using the class' magic method
    Log::error('Something went horribly wrong!');

    // Log an arrays data
    Log::write('info', array('name' =&gt; 'Sawny', 'passwd' =&gt; '1234', array(1337, 21, 0)), true);
     //Result: Array ( [name] =&gt; Sawny [passwd] =&gt; 1234 [0] =&gt; Array ( [0] =&gt; 1337 [1] =&gt; 21 [2] =&gt; 0 ) )
     //If we had omit the third parameter the result had been: Array
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="27" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$pretty_print</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="71" package="Default">
        <name>format</name>
        <full_name>format</full_name>
        <docblock line="64">
          <description>Format a log message for logging.</description>
          <long-description></long-description>
          <tag line="64" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="71">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="92" package="Default">
        <name>__callStatic</name>
        <full_name>__callStatic</full_name>
        <docblock line="76">
          <description>Dynamically write a log message.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Write an "error" message to the log file
    Log::error('This is an error!');

    // Write a "warning" message to the log file
    Log::warning('This is a warning!');

    // Log an arrays data
    Log::info(array('name' =&gt; 'Sawny', 'passwd' =&gt; '1234', array(1337, 21, 0)), true);
     //Result: Array ( [name] =&gt; Sawny [passwd] =&gt; 1234 [0] =&gt; Array ( [0] =&gt; 1337 [1] =&gt; 21 [2] =&gt; 0 ) )
     //If we had omit the second parameter the result had been: Array
&lt;/code&gt;&lt;/pre&gt;</long-description>
        </docblock>
        <argument line="92">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="92">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/log.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Log</error>
      <error line="27" code="50015">Argument $pretty_print is missing from the Docblock of write()</error>
      <error line="76" code="50015">Argument $method is missing from the Docblock of __callStatic()</error>
      <error line="76" code="50015">Argument $parameters is missing from the Docblock of __callStatic()</error>
    </parse_markers>
  </file>
  <file path="laravel/pluralizer.php" hash="3e528f49268a5dc651b06a4c2819ac76" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Pluralizer</name>
      <full_name>\Laravel\Pluralizer</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel" package="Default">
        <name>$config</name>
        <default></default>
        <docblock line="5">
          <description>The "strings" configuration array.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="15" namespace="Laravel" package="Default">
        <name>$plural</name>
        <default>array()</default>
        <docblock line="12">
          <description>The cached copies of the plural inflections.</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="22" namespace="Laravel" package="Default">
        <name>$singular</name>
        <default>array()</default>
        <docblock line="17">
          <description>The cached copies of the singular inflections.</description>
          <long-description></long-description>
          <tag line="17" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="30" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="24">
          <description>Create a new pluralizer instance.</description>
          <long-description></long-description>
          <tag line="24" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="24" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="41" package="Default">
        <name>singular</name>
        <full_name>singular</full_name>
        <docblock line="35">
          <description>Get the singular form of the given word.</description>
          <long-description></long-description>
          <tag line="35" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="68" package="Default">
        <name>plural</name>
        <full_name>plural</full_name>
        <docblock line="61">
          <description>Get the plural form of the given word.</description>
          <long-description></long-description>
          <tag line="61" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="param" description="" type="int" variable="$count">
            <type by_reference="false">int</type>
          </tag>
          <tag line="61" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$count</name>
          <default>2</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="98" package="Default">
        <name>auto</name>
        <full_name>auto</full_name>
        <docblock line="90">
          <description>Perform auto inflection on an English word.</description>
          <long-description></long-description>
          <tag line="90" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="param" description="" type="array" variable="$source">
            <type by_reference="false">array</type>
          </tag>
          <tag line="90" name="param" description="" type="array" variable="$irregular">
            <type by_reference="false">array</type>
          </tag>
          <tag line="90" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="98">
          <name>$source</name>
          <default></default>
          <type/>
        </argument>
        <argument line="98">
          <name>$irregular</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/pluralizer.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Pluralizer</error>
    </parse_markers>
  </file>
  <file path="laravel/helpers.php" hash="a4e444fa789f68c5cdc5b2f1014da5e0" package="Default">
    <function namespace="global" line="11" package="Default">
      <name>e</name>
      <full_name>\e</full_name>
      <docblock line="3">
        <description>Convert HTML characters to entities.</description>
        <long-description>&lt;p&gt;The encoding specified in the application configuration file will be used.&lt;/p&gt;</long-description>
        <tag line="3" name="param" description="" type="string" variable="$value">
          <type by_reference="false">string</type>
        </tag>
        <tag line="3" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="11">
        <name>$value</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="24" package="Default">
      <name>__</name>
      <full_name>\__</full_name>
      <docblock line="16">
        <description>Retrieve a language line.</description>
        <long-description></long-description>
        <tag line="16" name="param" description="" type="string" variable="$key">
          <type by_reference="false">string</type>
        </tag>
        <tag line="16" name="param" description="" type="array" variable="$replacements">
          <type by_reference="false">array</type>
        </tag>
        <tag line="16" name="param" description="" type="string" variable="$language">
          <type by_reference="false">string</type>
        </tag>
        <tag line="16" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="24">
        <name>$key</name>
        <default></default>
        <type/>
      </argument>
      <argument line="24">
        <name>$replacements</name>
        <default>array()</default>
        <type/>
      </argument>
      <argument line="24">
        <name>$language</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="35" package="Default">
      <name>dd</name>
      <full_name>\dd</full_name>
      <docblock line="29">
        <description>Dump the given value and kill the script.</description>
        <long-description></long-description>
        <tag line="29" name="param" description="" type="mixed" variable="$value">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="29" name="return" description="" type="void">
          <type by_reference="false">void</type>
        </tag>
      </docblock>
      <argument line="35">
        <name>$value</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="59" package="Default">
      <name>array_get</name>
      <full_name>\array_get</full_name>
      <docblock line="43">
        <description>Get an item from an array using "dot" notation.</description>
        <long-description>&lt;pre&gt;&lt;code&gt; // Get the $array['user']['name'] value from the array
    $name = array_get($array, 'user.name');

    // Return a default from if the specified item doesn't exist
    $name = array_get($array, 'user.name', 'Taylor');
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="43" name="param" description="" type="array" variable="$array">
          <type by_reference="false">array</type>
        </tag>
        <tag line="43" name="param" description="" type="string" variable="$key">
          <type by_reference="false">string</type>
        </tag>
        <tag line="43" name="param" description="" type="mixed" variable="$default">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="43" name="return" description="" type="mixed">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <argument line="59">
        <name>$array</name>
        <default></default>
        <type/>
      </argument>
      <argument line="59">
        <name>$key</name>
        <default></default>
        <type/>
      </argument>
      <argument line="59">
        <name>$default</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="98" package="Default">
      <name>array_set</name>
      <full_name>\array_set</full_name>
      <docblock line="80">
        <description>Set an array item to a given value using "dot" notation.</description>
        <long-description>&lt;p&gt;If no key is given to the method, the entire array will be replaced.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Set the $array['user']['name'] value on the array
    array_set($array, 'user.name', 'Taylor');

    // Set the $array['user']['name']['first'] value on the array
    array_set($array, 'user.name.first', 'Michael');
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="80" name="param" description="" type="array" variable="$array">
          <type by_reference="false">array</type>
        </tag>
        <tag line="80" name="param" description="" type="string" variable="$key">
          <type by_reference="false">string</type>
        </tag>
        <tag line="80" name="param" description="" type="mixed" variable="$value">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="80" name="return" description="" type="void">
          <type by_reference="false">void</type>
        </tag>
      </docblock>
      <argument line="98">
        <name>$array</name>
        <default></default>
        <type/>
      </argument>
      <argument line="98">
        <name>$key</name>
        <default></default>
        <type/>
      </argument>
      <argument line="98">
        <name>$value</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="141" package="Default">
      <name>array_forget</name>
      <full_name>\array_forget</full_name>
      <docblock line="126">
        <description>Remove an array item from a given array using "dot" notation.</description>
        <long-description>&lt;pre&gt;&lt;code&gt; // Remove the $array['user']['name'] item from the array
    array_forget($array, 'user.name');

    // Remove the $array['user']['name']['first'] item from the array
    array_forget($array, 'user.name.first');
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="126" name="param" description="" type="array" variable="$array">
          <type by_reference="false">array</type>
        </tag>
        <tag line="126" name="param" description="" type="string" variable="$key">
          <type by_reference="false">string</type>
        </tag>
        <tag line="126" name="return" description="" type="void">
          <type by_reference="false">void</type>
        </tag>
      </docblock>
      <argument line="141">
        <name>$array</name>
        <default></default>
        <type/>
      </argument>
      <argument line="141">
        <name>$key</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="184" package="Default">
      <name>array_first</name>
      <full_name>\array_first</full_name>
      <docblock line="168">
        <description>Return the first element in an array which passes a given truth test.</description>
        <long-description>&lt;pre&gt;&lt;code&gt; // Return the first array element that equals "Taylor"
    $value = array_first($array, function($k, $v) {return $v == 'Taylor';});

    // Return a default value if no matching element is found
    $value = array_first($array, function($k, $v) {return $v == 'Taylor'}, 'Default');
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="168" name="param" description="" type="array" variable="$array">
          <type by_reference="false">array</type>
        </tag>
        <tag line="168" name="param" description="" type="\Closure" variable="$callback">
          <type by_reference="false">\Closure</type>
        </tag>
        <tag line="168" name="param" description="" type="mixed" variable="$default">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="168" name="return" description="" type="mixed">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <argument line="184">
        <name>$array</name>
        <default></default>
        <type/>
      </argument>
      <argument line="184">
        <name>$callback</name>
        <default></default>
        <type/>
      </argument>
      <argument line="184">
        <name>$default</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="200" package="Default">
      <name>array_strip_slashes</name>
      <full_name>\array_strip_slashes</full_name>
      <docblock line="194">
        <description>Recursively remove slashes from array keys and values.</description>
        <long-description></long-description>
        <tag line="194" name="param" description="" type="array" variable="$array">
          <type by_reference="false">array</type>
        </tag>
        <tag line="194" name="return" description="" type="array">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <argument line="200">
        <name>$array</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="230" package="Default">
      <name>array_divide</name>
      <full_name>\array_divide</full_name>
      <docblock line="224">
        <description>Divide an array into two arrays.</description>
        <long-description>&lt;p&gt;One with keys and the other with values.&lt;/p&gt;</long-description>
        <tag line="224" name="param" description="" type="array" variable="$array">
          <type by_reference="false">array</type>
        </tag>
        <tag line="224" name="return" description="" type="array">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <argument line="230">
        <name>$array</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="242" package="Default">
      <name>array_pluck</name>
      <full_name>\array_pluck</full_name>
      <docblock line="235">
        <description>Pluck an array of values from an array.</description>
        <long-description></long-description>
        <tag line="235" name="param" description="" type="array" variable="$array">
          <type by_reference="false">array</type>
        </tag>
        <tag line="235" name="param" description="" type="string" variable="$key">
          <type by_reference="false">string</type>
        </tag>
        <tag line="235" name="return" description="" type="array">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <argument line="242">
        <name>$array</name>
        <default></default>
        <type/>
      </argument>
      <argument line="242">
        <name>$key</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="258" package="Default">
      <name>array_only</name>
      <full_name>\array_only</full_name>
      <docblock line="251">
        <description>Get a subset of the items from the given array.</description>
        <long-description></long-description>
        <tag line="251" name="param" description="" type="array" variable="$array">
          <type by_reference="false">array</type>
        </tag>
        <tag line="251" name="param" description="" type="array" variable="$keys">
          <type by_reference="false">array</type>
        </tag>
        <tag line="251" name="return" description="" type="array">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <argument line="258">
        <name>$array</name>
        <default></default>
        <type/>
      </argument>
      <argument line="258">
        <name>$keys</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="270" package="Default">
      <name>array_except</name>
      <full_name>\array_except</full_name>
      <docblock line="263">
        <description>Get all of the given array except for a specified array of items.</description>
        <long-description></long-description>
        <tag line="263" name="param" description="" type="array" variable="$array">
          <type by_reference="false">array</type>
        </tag>
        <tag line="263" name="param" description="" type="array" variable="$keys">
          <type by_reference="false">array</type>
        </tag>
        <tag line="263" name="return" description="" type="array">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <argument line="270">
        <name>$array</name>
        <default></default>
        <type/>
      </argument>
      <argument line="270">
        <name>$keys</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="281" package="Default">
      <name>eloquent_to_json</name>
      <full_name>\eloquent_to_json</full_name>
      <docblock line="275">
        <description>Transform Eloquent models to a JSON object.</description>
        <long-description></long-description>
        <tag line="275" name="param" description="" type="\Eloquent|array" variable="$models">
          <type by_reference="false">\Eloquent</type>
          <type by_reference="false">array</type>
        </tag>
        <tag line="275" name="return" description="" type="object">
          <type by_reference="false">object</type>
        </tag>
      </docblock>
      <argument line="281">
        <name>$models</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="296" package="Default">
      <name>magic_quotes</name>
      <full_name>\magic_quotes</full_name>
      <docblock line="291">
        <description>Determine if "Magic Quotes" are enabled on the server.</description>
        <long-description></long-description>
        <tag line="291" name="return" description="" type="bool">
          <type by_reference="false">bool</type>
        </tag>
      </docblock>
    </function>
    <function namespace="global" line="309" package="Default">
      <name>head</name>
      <full_name>\head</full_name>
      <docblock line="301">
        <description>Return the first element of an array.</description>
        <long-description>&lt;p&gt;This is simply a convenient wrapper around the "reset" method.&lt;/p&gt;</long-description>
        <tag line="301" name="param" description="" type="array" variable="$array">
          <type by_reference="false">array</type>
        </tag>
        <tag line="301" name="return" description="" type="mixed">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <argument line="309">
        <name>$array</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="329" package="Default">
      <name>url</name>
      <full_name>\url</full_name>
      <docblock line="314">
        <description>Generate an application URL.</description>
        <long-description>&lt;pre&gt;&lt;code&gt; // Create a URL to a location within the application
    $url = url('user/profile');

    // Create a HTTPS URL to a location within the application
    $url = url('user/profile', true);
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="314" name="param" description="" type="string" variable="$url">
          <type by_reference="false">string</type>
        </tag>
        <tag line="314" name="param" description="" type="bool" variable="$https">
          <type by_reference="false">bool</type>
        </tag>
        <tag line="314" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="329">
        <name>$url</name>
        <default>''</default>
        <type/>
      </argument>
      <argument line="329">
        <name>$https</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="341" package="Default">
      <name>asset</name>
      <full_name>\asset</full_name>
      <docblock line="334">
        <description>Generate an application URL to an asset.</description>
        <long-description></long-description>
        <tag line="334" name="param" description="" type="string" variable="$url">
          <type by_reference="false">string</type>
        </tag>
        <tag line="334" name="param" description="" type="bool" variable="$https">
          <type by_reference="false">bool</type>
        </tag>
        <tag line="334" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="341">
        <name>$url</name>
        <default></default>
        <type/>
      </argument>
      <argument line="341">
        <name>$https</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="361" package="Default">
      <name>action</name>
      <full_name>\action</full_name>
      <docblock line="346">
        <description>Generate a URL to a controller action.</description>
        <long-description>&lt;pre&gt;&lt;code&gt; // Generate a URL to the "index" method of the "user" controller
    $url = action('user@index');

    // Generate a URL to http://example.com/user/profile/taylor
    $url = action('user@profile', array('taylor'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="346" name="param" description="" type="string" variable="$action">
          <type by_reference="false">string</type>
        </tag>
        <tag line="346" name="param" description="" type="array" variable="$parameters">
          <type by_reference="false">array</type>
        </tag>
        <tag line="346" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="361">
        <name>$action</name>
        <default></default>
        <type/>
      </argument>
      <argument line="361">
        <name>$parameters</name>
        <default>array()</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="381" package="Default">
      <name>route</name>
      <full_name>\route</full_name>
      <docblock line="366">
        <description>Generate a URL from a route name.</description>
        <long-description>&lt;pre&gt;&lt;code&gt; // Create a URL to the "profile" named route
    $url = route('profile');

    // Create a URL to the "profile" named route with wildcard parameters
    $url = route('profile', array($username));
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="366" name="param" description="" type="string" variable="$name">
          <type by_reference="false">string</type>
        </tag>
        <tag line="366" name="param" description="" type="array" variable="$parameters">
          <type by_reference="false">array</type>
        </tag>
        <tag line="366" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="381">
        <name>$name</name>
        <default></default>
        <type/>
      </argument>
      <argument line="381">
        <name>$parameters</name>
        <default>array()</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="393" package="Default">
      <name>starts_with</name>
      <full_name>\starts_with</full_name>
      <docblock line="386">
        <description>Determine if a given string begins with a given value.</description>
        <long-description></long-description>
        <tag line="386" name="param" description="" type="string" variable="$haystack">
          <type by_reference="false">string</type>
        </tag>
        <tag line="386" name="param" description="" type="string" variable="$needle">
          <type by_reference="false">string</type>
        </tag>
        <tag line="386" name="return" description="" type="bool">
          <type by_reference="false">bool</type>
        </tag>
      </docblock>
      <argument line="393">
        <name>$haystack</name>
        <default></default>
        <type/>
      </argument>
      <argument line="393">
        <name>$needle</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="405" package="Default">
      <name>ends_with</name>
      <full_name>\ends_with</full_name>
      <docblock line="398">
        <description>Determine if a given string ends with a given value.</description>
        <long-description></long-description>
        <tag line="398" name="param" description="" type="string" variable="$haystack">
          <type by_reference="false">string</type>
        </tag>
        <tag line="398" name="param" description="" type="string" variable="$needle">
          <type by_reference="false">string</type>
        </tag>
        <tag line="398" name="return" description="" type="bool">
          <type by_reference="false">bool</type>
        </tag>
      </docblock>
      <argument line="405">
        <name>$haystack</name>
        <default></default>
        <type/>
      </argument>
      <argument line="405">
        <name>$needle</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="417" package="Default">
      <name>str_contains</name>
      <full_name>\str_contains</full_name>
      <docblock line="410">
        <description>Determine if a given string contains a given sub-string.</description>
        <long-description></long-description>
        <tag line="410" name="param" description="" type="string" variable="$haystack">
          <type by_reference="false">string</type>
        </tag>
        <tag line="410" name="param" description="" type="string|array" variable="$needle">
          <type by_reference="false">string</type>
          <type by_reference="false">array</type>
        </tag>
        <tag line="410" name="return" description="" type="bool">
          <type by_reference="false">bool</type>
        </tag>
      </docblock>
      <argument line="417">
        <name>$haystack</name>
        <default></default>
        <type/>
      </argument>
      <argument line="417">
        <name>$needle</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="434" package="Default">
      <name>str_finish</name>
      <full_name>\str_finish</full_name>
      <docblock line="427">
        <description>Cap a string with a single instance of the given string.</description>
        <long-description></long-description>
        <tag line="427" name="param" description="" type="string" variable="$value">
          <type by_reference="false">string</type>
        </tag>
        <tag line="427" name="param" description="" type="string" variable="$cap">
          <type by_reference="false">string</type>
        </tag>
        <tag line="427" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="434">
        <name>$value</name>
        <default></default>
        <type/>
      </argument>
      <argument line="434">
        <name>$cap</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="445" package="Default">
      <name>str_object</name>
      <full_name>\str_object</full_name>
      <docblock line="439">
        <description>Determine if the given object has a toString method.</description>
        <long-description></long-description>
        <tag line="439" name="param" description="" type="object" variable="$value">
          <type by_reference="false">object</type>
        </tag>
        <tag line="439" name="return" description="" type="bool">
          <type by_reference="false">bool</type>
        </tag>
      </docblock>
      <argument line="445">
        <name>$value</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="457" package="Default">
      <name>root_namespace</name>
      <full_name>\root_namespace</full_name>
      <docblock line="450">
        <description>Get the root namespace of a given class.</description>
        <long-description></long-description>
        <tag line="450" name="param" description="" type="string" variable="$class">
          <type by_reference="false">string</type>
        </tag>
        <tag line="450" name="param" description="" type="string" variable="$separator">
          <type by_reference="false">string</type>
        </tag>
        <tag line="450" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="457">
        <name>$class</name>
        <default></default>
        <type/>
      </argument>
      <argument line="457">
        <name>$separator</name>
        <default>'\\'</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="473" package="Default">
      <name>class_basename</name>
      <full_name>\class_basename</full_name>
      <docblock line="465">
        <description>Get the "class basename" of a class or object.</description>
        <long-description>&lt;p&gt;The basename is considered to be the name of the class minus all namespaces.&lt;/p&gt;</long-description>
        <tag line="465" name="param" description="" type="object|string" variable="$class">
          <type by_reference="false">object</type>
          <type by_reference="false">string</type>
        </tag>
        <tag line="465" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="473">
        <name>$class</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="488" package="Default">
      <name>value</name>
      <full_name>\value</full_name>
      <docblock line="480">
        <description>Return the value of the given item.</description>
        <long-description>&lt;p&gt;If the given item is a Closure the result of the Closure will be returned.&lt;/p&gt;</long-description>
        <tag line="480" name="param" description="" type="mixed" variable="$value">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="480" name="return" description="" type="mixed">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <argument line="488">
        <name>$value</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="499" package="Default">
      <name>with</name>
      <full_name>\with</full_name>
      <docblock line="493">
        <description>Short-cut for constructor method chaining.</description>
        <long-description></long-description>
        <tag line="493" name="param" description="" type="mixed" variable="$object">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="493" name="return" description="" type="mixed">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <argument line="499">
        <name>$object</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="510" package="Default">
      <name>has_php</name>
      <full_name>\has_php</full_name>
      <docblock line="504">
        <description>Determine if the current version of PHP is at least the supplied version.</description>
        <long-description></long-description>
        <tag line="504" name="param" description="" type="string" variable="$version">
          <type by_reference="false">string</type>
        </tag>
        <tag line="504" name="return" description="" type="bool">
          <type by_reference="false">bool</type>
        </tag>
      </docblock>
      <argument line="510">
        <name>$version</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="522" package="Default">
      <name>view</name>
      <full_name>\view</full_name>
      <docblock line="515">
        <description>Get a view instance.</description>
        <long-description></long-description>
        <tag line="515" name="param" description="" type="string" variable="$view">
          <type by_reference="false">string</type>
        </tag>
        <tag line="515" name="param" description="" type="array" variable="$data">
          <type by_reference="false">array</type>
        </tag>
        <tag line="515" name="return" description="" type="\View">
          <type by_reference="false">\View</type>
        </tag>
      </docblock>
      <argument line="522">
        <name>$view</name>
        <default></default>
        <type/>
      </argument>
      <argument line="522">
        <name>$data</name>
        <default>array()</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="536" package="Default">
      <name>render</name>
      <full_name>\render</full_name>
      <docblock line="529">
        <description>Render the given view.</description>
        <long-description></long-description>
        <tag line="529" name="param" description="" type="string" variable="$view">
          <type by_reference="false">string</type>
        </tag>
        <tag line="529" name="param" description="" type="array" variable="$data">
          <type by_reference="false">array</type>
        </tag>
        <tag line="529" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="536">
        <name>$view</name>
        <default></default>
        <type/>
      </argument>
      <argument line="536">
        <name>$data</name>
        <default>array()</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="552" package="Default">
      <name>render_each</name>
      <full_name>\render_each</full_name>
      <docblock line="543">
        <description>Get the rendered contents of a partial from a loop.</description>
        <long-description></long-description>
        <tag line="543" name="param" description="" type="string" variable="$partial">
          <type by_reference="false">string</type>
        </tag>
        <tag line="543" name="param" description="" type="array" variable="$data">
          <type by_reference="false">array</type>
        </tag>
        <tag line="543" name="param" description="" type="string" variable="$iterator">
          <type by_reference="false">string</type>
        </tag>
        <tag line="543" name="param" description="" type="string" variable="$empty">
          <type by_reference="false">string</type>
        </tag>
        <tag line="543" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="552">
        <name>$partial</name>
        <default></default>
        <type/>
      </argument>
      <argument line="552">
        <name>$data</name>
        <default></default>
        <type>array</type>
      </argument>
      <argument line="552">
        <name>$iterator</name>
        <default></default>
        <type/>
      </argument>
      <argument line="552">
        <name>$empty</name>
        <default>'raw|'</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="563" package="Default">
      <name>yield</name>
      <full_name>\yield</full_name>
      <docblock line="557">
        <description>Get the string contents of a section.</description>
        <long-description></long-description>
        <tag line="557" name="param" description="" type="string" variable="$section">
          <type by_reference="false">string</type>
        </tag>
        <tag line="557" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="563">
        <name>$section</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="575" package="Default">
      <name>get_cli_option</name>
      <full_name>\get_cli_option</full_name>
      <docblock line="568">
        <description>Get a CLI option from the argv $_SERVER variable.</description>
        <long-description></long-description>
        <tag line="568" name="param" description="" type="string" variable="$option">
          <type by_reference="false">string</type>
        </tag>
        <tag line="568" name="param" description="" type="mixed" variable="$default">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="568" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="575">
        <name>$option</name>
        <default></default>
        <type/>
      </argument>
      <argument line="575">
        <name>$default</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="594" package="Default">
      <name>get_file_size</name>
      <full_name>\get_file_size</full_name>
      <docblock line="588">
        <description>Calculate the human-readable file size (with proper units).</description>
        <long-description></long-description>
        <tag line="588" name="param" description="" type="int" variable="$size">
          <type by_reference="false">int</type>
        </tag>
        <tag line="588" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="594">
        <name>$size</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/helpers.php</error>
    </parse_markers>
  </file>
  <file path="laravel/request.php" hash="678d886cfd302058265426bffa52ef2f" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Request</name>
      <full_name>\Laravel\Request</full_name>
      <constant namespace="Laravel" line="24" package="Default">
        <name>spoofer</name>
        <full_name>spoofer</full_name>
        <value>'_method'</value>
        <docblock line="19">
          <description>The request data key that is used to indicate a spoofed request method.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$route</name>
        <default></default>
        <docblock line="5">
          <description>All of the route instances handling the request.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$foundation</name>
        <default></default>
        <docblock line="12">
          <description>The Symfony HttpFoundation Request instance.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="\Laravel\HttpFoundation\Request">
            <type by_reference="false">\Laravel\HttpFoundation\Request</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="31" package="Default">
        <name>uri</name>
        <full_name>uri</full_name>
        <docblock line="26">
          <description>Get the URI for the current request.</description>
          <long-description></long-description>
          <tag line="26" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="41" package="Default">
        <name>method</name>
        <full_name>method</full_name>
        <docblock line="36">
          <description>Get the request method.</description>
          <long-description></long-description>
          <tag line="36" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="60" package="Default">
        <name>header</name>
        <full_name>header</full_name>
        <docblock line="48">
          <description>Get a header from the request.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get a header from the request
    $referer = Request::header('referer');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="48" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="48" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="60">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="70" package="Default">
        <name>headers</name>
        <full_name>headers</full_name>
        <docblock line="65">
          <description>Get all of the HTTP request headers.</description>
          <long-description></long-description>
          <tag line="65" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="82" package="Default">
        <name>server</name>
        <full_name>server</full_name>
        <docblock line="75">
          <description>Get an item from the $_SERVER array.</description>
          <long-description></long-description>
          <tag line="75" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="75" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="75" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="82">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="92" package="Default">
        <name>spoofed</name>
        <full_name>spoofed</full_name>
        <docblock line="87">
          <description>Determine if the request method is being spoofed by a hidden Form element.</description>
          <long-description></long-description>
          <tag line="87" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="103" package="Default">
        <name>ip</name>
        <full_name>ip</full_name>
        <docblock line="97">
          <description>Get the requestor's IP address.</description>
          <long-description></long-description>
          <tag line="97" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="97" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$default</name>
          <default>'0.0.0.0'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="114" package="Default">
        <name>accept</name>
        <full_name>accept</full_name>
        <docblock line="109">
          <description>Get the list of acceptable content types for the request.</description>
          <long-description></long-description>
          <tag line="109" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="125" package="Default">
        <name>accepts</name>
        <full_name>accepts</full_name>
        <docblock line="119">
          <description>Determine if the request accepts a given content type.</description>
          <long-description></long-description>
          <tag line="119" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="135" package="Default">
        <name>languages</name>
        <full_name>languages</full_name>
        <docblock line="130">
          <description>Get the languages accepted by the client's browser.</description>
          <long-description></long-description>
          <tag line="130" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="145" package="Default">
        <name>secure</name>
        <full_name>secure</full_name>
        <docblock line="140">
          <description>Determine if the current request is using HTTPS.</description>
          <long-description></long-description>
          <tag line="140" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="157" package="Default">
        <name>forged</name>
        <full_name>forged</full_name>
        <docblock line="150">
          <description>Determine if the request has been forged.</description>
          <long-description>&lt;p&gt;The session CSRF token will be compared to the CSRF token in the request input.&lt;/p&gt;</long-description>
          <tag line="150" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="167" package="Default">
        <name>ajax</name>
        <full_name>ajax</full_name>
        <docblock line="162">
          <description>Determine if the current request is an AJAX request.</description>
          <long-description></long-description>
          <tag line="162" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="177" package="Default">
        <name>referrer</name>
        <full_name>referrer</full_name>
        <docblock line="172">
          <description>Get the HTTP referrer for the request.</description>
          <long-description></long-description>
          <tag line="172" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="187" package="Default">
        <name>time</name>
        <full_name>time</full_name>
        <docblock line="182">
          <description>Get the timestamp of the time when the request was started.</description>
          <long-description></long-description>
          <tag line="182" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="197" package="Default">
        <name>cli</name>
        <full_name>cli</full_name>
        <docblock line="192">
          <description>Determine if the current request is via the command line.</description>
          <long-description></long-description>
          <tag line="192" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="207" package="Default">
        <name>env</name>
        <full_name>env</full_name>
        <docblock line="202">
          <description>Get the Laravel environment for the current request.</description>
          <long-description></long-description>
          <tag line="202" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="218" package="Default">
        <name>set_env</name>
        <full_name>set_env</full_name>
        <docblock line="212">
          <description>Set the Laravel environment for the current request.</description>
          <long-description></long-description>
          <tag line="212" name="param" description="" type="string" variable="$env">
            <type by_reference="false">string</type>
          </tag>
          <tag line="212" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="218">
          <name>$env</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="229" package="Default">
        <name>is_env</name>
        <full_name>is_env</full_name>
        <docblock line="223">
          <description>Determine the current request environment.</description>
          <long-description></long-description>
          <tag line="223" name="param" description="" type="string" variable="$env">
            <type by_reference="false">string</type>
          </tag>
          <tag line="223" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="229">
          <name>$env</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="241" package="Default">
        <name>detect_env</name>
        <full_name>detect_env</full_name>
        <docblock line="234">
          <description>Detect the current environment from an environment configuration.</description>
          <long-description></long-description>
          <tag line="234" name="param" description="" type="array" variable="$environments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="234" name="param" description="" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="234" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="241">
          <name>$environments</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="241">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="263" package="Default">
        <name>route</name>
        <full_name>route</full_name>
        <docblock line="258">
          <description>Get the main route handling the request.</description>
          <long-description></long-description>
          <tag line="258" name="return" description="" type="\Laravel\Route">
            <type by_reference="false">\Laravel\Route</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="273" package="Default">
        <name>foundation</name>
        <full_name>foundation</full_name>
        <docblock line="268">
          <description>Get the Symfony HttpFoundation Request instance.</description>
          <long-description></long-description>
          <tag line="268" name="return" description="" type="\Laravel\HttpFoundation\Request">
            <type by_reference="false">\Laravel\HttpFoundation\Request</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="285" package="Default">
        <name>__callStatic</name>
        <full_name>__callStatic</full_name>
        <docblock line="278">
          <description>Pass any other methods to the Symfony request.</description>
          <long-description></long-description>
          <tag line="278" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="278" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="278" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="285">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="285">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/request.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Request</error>
    </parse_markers>
  </file>
  <file path="laravel/cookie.php" hash="12c66d66cc253f457030900843341c2e" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Cookie</name>
      <full_name>\Laravel\Cookie</full_name>
      <constant namespace="Laravel" line="10" package="Default">
        <name>forever</name>
        <full_name>forever</full_name>
        <value>2628000</value>
        <docblock line="5">
          <description>How long is forever (in minutes)?</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$jar</name>
        <default>array()</default>
        <docblock line="12">
          <description>The cookies that have been set.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="25" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="19">
          <description>Determine if a cookie exists.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="45" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="30">
          <description>Get the value of a cookie.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get the value of the "favorite" cookie
    $favorite = Cookie::get('favorite');

    // Get the value of a cookie or return a default value
    $favorite = Cookie::get('framework', 'Laravel');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="30" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="30" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="45">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="76" package="Default">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="57">
          <description>Set the value of a cookie.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Set the value of the "favorite" cookie
    Cookie::put('favorite', 'Laravel');

    // Set the value of the "favorite" cookie for twenty minutes
    Cookie::put('favorite', 'Laravel', 20);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="57" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="57" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="57" name="param" description="" type="int" variable="$expiration">
            <type by_reference="false">int</type>
          </tag>
          <tag line="57" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="57" name="param" description="" type="string" variable="$domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="57" name="param" description="" type="bool" variable="$secure">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="57" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$expiration</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="76">
          <name>$path</name>
          <default>'/'</default>
          <type/>
        </argument>
        <argument line="76">
          <name>$domain</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="76">
          <name>$secure</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="111" package="Default">
        <name>forever</name>
        <full_name>forever</full_name>
        <docblock line="96">
          <description>Set a "permanent" cookie.</description>
          <long-description>&lt;p&gt;The cookie will last for one year.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Set a cookie that should last one year
    Cookie::forever('favorite', 'Blue');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="96" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="param" description="" type="string" variable="$domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="param" description="" type="bool" variable="$secure">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="96" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="111">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="111">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="111">
          <name>$path</name>
          <default>'/'</default>
          <type/>
        </argument>
        <argument line="111">
          <name>$domain</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="111">
          <name>$secure</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="125" package="Default">
        <name>forget</name>
        <full_name>forget</full_name>
        <docblock line="116">
          <description>Delete a cookie.</description>
          <long-description></long-description>
          <tag line="116" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="116" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="116" name="param" description="" type="string" variable="$domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="116" name="param" description="" type="bool" variable="$secure">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="116" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="125">
          <name>$path</name>
          <default>'/'</default>
          <type/>
        </argument>
        <argument line="125">
          <name>$domain</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="125">
          <name>$secure</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="136" package="Default">
        <name>hash</name>
        <full_name>hash</full_name>
        <docblock line="130">
          <description>Hash the given cookie value.</description>
          <long-description></long-description>
          <tag line="130" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="147" package="Default">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="141">
          <description>Parse a hash fingerprinted cookie value.</description>
          <long-description></long-description>
          <tag line="141" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="141" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cookie.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Cookie</error>
    </parse_markers>
  </file>
  <file path="laravel/session.php" hash="b65a741690fc420117f7d3da5b0ed935" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Session</name>
      <full_name>\Laravel\Session</full_name>
      <constant namespace="Laravel" line="24" package="Default">
        <name>csrf_token</name>
        <full_name>csrf_token</full_name>
        <value>'csrf_token'</value>
        <docblock line="19">
          <description>The string name of the CSRF token stored in the session.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$instance</name>
        <default></default>
        <docblock line="5">
          <description>The session singleton instance for the request.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="\Laravel\Session\Payload">
            <type by_reference="false">\Laravel\Session\Payload</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$registrar</name>
        <default>array()</default>
        <docblock line="12">
          <description>The third-party driver registrar.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="31" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="26">
          <description>Create the session payload and load the session.</description>
          <long-description></long-description>
          <tag line="26" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="44" package="Default">
        <name>start</name>
        <full_name>start</full_name>
        <docblock line="38">
          <description>Create the session payload instance for the request.</description>
          <long-description></long-description>
          <tag line="38" name="param" description="" type="string" variable="$driver">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$driver</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="55" package="Default">
        <name>factory</name>
        <full_name>factory</full_name>
        <docblock line="49">
          <description>Create a new session driver instance.</description>
          <long-description></long-description>
          <tag line="49" name="param" description="" type="string" variable="$driver">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="" type="\Laravel\Session\Drivers\Driver">
            <type by_reference="false">\Laravel\Session\Drivers\Driver</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$driver</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="105" package="Default">
        <name>instance</name>
        <full_name>instance</full_name>
        <docblock line="92">
          <description>Retrieve the active session payload instance for the request.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Retrieve the session instance and get an item
    Session::instance()-&gt;get('name');

    // Retrieve the session instance and place an item in the session
    Session::instance()-&gt;put('name', 'Taylor');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="92" name="return" description="" type="\Laravel\Session\Payload">
            <type by_reference="false">\Laravel\Session\Payload</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="117" package="Default">
        <name>started</name>
        <full_name>started</full_name>
        <docblock line="112">
          <description>Determine if session handling has been started for the request.</description>
          <long-description></long-description>
          <tag line="112" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="129" package="Default">
        <name>extend</name>
        <full_name>extend</full_name>
        <docblock line="122">
          <description>Register a third-party cache driver.</description>
          <long-description></long-description>
          <tag line="122" name="param" description="" type="string" variable="$driver">
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="param" description="" type="\Closure" variable="$resolver">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="122" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="129">
          <name>$driver</name>
          <default></default>
          <type/>
        </argument>
        <argument line="129">
          <name>$resolver</name>
          <default></default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="148" package="Default">
        <name>__callStatic</name>
        <full_name>__callStatic</full_name>
        <docblock line="134">
          <description>Magic Method for calling the methods on the session singleton instance.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Retrieve a value from the session
    $value = Session::get('name');

    // Write a value to the session storage
    $value = Session::put('name', 'Taylor');

    // Equivalent statement using the "instance" method
    $value = Session::instance()-&gt;put('name', 'Taylor');
&lt;/code&gt;&lt;/pre&gt;</long-description>
        </docblock>
        <argument line="148">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="148">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/session.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Session</error>
      <error line="134" code="50015">Argument $method is missing from the Docblock of __callStatic()</error>
      <error line="134" code="50015">Argument $parameters is missing from the Docblock of __callStatic()</error>
    </parse_markers>
  </file>
  <file path="laravel/ioc.php" hash="34fd8b679a21f6d900239dc0e6b5422b" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>IoC</name>
      <full_name>\Laravel\IoC</full_name>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$registry</name>
        <default>array()</default>
        <docblock line="5">
          <description>The registered dependencies.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$singletons</name>
        <default>array()</default>
        <docblock line="12">
          <description>The resolved singleton instances.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="27" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="19">
          <description>Register an object and its resolver.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="param" description="" type="mixed" variable="$resolver">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="19" name="param" description="" type="bool" variable="$singleton">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="19" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="27">
          <name>$resolver</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="27">
          <name>$singleton</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="40" package="Default">
        <name>registered</name>
        <full_name>registered</full_name>
        <docblock line="34">
          <description>Determine if an object has been registered in the container.</description>
          <long-description></long-description>
          <tag line="34" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="54" package="Default">
        <name>singleton</name>
        <full_name>singleton</full_name>
        <docblock line="45">
          <description>Register an object as a singleton.</description>
          <long-description>&lt;p&gt;Singletons will only be instantiated the first time they are resolved.&lt;/p&gt;</long-description>
          <tag line="45" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="param" description="" type="\Closure" variable="$resolver">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="45" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="54">
          <name>$resolver</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="71" package="Default">
        <name>instance</name>
        <full_name>instance</full_name>
        <docblock line="59">
          <description>Register an existing instance as a singleton.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Register an instance as a singleton in the container
    IoC::instance('mailer', new Mailer);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="59" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="param" description="" type="mixed" variable="$instance">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="59" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="71">
          <name>$instance</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="91" package="Default">
        <name>resolve</name>
        <full_name>resolve</full_name>
        <docblock line="76">
          <description>Resolve a given type to an instance.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get an instance of the "mailer" object registered in the container
    $mailer = IoC::resolve('mailer');

    // Get an instance of the "mailer" object and pass parameters to the resolver
    $mailer = IoC::resolve('mailer', array('test'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="76" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="76" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="145" package="Default">
        <name>build</name>
        <full_name>build</full_name>
        <docblock line="138">
          <description>Instantiate an instance of the given type.</description>
          <long-description></long-description>
          <tag line="138" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="138" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="138" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="145">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="186" package="Default">
        <name>dependencies</name>
        <full_name>dependencies</full_name>
        <docblock line="180">
          <description>Resolve all of the dependencies from the ReflectionParameters.</description>
          <long-description></long-description>
          <tag line="180" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="180" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/ioc.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\IoC</error>
    </parse_markers>
  </file>
  <file path="laravel/memcached.php" hash="22803d6035c1a053b1eda97612b84c92" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Memcached</name>
      <full_name>\Laravel\Memcached</full_name>
      <property final="false" static="true" visibility="protected" line="10" namespace="Laravel" package="Default">
        <name>$connection</name>
        <default></default>
        <docblock line="5">
          <description>The Memcached connection instance.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="\Laravel\Memcached">
            <type by_reference="false">\Laravel\Memcached</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="25" package="Default">
        <name>connection</name>
        <full_name>connection</full_name>
        <docblock line="12">
          <description>Get the Memcached connection instance.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get the Memcache connection and get an item from the cache
    $name = Memcached::connection()-&gt;get('name');

    // Get the Memcache connection and place an item in the cache
    Memcached::connection()-&gt;set('name', 'Taylor');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="12" name="return" description="" type="\Laravel\Memcached">
            <type by_reference="false">\Laravel\Memcached</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="41" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="35">
          <description>Create a new Memcached connection instance.</description>
          <long-description></long-description>
          <tag line="35" name="param" description="" type="array" variable="$servers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="35" name="return" description="" type="\Laravel\Memcached">
            <type by_reference="false">\Laravel\Memcached</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$servers</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="69" package="Default">
        <name>__callStatic</name>
        <full_name>__callStatic</full_name>
        <docblock line="58">
          <description>Dynamically pass all other method calls to the Memcache instance.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get an item from the Memcache instance
    $name = Memcached::get('name');

    // Store data on the Memcache server
    Memcached::set('name', 'Taylor');
&lt;/code&gt;&lt;/pre&gt;</long-description>
        </docblock>
        <argument line="69">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/memcached.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Memcached</error>
      <error line="58" code="50015">Argument $method is missing from the Docblock of __callStatic()</error>
      <error line="58" code="50015">Argument $parameters is missing from the Docblock of __callStatic()</error>
    </parse_markers>
  </file>
  <file path="laravel/lang.php" hash="fcbfd2e859f67b9740a7569b58238220" package="Default">
    <include line="223" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Lang</name>
      <full_name>\Laravel\Lang</full_name>
      <constant namespace="Laravel" line="40" package="Default">
        <name>loader</name>
        <full_name>loader</full_name>
        <value>'laravel.language.loader'</value>
        <docblock line="35">
          <description>The language loader event name.</description>
          <long-description></long-description>
          <tag line="35" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel" package="Default">
        <name>$key</name>
        <default></default>
        <docblock line="5">
          <description>The key of the language line being retrieved.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="17" namespace="Laravel" package="Default">
        <name>$replacements</name>
        <default></default>
        <docblock line="12">
          <description>The replacements that should be made on the language line.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="Laravel" package="Default">
        <name>$language</name>
        <default></default>
        <docblock line="19">
          <description>The language in which the line should be retrieved.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="33" namespace="Laravel" package="Default">
        <name>$lines</name>
        <default>array()</default>
        <docblock line="26">
          <description>All of the loaded language lines.</description>
          <long-description>&lt;p&gt;The array is keyed by [$bundle][$language][$file].&lt;/p&gt;</long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="50" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="42">
          <description>Create a new Lang instance.</description>
          <long-description></long-description>
          <tag line="42" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="param" description="" type="array" variable="$replacements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="param" description="" type="string" variable="$language">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="50">
          <name>$replacements</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="50">
          <name>$language</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="76" package="Default">
        <name>line</name>
        <full_name>line</full_name>
        <docblock line="57">
          <description>Create a new language line instance.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a new language line instance for a given line
    $line = Lang::line('validation.required');

    // Create a new language line for a line belonging to a bundle
    $line = Lang::line('admin::messages.welcome');

    // Specify some replacements for the language line
    $line = Lang::line('validation.required', array('attribute' =&gt; 'email'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="57" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="57" name="param" description="" type="array" variable="$replacements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="57" name="param" description="" type="string" variable="$language">
            <type by_reference="false">string</type>
          </tag>
          <tag line="57" name="return" description="" type="\Laravel\Lang">
            <type by_reference="false">\Laravel\Lang</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$replacements</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="76">
          <name>$language</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="90" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="83">
          <description>Determine if a language line exists.</description>
          <long-description></long-description>
          <tag line="83" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="param" description="" type="string" variable="$language">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$language</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="113" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="95">
          <description>Get the language line as a string.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get a language line
    $line = Lang::line('validation.required')-&gt;get();

    // Get a language line in a specified language
    $line = Lang::line('validation.required')-&gt;get('sp');

    // Return a default value if the line doesn't exist
    $line = Lang::line('validation.required')-&gt;get(null, 'Default');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="95" name="param" description="" type="string" variable="$language">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="param" description="" type="string" variable="$default">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$language</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="113">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="158" package="Default">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="150">
          <description>Parse a language key into its bundle, file, and line segments.</description>
          <long-description>&lt;p&gt;Language lines follow a {bundle}::{file}.{line} naming convention.&lt;/p&gt;</long-description>
          <tag line="150" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="150" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="158">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="187" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="179">
          <description>Load all of the language lines from a language file.</description>
          <long-description></long-description>
          <tag line="179" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="param" description="" type="string" variable="$language">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="187">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="187">
          <name>$language</name>
          <default></default>
          <type/>
        </argument>
        <argument line="187">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="212" package="Default">
        <name>file</name>
        <full_name>file</full_name>
        <docblock line="204">
          <description>Load a language array from a language file.</description>
          <long-description></long-description>
          <tag line="204" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="204" name="param" description="" type="string" variable="$language">
            <type by_reference="false">string</type>
          </tag>
          <tag line="204" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="204" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="212">
          <name>$language</name>
          <default></default>
          <type/>
        </argument>
        <argument line="212">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="237" package="Default">
        <name>path</name>
        <full_name>path</full_name>
        <docblock line="229">
          <description>Get the path to a bundle's language file.</description>
          <long-description></long-description>
          <tag line="229" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="229" name="param" description="" type="string" variable="$language">
            <type by_reference="false">string</type>
          </tag>
          <tag line="229" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="229" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="237">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="237">
          <name>$language</name>
          <default></default>
          <type/>
        </argument>
        <argument line="237">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="247" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="242">
          <description>Get the string content of the language line.</description>
          <long-description></long-description>
          <tag line="242" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/lang.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Lang</error>
    </parse_markers>
  </file>
  <file path="laravel/paginator.php" hash="b538b40d470a592991e8825c9ce17a81" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Paginator</name>
      <full_name>\Laravel\Paginator</full_name>
      <property final="false" static="false" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$results</name>
        <default></default>
        <docblock line="5">
          <description>The results for the current page.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$page</name>
        <default></default>
        <docblock line="12">
          <description>The current page.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="Laravel" package="Default">
        <name>$last</name>
        <default></default>
        <docblock line="19">
          <description>The last page available for the result set.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="Laravel" package="Default">
        <name>$total</name>
        <default></default>
        <docblock line="26">
          <description>The total number of results.</description>
          <long-description></long-description>
          <tag line="26" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="38" namespace="Laravel" package="Default">
        <name>$per_page</name>
        <default></default>
        <docblock line="33">
          <description>The number of items per page.</description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="Laravel" package="Default">
        <name>$appends</name>
        <default></default>
        <docblock line="40">
          <description>The values that should be appended to the end of the link query strings.</description>
          <long-description></long-description>
          <tag line="40" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="Laravel" package="Default">
        <name>$appendage</name>
        <default></default>
        <docblock line="47">
          <description>The compiled appendage that will be appended to the links.</description>
          <long-description>&lt;p&gt;This consists of a sprintf format with a page place-holder and query string.&lt;/p&gt;</long-description>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="61" namespace="Laravel" package="Default">
        <name>$language</name>
        <default></default>
        <docblock line="56">
          <description>The language that should be used when creating the pagination links.</description>
          <long-description></long-description>
          <tag line="56" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="68" namespace="Laravel" package="Default">
        <name>$dots</name>
        <default>'&lt;li class="dots disabled"&gt;&lt;a href="#"&gt;...&lt;/a&gt;&lt;/li&gt;'</default>
        <docblock line="63">
          <description>The "dots" element used in the pagination slider.</description>
          <long-description></long-description>
          <tag line="63" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="80" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="70">
          <description>Create a new Paginator instance.</description>
          <long-description></long-description>
          <tag line="70" name="param" description="" type="array" variable="$results">
            <type by_reference="false">array</type>
          </tag>
          <tag line="70" name="param" description="" type="int" variable="$page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="70" name="param" description="" type="int" variable="$total">
            <type by_reference="false">int</type>
          </tag>
          <tag line="70" name="param" description="" type="int" variable="$per_page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="70" name="param" description="" type="int" variable="$last">
            <type by_reference="false">int</type>
          </tag>
          <tag line="70" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$results</name>
          <default></default>
          <type/>
        </argument>
        <argument line="80">
          <name>$page</name>
          <default></default>
          <type/>
        </argument>
        <argument line="80">
          <name>$total</name>
          <default></default>
          <type/>
        </argument>
        <argument line="80">
          <name>$per_page</name>
          <default></default>
          <type/>
        </argument>
        <argument line="80">
          <name>$last</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="97" package="Default">
        <name>make</name>
        <full_name>make</full_name>
        <docblock line="89">
          <description>Create a new Paginator instance.</description>
          <long-description></long-description>
          <tag line="89" name="param" description="" type="array" variable="$results">
            <type by_reference="false">array</type>
          </tag>
          <tag line="89" name="param" description="" type="int" variable="$total">
            <type by_reference="false">int</type>
          </tag>
          <tag line="89" name="param" description="" type="int" variable="$per_page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="89" name="return" description="" type="\Laravel\Paginator">
            <type by_reference="false">\Laravel\Paginator</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$results</name>
          <default></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$total</name>
          <default></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$per_page</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="113" package="Default">
        <name>page</name>
        <full_name>page</full_name>
        <docblock line="106">
          <description>Get the current page from the request query string.</description>
          <long-description></long-description>
          <tag line="106" name="param" description="" type="int" variable="$total">
            <type by_reference="false">int</type>
          </tag>
          <tag line="106" name="param" description="" type="int" variable="$per_page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="106" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$total</name>
          <default></default>
          <type/>
        </argument>
        <argument line="113">
          <name>$per_page</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="137" package="Default">
        <name>valid</name>
        <full_name>valid</full_name>
        <docblock line="129">
          <description>Determine if a given page number is a valid page.</description>
          <long-description>&lt;p&gt;A valid page must be greater than or equal to one and a valid integer.&lt;/p&gt;</long-description>
          <tag line="129" name="param" description="" type="int" variable="$page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="129" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$page</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="166" package="Default">
        <name>links</name>
        <full_name>links</full_name>
        <docblock line="142">
          <description>Create the HTML pagination links.</description>
          <long-description>&lt;p&gt;Typically, an intelligent, "sliding" window of links will be rendered based
on the total number of pages, the current page, and the number of adjacent
pages that should rendered. This creates a beautiful paginator similar to
that of Google's.&lt;/p&gt;

&lt;p&gt;Example: 1 2 ... 23 24 25 [26] 27 28 29 ... 51 52&lt;/p&gt;

&lt;p&gt;If you wish to render only certain elements of the pagination control,
explore some of the other public methods available on the instance.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Render the pagination links
    echo $paginator-&gt;links();

    // Render the pagination links using a given window size
    echo $paginator-&gt;links(5);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="142" name="param" description="" type="int" variable="$adjacent">
            <type by_reference="false">int</type>
          </tag>
          <tag line="142" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="166">
          <name>$adjacent</name>
          <default>3</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="208" package="Default">
        <name>slider</name>
        <full_name>slider</full_name>
        <docblock line="191">
          <description>Build sliding list of HTML numeric page links.</description>
          <long-description>&lt;p&gt;This method is very similar to the "links" method, only it does not
render the "first" and "last" pagination links, but only the pages.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Render the pagination slider
    echo $paginator-&gt;slider();

    // Render the pagination slider using a given window size
    echo $paginator-&gt;slider(5);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="191" name="param" description="" type="int" variable="$adjacent">
            <type by_reference="false">int</type>
          </tag>
          <tag line="191" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$adjacent</name>
          <default>3</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="251" package="Default">
        <name>previous</name>
        <full_name>previous</full_name>
        <docblock line="237">
          <description>Generate the "previous" HTML link.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create the "previous" pagination element
    echo $paginator-&gt;previous();

    // Create the "previous" pagination element with custom text
    echo $paginator-&gt;previous('Go Back');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="237" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="237" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$text</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="272" package="Default">
        <name>next</name>
        <full_name>next</full_name>
        <docblock line="258">
          <description>Generate the "next" HTML link.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create the "next" pagination element
    echo $paginator-&gt;next();

    // Create the "next" pagination element with custom text
    echo $paginator-&gt;next('Skip Forwards');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="258" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="258" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="272">
          <name>$text</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="288" package="Default">
        <name>element</name>
        <full_name>element</full_name>
        <docblock line="279">
          <description>Create a chronological pagination element, such as a "previous" or "next" link.</description>
          <long-description></long-description>
          <tag line="279" name="param" description="" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="279" name="param" description="" type="int" variable="$page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="279" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="279" name="param" description="" type="\Laravel\Closure" variable="$disabled">
            <type by_reference="false">\Laravel\Closure</type>
          </tag>
          <tag line="279" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="288">
          <name>$element</name>
          <default></default>
          <type/>
        </argument>
        <argument line="288">
          <name>$page</name>
          <default></default>
          <type/>
        </argument>
        <argument line="288">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
        <argument line="288">
          <name>$disabled</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="316" package="Default">
        <name>beginning</name>
        <full_name>beginning</full_name>
        <docblock line="311">
          <description>Build the first two page links for a sliding page range.</description>
          <long-description></long-description>
          <tag line="311" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="326" package="Default">
        <name>ending</name>
        <full_name>ending</full_name>
        <docblock line="321">
          <description>Build the last two page links for a sliding page range.</description>
          <long-description></long-description>
          <tag line="321" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="340" package="Default">
        <name>range</name>
        <full_name>range</full_name>
        <docblock line="331">
          <description>Build a range of numeric pagination links.</description>
          <long-description>&lt;p&gt;For the current page, an HTML span element will be generated instead of a link.&lt;/p&gt;</long-description>
          <tag line="331" name="param" description="" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="331" name="param" description="" type="int" variable="$end">
            <type by_reference="false">int</type>
          </tag>
          <tag line="331" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="340">
          <name>$start</name>
          <default></default>
          <type/>
        </argument>
        <argument line="340">
          <name>$end</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="371" package="Default">
        <name>link</name>
        <full_name>link</full_name>
        <docblock line="363">
          <description>Create a HTML page link.</description>
          <long-description></long-description>
          <tag line="363" name="param" description="" type="int" variable="$page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="363" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="363" name="param" description="" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="363" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="371">
          <name>$page</name>
          <default></default>
          <type/>
        </argument>
        <argument line="371">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
        <argument line="371">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="384" package="Default">
        <name>appendage</name>
        <full_name>appendage</full_name>
        <docblock line="378">
          <description>Create the "appendage" to be attached to every pagination link.</description>
          <long-description></long-description>
          <tag line="378" name="param" description="" type="array" variable="$appends">
            <type by_reference="false">array</type>
          </tag>
          <tag line="378" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="384">
          <name>$appends</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="405" package="Default">
        <name>appends</name>
        <full_name>appends</full_name>
        <docblock line="399">
          <description>Set the items that should be appended to the link query strings.</description>
          <long-description></long-description>
          <tag line="399" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="399" name="return" description="" type="\Laravel\Paginator">
            <type by_reference="false">\Laravel\Paginator</type>
          </tag>
        </docblock>
        <argument line="405">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="417" package="Default">
        <name>speaks</name>
        <full_name>speaks</full_name>
        <docblock line="411">
          <description>Set the language that should be used when creating the pagination links.</description>
          <long-description></long-description>
          <tag line="411" name="param" description="" type="string" variable="$language">
            <type by_reference="false">string</type>
          </tag>
          <tag line="411" name="return" description="" type="\Laravel\Paginator">
            <type by_reference="false">\Laravel\Paginator</type>
          </tag>
        </docblock>
        <argument line="417">
          <name>$language</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/paginator.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Paginator</error>
    </parse_markers>
  </file>
  <file path="laravel/profiling/template.blade.php" hash="20e1524eaa7bf908d3120207e57c984b" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/profiling/template.blade.php</error>
    </parse_markers>
  </file>
  <file path="laravel/profiling/profiler.php" hash="1c89055e655fe42e1f0b6e9fd918d18a" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Profiling" line="10" package="Default">
      <extends/>
      <name>Profiler</name>
      <full_name>\Laravel\Profiling\Profiler</full_name>
      <property final="false" static="true" visibility="protected" line="17" namespace="Laravel\Profiling" package="Default">
        <name>$data</name>
        <default>array('queries' =&gt; array(), 'logs' =&gt; array(), 'timers' =&gt; array())</default>
        <docblock line="12">
          <description>An array of the recorded Profiler data.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Profiling" line="25" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="19">
          <description>Get the rendered contents of the Profiler.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="" type="\Laravel\Profiling\Response" variable="$response">
            <type by_reference="false">\Laravel\Profiling\Response</type>
          </tag>
          <tag line="19" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$response</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Profiling" line="51" package="Default">
        <name>time</name>
        <full_name>time</full_name>
        <docblock line="44">
          <description>Allow a callback to be timed.</description>
          <long-description></long-description>
          <tag line="44" name="param" description="" type="\Laravel\Profiling\closure" variable="$func">
            <type by_reference="false">\Laravel\Profiling\closure</type>
          </tag>
          <tag line="44" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$func</name>
          <default></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$name</name>
          <default>'default_func_timer'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Profiling" line="76" package="Default">
        <name>tick</name>
        <full_name>tick</full_name>
        <docblock line="70">
          <description>Start, or add a tick to a timer.</description>
          <long-description></long-description>
          <tag line="70" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$name</name>
          <default>'default_timer'</default>
          <type/>
        </argument>
        <argument line="76">
          <name>$callback</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Profiling" line="131" package="Default">
        <name>log</name>
        <full_name>log</full_name>
        <docblock line="124">
          <description>Add a log entry to the log entries array.</description>
          <long-description></long-description>
          <tag line="124" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="124" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="124" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="131">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Profiling" line="144" package="Default">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="136">
          <description>Add a performed SQL query to the Profiler.</description>
          <long-description></long-description>
          <tag line="136" name="param" description="" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="136" name="param" description="" type="array" variable="$bindings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="136" name="param" description="" type="float" variable="$time">
            <type by_reference="false">float</type>
          </tag>
          <tag line="136" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="144">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
        <argument line="144">
          <name>$bindings</name>
          <default></default>
          <type/>
        </argument>
        <argument line="144">
          <name>$time</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Profiling" line="162" package="Default">
        <name>attach</name>
        <full_name>attach</full_name>
        <docblock line="157">
          <description>Attach the Profiler's event listeners.</description>
          <long-description></long-description>
          <tag line="157" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/profiling/profiler.php</error>
      <error line="10" code="50000">No DocBlock was found for \Laravel\Profiling\Profiler</error>
      <error line="70" code="50015">Argument $callback is missing from the Docblock of tick()</error>
    </parse_markers>
  </file>
  <file path="laravel/auth/drivers/driver.php" hash="3dd3185e4c6423a671183fdac1a77803" package="Default">
    <class final="false" abstract="true" namespace="Laravel\Auth\Drivers" line="10" package="Default">
      <extends/>
      <name>Driver</name>
      <full_name>\Laravel\Auth\Drivers\Driver</full_name>
      <property final="false" static="false" visibility="public" line="17" namespace="Laravel\Auth\Drivers" package="Default">
        <name>$user</name>
        <default></default>
        <docblock line="12">
          <description>The user currently being managed by the driver.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="Laravel\Auth\Drivers" package="Default">
        <name>$token</name>
        <default></default>
        <docblock line="19">
          <description>The current value of the user's token.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Auth\Drivers" line="31" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="26">
          <description>Create a new login auth driver instance.</description>
          <long-description></long-description>
          <tag line="26" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Auth\Drivers" line="54" package="Default">
        <name>guest</name>
        <full_name>guest</full_name>
        <docblock line="47">
          <description>Determine if the user of the application is not logged in.</description>
          <long-description>&lt;p&gt;This method is the inverse of the "check" method.&lt;/p&gt;</long-description>
          <tag line="47" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Auth\Drivers" line="64" package="Default">
        <name>check</name>
        <full_name>check</full_name>
        <docblock line="59">
          <description>Determine if the user is logged in.</description>
          <long-description></long-description>
          <tag line="59" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Auth\Drivers" line="76" package="Default">
        <name>user</name>
        <full_name>user</full_name>
        <docblock line="69">
          <description>Get the current user of the application.</description>
          <long-description>&lt;p&gt;If the user is a guest, null should be returned.&lt;/p&gt;</long-description>
          <tag line="69" name="return" description="" type="mixed|null">
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Laravel\Auth\Drivers" line="89" package="Default">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="83">
          <description>Get the given application user by ID.</description>
          <long-description></long-description>
          <tag line="83" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="83" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Laravel\Auth\Drivers" line="97" package="Default">
        <name>attempt</name>
        <full_name>attempt</full_name>
        <docblock line="91">
          <description>Attempt to log a user into the application.</description>
          <long-description></long-description>
          <tag line="91" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="91" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Auth\Drivers" line="108" package="Default">
        <name>login</name>
        <full_name>login</full_name>
        <docblock line="99">
          <description>Login the user assigned to the given token.</description>
          <long-description>&lt;p&gt;The token is typically a numeric ID for the user.&lt;/p&gt;</long-description>
          <tag line="99" name="param" description="" type="string" variable="$token">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="param" description="" type="bool" variable="$remember">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="99" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
        <argument line="108">
          <name>$remember</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Auth\Drivers" line="126" package="Default">
        <name>logout</name>
        <full_name>logout</full_name>
        <docblock line="121">
          <description>Log the user out of the driver's auth context.</description>
          <long-description></long-description>
          <tag line="121" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Auth\Drivers" line="145" package="Default">
        <name>store</name>
        <full_name>store</full_name>
        <docblock line="139">
          <description>Store a user's token in the session.</description>
          <long-description></long-description>
          <tag line="139" name="param" description="" type="string" variable="$token">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Auth\Drivers" line="156" package="Default">
        <name>remember</name>
        <full_name>remember</full_name>
        <docblock line="150">
          <description>Store a user's token in a long-lived cookie.</description>
          <long-description></long-description>
          <tag line="150" name="param" description="" type="string" variable="$token">
            <type by_reference="false">string</type>
          </tag>
          <tag line="150" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="156">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Auth\Drivers" line="168" package="Default">
        <name>recall</name>
        <full_name>recall</full_name>
        <docblock line="163">
          <description>Attempt to find a "remember me" cookie for the user.</description>
          <long-description></long-description>
          <tag line="163" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Auth\Drivers" line="189" package="Default">
        <name>cookie</name>
        <full_name>cookie</full_name>
        <docblock line="181">
          <description>Store an authentication cookie.</description>
          <long-description></long-description>
          <tag line="181" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="181" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="181" name="param" description="" type="int" variable="$minutes">
            <type by_reference="false">int</type>
          </tag>
          <tag line="181" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="189">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="189">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="189">
          <name>$minutes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Auth\Drivers" line="206" package="Default">
        <name>token</name>
        <full_name>token</full_name>
        <docblock line="201">
          <description>Get the session key name used to store the token.</description>
          <long-description></long-description>
          <tag line="201" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Auth\Drivers" line="216" package="Default">
        <name>recaller</name>
        <full_name>recaller</full_name>
        <docblock line="211">
          <description>Get the name used for the "remember me" cookie.</description>
          <long-description></long-description>
          <tag line="211" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Auth\Drivers" line="226" package="Default">
        <name>name</name>
        <full_name>name</full_name>
        <docblock line="221">
          <description>Get the name of the driver in a storage friendly format.</description>
          <long-description></long-description>
          <tag line="221" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/auth/drivers/driver.php</error>
      <error line="10" code="50000">No DocBlock was found for \Laravel\Auth\Drivers\Driver</error>
    </parse_markers>
  </file>
  <file path="laravel/auth/drivers/fluent.php" hash="49a8da6932c566af96b7996f87567d89" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Auth\Drivers" line="7" package="Default">
      <extends>\Laravel\Auth\Drivers\Driver</extends>
      <name>Fluent</name>
      <full_name>\Laravel\Auth\Drivers\Fluent</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Auth\Drivers" line="17" package="Default">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="9">
          <description>Get the current user of the application.</description>
          <long-description>&lt;p&gt;If the user is a guest, null should be returned.&lt;/p&gt;</long-description>
          <tag line="9" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="9" name="return" description="" type="mixed|null">
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="17">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Auth\Drivers" line="31" package="Default">
        <name>attempt</name>
        <full_name>attempt</full_name>
        <docblock line="25">
          <description>Attempt to log a user into the application.</description>
          <long-description></long-description>
          <tag line="25" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="25" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Auth\Drivers" line="55" package="Default">
        <name>get_user</name>
        <full_name>get_user</full_name>
        <docblock line="49">
          <description>Get the user from the database table.</description>
          <long-description></long-description>
          <tag line="49" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="49" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$arguments</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/auth/drivers/fluent.php</error>
      <error line="7" code="50000">No DocBlock was found for \Laravel\Auth\Drivers\Fluent</error>
    </parse_markers>
  </file>
  <file path="laravel/auth/drivers/eloquent.php" hash="0d81316e015ac8937e73e02f882bb725" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Auth\Drivers" line="3" package="Default">
      <extends>\Laravel\Auth\Drivers\Driver</extends>
      <name>Eloquent</name>
      <full_name>\Laravel\Auth\Drivers\Eloquent</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Auth\Drivers" line="13" package="Default">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="5">
          <description>Get the current user of the application.</description>
          <long-description>&lt;p&gt;If the user is a guest, null should be returned.&lt;/p&gt;</long-description>
          <tag line="5" name="param" description="" type="int|object" variable="$token">
            <type by_reference="false">int</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="5" name="return" description="" type="mixed|null">
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="13">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Auth\Drivers" line="33" package="Default">
        <name>attempt</name>
        <full_name>attempt</full_name>
        <docblock line="27">
          <description>Attempt to log a user into the application.</description>
          <long-description></long-description>
          <tag line="27" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Auth\Drivers" line="66" package="Default">
        <name>model</name>
        <full_name>model</full_name>
        <docblock line="61">
          <description>Get a fresh model instance.</description>
          <long-description></long-description>
          <tag line="61" name="return" description="" type="\Laravel\Auth\Drivers\Eloquent">
            <type by_reference="false">\Laravel\Auth\Drivers\Eloquent</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/auth/drivers/eloquent.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Auth\Drivers\Eloquent</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Tester/CommandTester.php" hash="83887fdc4d102f88c662d9edb46caf41" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Tester" line="21" package="Default">
      <extends/>
      <name>CommandTester</name>
      <full_name>\Symfony\Component\Console\Tester\CommandTester</full_name>
      <docblock line="18">
        <description></description>
        <long-description></long-description>
        <tag line="18" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="23" namespace="Symfony\Component\Console\Tester" package="Default">
        <name>$command</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="24" namespace="Symfony\Component\Console\Tester" package="Default">
        <name>$input</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="25" namespace="Symfony\Component\Console\Tester" package="Default">
        <name>$output</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Tester" line="32" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="27">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="27" name="param" description="A Command instance to test." type="\Symfony\Component\Console\Command\Command" variable="$command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$command</name>
          <default></default>
          <type>\Symfony\Component\Console\Command\Command</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Tester" line="51" package="Default">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="37">
          <description>Executes the command.</description>
          <long-description>&lt;p&gt;Available options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;interactive: Sets the input interactive flag&lt;/li&gt;
&lt;li&gt;decorated:   Sets the output decorated flag&lt;/li&gt;
&lt;li&gt;verbosity:   Sets the output verbosity flag&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="37" name="param" description="An array of arguments and options" type="array" variable="$input">
            <type by_reference="false">array</type>
          </tag>
          <tag line="37" name="param" description="An array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="37" name="return" description="The command exit code" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$input</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="51">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Tester" line="74" package="Default">
        <name>getDisplay</name>
        <full_name>getDisplay</full_name>
        <docblock line="69">
          <description>Gets the display returned by the last execution of the command.</description>
          <long-description></long-description>
          <tag line="69" name="return" description="The display" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Tester" line="86" package="Default">
        <name>getInput</name>
        <full_name>getInput</full_name>
        <docblock line="81">
          <description>Gets the input instance used by the last execution of the command.</description>
          <long-description></long-description>
          <tag line="81" name="return" description="The current input instance" type="\Symfony\Component\Console\Tester\InputInterface">
            <type by_reference="false">\Symfony\Component\Console\Tester\InputInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Tester" line="96" package="Default">
        <name>getOutput</name>
        <full_name>getOutput</full_name>
        <docblock line="91">
          <description>Gets the output instance used by the last execution of the command.</description>
          <long-description></long-description>
          <tag line="91" name="return" description="The current output instance" type="\Symfony\Component\Console\Tester\OutputInterface">
            <type by_reference="false">\Symfony\Component\Console\Tester\OutputInterface</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Tester/CommandTester.php</error>
      <critical line="18" code="50005">No short description for class \Symfony\Component\Console\Tester\CommandTester</critical>
      <error line="23" code="50018">No DocBlock was found for property $command</error>
      <error line="24" code="50018">No DocBlock was found for property $input</error>
      <error line="25" code="50018">No DocBlock was found for property $output</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Tester/ApplicationTester.php" hash="17da037f131afb583393743a71ff9773" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Tester" line="23" package="Default">
      <extends/>
      <name>ApplicationTester</name>
      <full_name>\Symfony\Component\Console\Tester\ApplicationTester</full_name>
      <docblock line="20">
        <description></description>
        <long-description></long-description>
        <tag line="20" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="25" namespace="Symfony\Component\Console\Tester" package="Default">
        <name>$application</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="26" namespace="Symfony\Component\Console\Tester" package="Default">
        <name>$input</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="27" namespace="Symfony\Component\Console\Tester" package="Default">
        <name>$output</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Tester" line="34" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="29">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="29" name="param" description="An Application instance to test." type="\Symfony\Component\Console\Application" variable="$application">
            <type by_reference="false">\Symfony\Component\Console\Application</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$application</name>
          <default></default>
          <type>\Symfony\Component\Console\Application</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Tester" line="53" package="Default">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="39">
          <description>Executes the application.</description>
          <long-description>&lt;p&gt;Available options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;interactive: Sets the input interactive flag&lt;/li&gt;
&lt;li&gt;decorated:   Sets the output decorated flag&lt;/li&gt;
&lt;li&gt;verbosity:   Sets the output verbosity flag&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="39" name="param" description="An array of arguments and options" type="array" variable="$input">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="param" description="An array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="return" description="The command exit code" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$input</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="53">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Tester" line="76" package="Default">
        <name>getDisplay</name>
        <full_name>getDisplay</full_name>
        <docblock line="71">
          <description>Gets the display returned by the last execution of the application.</description>
          <long-description></long-description>
          <tag line="71" name="return" description="The display" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Tester" line="88" package="Default">
        <name>getInput</name>
        <full_name>getInput</full_name>
        <docblock line="83">
          <description>Gets the input instance used by the last execution of the application.</description>
          <long-description></long-description>
          <tag line="83" name="return" description="The current input instance" type="\Symfony\Component\Console\Input\InputInterface">
            <type by_reference="false">\Symfony\Component\Console\Input\InputInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Tester" line="98" package="Default">
        <name>getOutput</name>
        <full_name>getOutput</full_name>
        <docblock line="93">
          <description>Gets the output instance used by the last execution of the application.</description>
          <long-description></long-description>
          <tag line="93" name="return" description="The current output instance" type="\Symfony\Component\Console\Output\OutputInterface">
            <type by_reference="false">\Symfony\Component\Console\Output\OutputInterface</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Tester/ApplicationTester.php</error>
      <critical line="20" code="50005">No short description for class \Symfony\Component\Console\Tester\ApplicationTester</critical>
      <error line="25" code="50018">No DocBlock was found for property $application</error>
      <error line="26" code="50018">No DocBlock was found for property $input</error>
      <error line="27" code="50018">No DocBlock was found for property $output</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Output/StreamOutput.php" hash="562a1d12c0f2df98e88e10f0a19cee53" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Output" line="31" package="Default">
      <extends>\Symfony\Component\Console\Output\Output</extends>
      <name>StreamOutput</name>
      <full_name>\Symfony\Component\Console\Output\StreamOutput</full_name>
      <docblock line="16">
        <description>StreamOutput writes the output to a given stream.</description>
        <long-description>&lt;p&gt;Usage:&lt;/p&gt;

&lt;p&gt;$output = new StreamOutput(fopen('php://stdout', 'w'));&lt;/p&gt;

&lt;p&gt;As &lt;code&gt;StreamOutput&lt;/code&gt; can use any stream, you can also use a file:&lt;/p&gt;

&lt;p&gt;$output = new StreamOutput(fopen('/path/to/output.log', 'a', false));&lt;/p&gt;</long-description>
        <tag line="16" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="16" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="private" line="33" namespace="Symfony\Component\Console\Output" package="Default">
        <name>$stream</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="48" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="35">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="35" name="param" description="A stream resource" type="mixed" variable="$stream">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="35" name="param" description="The verbosity level (self::VERBOSITY_QUIET, self::VERBOSITY_NORMAL,&#10;                                  self::VERBOSITY_VERBOSE)" type="integer" variable="$verbosity">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="35" name="param" description="Whether to decorate messages or not (null for auto-guessing)" type="Boolean" variable="$decorated">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="35" name="param" description="Output formatter instance" type="\Symfony\Component\Console\Output\OutputFormatter" variable="$formatter">
            <type by_reference="false">\Symfony\Component\Console\Output\OutputFormatter</type>
          </tag>
          <tag line="35" name="throws" description="When first argument is not a real stream" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="35" name="api" description=""/>
        </docblock>
        <argument line="48">
          <name>$stream</name>
          <default></default>
          <type/>
        </argument>
        <argument line="48">
          <name>$verbosity</name>
          <default>self::VERBOSITY_NORMAL</default>
          <type/>
        </argument>
        <argument line="48">
          <name>$decorated</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="48">
          <name>$formatter</name>
          <default>null</default>
          <type>\Symfony\Component\Console\Formatter\OutputFormatterInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="68" package="Default">
        <name>getStream</name>
        <full_name>getStream</full_name>
        <docblock line="63">
          <description>Gets the stream attached to this StreamOutput instance.</description>
          <long-description></long-description>
          <tag line="63" name="return" description="A stream resource" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="81" package="Default">
        <name>doWrite</name>
        <full_name>doWrite</full_name>
        <docblock line="73">
          <description>Writes a message to the output.</description>
          <long-description></long-description>
          <tag line="73" name="param" description="A message to write to the output" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="param" description="Whether to add a newline or not" type="Boolean" variable="$newline">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="73" name="throws" description="When unable to write output (should never happen)" type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="81">
          <name>$newline</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console\Output" line="103" package="Default">
        <name>hasColorSupport</name>
        <full_name>hasColorSupport</full_name>
        <docblock line="93">
          <description>Returns true if the stream supports colorization.</description>
          <long-description>&lt;p&gt;Colorization is disabled if not supported by the stream:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;windows without ansicon&lt;/li&gt;
&lt;li&gt;non tty consoles&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="93" name="return" description="true if the stream supports colorization, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Output/StreamOutput.php</error>
      <error line="33" code="50018">No DocBlock was found for property $stream</error>
      <error line="35" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $formatter in __construct()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Output/Output.php" hash="e2ef01ea1cd4997356c9a501ec5fe8c7" package="Default">
    <class final="false" abstract="true" namespace="Symfony\Component\Console\Output" line="30" package="Default">
      <extends/>
      <implements>\Symfony\Component\Console\Output\OutputInterface</implements>
      <name>Output</name>
      <full_name>\Symfony\Component\Console\Output\Output</full_name>
      <docblock line="17">
        <description>Base class for output classes.</description>
        <long-description>&lt;p&gt;There are three levels of verbosity:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;normal: no option passed (normal output - information)&lt;/li&gt;
&lt;li&gt;verbose: -v (more output - debug)&lt;/li&gt;
&lt;li&gt;quiet: -q (no output)&lt;/li&gt;
&lt;/ul&gt;</long-description>
        <tag line="17" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="17" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="private" line="32" namespace="Symfony\Component\Console\Output" package="Default">
        <name>$verbosity</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="33" namespace="Symfony\Component\Console\Output" package="Default">
        <name>$formatter</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="44" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="35">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="35" name="param" description="The verbosity level (self::VERBOSITY_QUIET, self::VERBOSITY_NORMAL, self::VERBOSITY_VERBOSE)" type="integer" variable="$verbosity">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="35" name="param" description="Whether to decorate messages or not (null for auto-guessing)" type="Boolean" variable="$decorated">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="35" name="param" description="Output formatter instance" type="\Symfony\Component\Console\Formatter\OutputFormatterInterface" variable="$formatter">
            <type by_reference="false">\Symfony\Component\Console\Formatter\OutputFormatterInterface</type>
          </tag>
          <tag line="35" name="api" description=""/>
        </docblock>
        <argument line="44">
          <name>$verbosity</name>
          <default>self::VERBOSITY_NORMAL</default>
          <type/>
        </argument>
        <argument line="44">
          <name>$decorated</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="44">
          <name>$formatter</name>
          <default>null</default>
          <type>\Symfony\Component\Console\Formatter\OutputFormatterInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="58" package="Default">
        <name>setFormatter</name>
        <full_name>setFormatter</full_name>
        <docblock line="51">
          <description>Sets output formatter.</description>
          <long-description></long-description>
          <tag line="51" name="param" description="" type="\Symfony\Component\Console\Formatter\OutputFormatterInterface" variable="$formatter">
            <type by_reference="false">\Symfony\Component\Console\Formatter\OutputFormatterInterface</type>
          </tag>
          <tag line="51" name="api" description=""/>
        </docblock>
        <argument line="58">
          <name>$formatter</name>
          <default></default>
          <type>\Symfony\Component\Console\Formatter\OutputFormatterInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="70" package="Default">
        <name>getFormatter</name>
        <full_name>getFormatter</full_name>
        <docblock line="63">
          <description>Returns current output formatter instance.</description>
          <long-description></long-description>
          <tag line="63" name="return" description="" type="\Symfony\Component\Console\Formatter\OutputFormatterInterface">
            <type by_reference="false">\Symfony\Component\Console\Formatter\OutputFormatterInterface</type>
          </tag>
          <tag line="63" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="82" package="Default">
        <name>setDecorated</name>
        <full_name>setDecorated</full_name>
        <docblock line="75">
          <description>Sets the decorated flag.</description>
          <long-description></long-description>
          <tag line="75" name="param" description="Whether to decorate the messages or not" type="Boolean" variable="$decorated">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="75" name="api" description=""/>
        </docblock>
        <argument line="82">
          <name>$decorated</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="94" package="Default">
        <name>isDecorated</name>
        <full_name>isDecorated</full_name>
        <docblock line="87">
          <description>Gets the decorated flag.</description>
          <long-description></long-description>
          <tag line="87" name="return" description="true if the output will decorate messages, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="87" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="106" package="Default">
        <name>setVerbosity</name>
        <full_name>setVerbosity</full_name>
        <docblock line="99">
          <description>Sets the verbosity of the output.</description>
          <long-description></long-description>
          <tag line="99" name="param" description="The level of verbosity" type="integer" variable="$level">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="99" name="api" description=""/>
        </docblock>
        <argument line="106">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="118" package="Default">
        <name>getVerbosity</name>
        <full_name>getVerbosity</full_name>
        <docblock line="111">
          <description>Gets the current verbosity of the output.</description>
          <long-description></long-description>
          <tag line="111" name="return" description="The current level of verbosity" type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="111" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="131" package="Default">
        <name>writeln</name>
        <full_name>writeln</full_name>
        <docblock line="123">
          <description>Writes a message to the output and adds a newline at the end.</description>
          <long-description></long-description>
          <tag line="123" name="param" description="The message as an array of lines of a single string" type="string|array" variable="$messages">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="123" name="param" description="The type of output" type="integer" variable="$type">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="123" name="api" description=""/>
        </docblock>
        <argument line="131">
          <name>$messages</name>
          <default></default>
          <type/>
        </argument>
        <argument line="131">
          <name>$type</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="147" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="136">
          <description>Writes a message to the output.</description>
          <long-description></long-description>
          <tag line="136" name="param" description="The message as an array of lines of a single string" type="string|array" variable="$messages">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="136" name="param" description="Whether to add a newline or not" type="Boolean" variable="$newline">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="136" name="param" description="The type of output" type="integer" variable="$type">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="136" name="throws" description="When unknown output type is given" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="136" name="api" description=""/>
        </docblock>
        <argument line="147">
          <name>$messages</name>
          <default></default>
          <type/>
        </argument>
        <argument line="147">
          <name>$newline</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="147">
          <name>$type</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="179" package="Default">
        <name>doWrite</name>
        <full_name>doWrite</full_name>
        <docblock line="173">
          <description>Writes a message to the output.</description>
          <long-description></long-description>
          <tag line="173" name="param" description="A message to write to the output" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="173" name="param" description="Whether to add a newline or not" type="Boolean" variable="$newline">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="179">
          <name>$newline</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Output/Output.php</error>
      <error line="32" code="50018">No DocBlock was found for property $verbosity</error>
      <error line="33" code="50018">No DocBlock was found for property $formatter</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Output/NullOutput.php" hash="9edaf0c0b498bc093bee43241bb5ea39" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Output" line="23" package="Default">
      <extends>\Symfony\Component\Console\Output\Output</extends>
      <name>NullOutput</name>
      <full_name>\Symfony\Component\Console\Output\NullOutput</full_name>
      <docblock line="14">
        <description>NullOutput suppresses all output.</description>
        <long-description>&lt;p&gt;$output = new NullOutput();&lt;/p&gt;</long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="31" package="Default">
        <name>doWrite</name>
        <full_name>doWrite</full_name>
        <docblock line="25">
          <description>Writes a message to the output.</description>
          <long-description></long-description>
          <tag line="25" name="param" description="A message to write to the output" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="25" name="param" description="Whether to add a newline or not" type="Boolean" variable="$newline">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="31">
          <name>$newline</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Output/NullOutput.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Output/OutputInterface.php" hash="1aee097376f06fb22f5cc0f28f4b09da" package="Default">
    <interface namespace="Symfony\Component\Console\Output" line="23" package="Default">
      <name>OutputInterface</name>
      <full_name>\Symfony\Component\Console\Output\OutputInterface</full_name>
      <docblock line="16">
        <description>OutputInterface is the interface implemented by all Output classes.</description>
        <long-description></long-description>
        <tag line="16" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="16" name="api" description=""/>
      </docblock>
      <constant namespace="Symfony\Component\Console\Output" line="25" package="Default">
        <name>VERBOSITY_QUIET</name>
        <full_name>VERBOSITY_QUIET</full_name>
        <value>0</value>
      </constant>
      <constant namespace="Symfony\Component\Console\Output" line="26" package="Default">
        <name>VERBOSITY_NORMAL</name>
        <full_name>VERBOSITY_NORMAL</full_name>
        <value>1</value>
      </constant>
      <constant namespace="Symfony\Component\Console\Output" line="27" package="Default">
        <name>VERBOSITY_VERBOSE</name>
        <full_name>VERBOSITY_VERBOSE</full_name>
        <value>2</value>
      </constant>
      <constant namespace="Symfony\Component\Console\Output" line="29" package="Default">
        <name>OUTPUT_NORMAL</name>
        <full_name>OUTPUT_NORMAL</full_name>
        <value>0</value>
      </constant>
      <constant namespace="Symfony\Component\Console\Output" line="30" package="Default">
        <name>OUTPUT_RAW</name>
        <full_name>OUTPUT_RAW</full_name>
        <value>1</value>
      </constant>
      <constant namespace="Symfony\Component\Console\Output" line="31" package="Default">
        <name>OUTPUT_PLAIN</name>
        <full_name>OUTPUT_PLAIN</full_name>
        <value>2</value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="44" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="33">
          <description>Writes a message to the output.</description>
          <long-description></long-description>
          <tag line="33" name="param" description="The message as an array of lines of a single string" type="string|array" variable="$messages">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="33" name="param" description="Whether to add a newline or not" type="Boolean" variable="$newline">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="33" name="param" description="The type of output" type="integer" variable="$type">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="33" name="throws" description="When unknown output type is given" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="33" name="api" description=""/>
        </docblock>
        <argument line="44">
          <name>$messages</name>
          <default></default>
          <type/>
        </argument>
        <argument line="44">
          <name>$newline</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="44">
          <name>$type</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="54" package="Default">
        <name>writeln</name>
        <full_name>writeln</full_name>
        <docblock line="46">
          <description>Writes a message to the output and adds a newline at the end.</description>
          <long-description></long-description>
          <tag line="46" name="param" description="The message as an array of lines of a single string" type="string|array" variable="$messages">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="46" name="param" description="The type of output" type="integer" variable="$type">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="46" name="api" description=""/>
        </docblock>
        <argument line="54">
          <name>$messages</name>
          <default></default>
          <type/>
        </argument>
        <argument line="54">
          <name>$type</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="63" package="Default">
        <name>setVerbosity</name>
        <full_name>setVerbosity</full_name>
        <docblock line="56">
          <description>Sets the verbosity of the output.</description>
          <long-description></long-description>
          <tag line="56" name="param" description="The level of verbosity" type="integer" variable="$level">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="56" name="api" description=""/>
        </docblock>
        <argument line="63">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="72" package="Default">
        <name>getVerbosity</name>
        <full_name>getVerbosity</full_name>
        <docblock line="65">
          <description>Gets the current verbosity of the output.</description>
          <long-description></long-description>
          <tag line="65" name="return" description="The current level of verbosity" type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="65" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="81" package="Default">
        <name>setDecorated</name>
        <full_name>setDecorated</full_name>
        <docblock line="74">
          <description>Sets the decorated flag.</description>
          <long-description></long-description>
          <tag line="74" name="param" description="Whether to decorate the messages or not" type="Boolean" variable="$decorated">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="74" name="api" description=""/>
        </docblock>
        <argument line="81">
          <name>$decorated</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="90" package="Default">
        <name>isDecorated</name>
        <full_name>isDecorated</full_name>
        <docblock line="83">
          <description>Gets the decorated flag.</description>
          <long-description></long-description>
          <tag line="83" name="return" description="true if the output will decorate messages, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="83" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="99" package="Default">
        <name>setFormatter</name>
        <full_name>setFormatter</full_name>
        <docblock line="92">
          <description>Sets output formatter.</description>
          <long-description></long-description>
          <tag line="92" name="param" description="" type="\Symfony\Component\Console\Formatter\OutputFormatterInterface" variable="$formatter">
            <type by_reference="false">\Symfony\Component\Console\Formatter\OutputFormatterInterface</type>
          </tag>
          <tag line="92" name="api" description=""/>
        </docblock>
        <argument line="99">
          <name>$formatter</name>
          <default></default>
          <type>\Symfony\Component\Console\Formatter\OutputFormatterInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="108" package="Default">
        <name>getFormatter</name>
        <full_name>getFormatter</full_name>
        <docblock line="101">
          <description>Returns current output formatter instance.</description>
          <long-description></long-description>
          <tag line="101" name="return" description="" type="\Symfony\Component\Console\Formatter\OutputFormatterInterface">
            <type by_reference="false">\Symfony\Component\Console\Formatter\OutputFormatterInterface</type>
          </tag>
          <tag line="101" name="api" description=""/>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Output/OutputInterface.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Output/ConsoleOutput.php" hash="f295ed90b57de910b926adf02281f69a" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Output" line="33" package="Default">
      <extends>\Symfony\Component\Console\Output\StreamOutput</extends>
      <implements>\Symfony\Component\Console\Output\ConsoleOutputInterface</implements>
      <name>ConsoleOutput</name>
      <full_name>\Symfony\Component\Console\Output\ConsoleOutput</full_name>
      <docblock line="18">
        <description>ConsoleOutput is the default class for all CLI output.</description>
        <long-description>&lt;p&gt;It uses STDOUT.&lt;/p&gt;

&lt;p&gt;This class is a convenient wrapper around &lt;code&gt;StreamOutput&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$output = new ConsoleOutput();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is equivalent to:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$output = new StreamOutput(fopen('php://stdout', 'w'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="18" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="18" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="private" line="35" namespace="Symfony\Component\Console\Output" package="Default">
        <name>$stderr</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="47" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="37">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="37" name="param" description="The verbosity level (self::VERBOSITY_QUIET, self::VERBOSITY_NORMAL,&#10;                                  self::VERBOSITY_VERBOSE)" type="integer" variable="$verbosity">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="37" name="param" description="Whether to decorate messages or not (null for auto-guessing)" type="Boolean" variable="$decorated">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="37" name="param" description="Output formatter instance" type="\Symfony\Component\Console\Formatter\OutputFormatter" variable="$formatter">
            <type by_reference="false">\Symfony\Component\Console\Formatter\OutputFormatter</type>
          </tag>
          <tag line="37" name="api" description=""/>
        </docblock>
        <argument line="47">
          <name>$verbosity</name>
          <default>self::VERBOSITY_NORMAL</default>
          <type/>
        </argument>
        <argument line="47">
          <name>$decorated</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="47">
          <name>$formatter</name>
          <default>null</default>
          <type>\Symfony\Component\Console\Formatter\OutputFormatterInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="53" package="Default">
        <name>setDecorated</name>
        <full_name>setDecorated</full_name>
        <argument line="53">
          <name>$decorated</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="59" package="Default">
        <name>setFormatter</name>
        <full_name>setFormatter</full_name>
        <argument line="59">
          <name>$formatter</name>
          <default></default>
          <type>\Symfony\Component\Console\Formatter\OutputFormatterInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="65" package="Default">
        <name>setVerbosity</name>
        <full_name>setVerbosity</full_name>
        <argument line="65">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="74" package="Default">
        <name>getErrorOutput</name>
        <full_name>getErrorOutput</full_name>
        <docblock line="71">
          <description></description>
          <long-description></long-description>
          <tag line="71" name="return" description="" type="\Symfony\Component\Console\Output\OutputInterface">
            <type by_reference="false">\Symfony\Component\Console\Output\OutputInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="79" package="Default">
        <name>setErrorOutput</name>
        <full_name>setErrorOutput</full_name>
        <argument line="79">
          <name>$error</name>
          <default></default>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Output/ConsoleOutput.php</error>
      <error line="35" code="50018">No DocBlock was found for property $stderr</error>
      <error line="37" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $formatter in __construct()</error>
      <error line="53" code="50010">No DocBlock was found for method setDecorated()</error>
      <error line="59" code="50010">No DocBlock was found for method setFormatter()</error>
      <error line="65" code="50010">No DocBlock was found for method setVerbosity()</error>
      <error line="71" code="50012">No short description for method getErrorOutput()</error>
      <error line="79" code="50010">No DocBlock was found for method setErrorOutput()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Output/ConsoleOutputInterface.php" hash="5b15a764d733f1f66ea1b9c65fa0a757" package="Default">
    <interface namespace="Symfony\Component\Console\Output" line="22" package="Default">
      <name>ConsoleOutputInterface</name>
      <full_name>\Symfony\Component\Console\Output\ConsoleOutputInterface</full_name>
      <extends>\Symfony\Component\Console\Output\OutputInterface</extends>
      <docblock line="16">
        <description>ConsoleOutputInterface is the interface implemented by ConsoleOutput class.</description>
        <long-description>&lt;p&gt;This adds information about stderr output stream.&lt;/p&gt;</long-description>
        <tag line="16" name="author" description="Dariusz Górecki &lt;darek.krk@gmail.com&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="27" package="Default">
        <name>getErrorOutput</name>
        <full_name>getErrorOutput</full_name>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
          <tag line="24" name="return" description="" type="\Symfony\Component\Console\Output\OutputInterface">
            <type by_reference="false">\Symfony\Component\Console\Output\OutputInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Output" line="29" package="Default">
        <name>setErrorOutput</name>
        <full_name>setErrorOutput</full_name>
        <argument line="29">
          <name>$error</name>
          <default></default>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Output/ConsoleOutputInterface.php</error>
      <error line="24" code="50012">No short description for method getErrorOutput()</error>
      <error line="29" code="50010">No DocBlock was found for method setErrorOutput()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Shell.php" hash="1f209571acc94b09fb4a531a24bccdfc" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console" line="29" package="Default">
      <extends/>
      <name>Shell</name>
      <full_name>\Symfony\Component\Console\Shell</full_name>
      <docblock line="20">
        <description>A Shell wraps an Application to add shell capabilities to it.</description>
        <long-description>&lt;p&gt;Support for history and completion only works with a PHP compiled
with readline support (either --with-readline or --with-libedit)&lt;/p&gt;</long-description>
        <tag line="20" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="20" name="author" description="Martin Hasoň &lt;martin.hason@gmail.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="31" namespace="Symfony\Component\Console" package="Default">
        <name>$application</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="Symfony\Component\Console" package="Default">
        <name>$history</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="33" namespace="Symfony\Component\Console" package="Default">
        <name>$output</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="Symfony\Component\Console" package="Default">
        <name>$hasReadline</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="Symfony\Component\Console" package="Default">
        <name>$prompt</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="36" namespace="Symfony\Component\Console" package="Default">
        <name>$processIsolation</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="46" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="38">
          <description>Constructor.</description>
          <long-description>&lt;p&gt;If there is no readline support for the current PHP executable
a \RuntimeException exception is thrown.&lt;/p&gt;</long-description>
          <tag line="38" name="param" description="An application instance" type="\Symfony\Component\Console\Application" variable="$application">
            <type by_reference="false">\Symfony\Component\Console\Application</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$application</name>
          <default></default>
          <type>\Symfony\Component\Console\Application</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="59" package="Default">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="56">
          <description>Runs the shell.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console" line="130" package="Default">
        <name>getHeader</name>
        <full_name>getHeader</full_name>
        <docblock line="125">
          <description>Returns the shell header.</description>
          <long-description></long-description>
          <tag line="125" name="return" description="The header string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console" line="150" package="Default">
        <name>autocompleter</name>
        <full_name>autocompleter</full_name>
        <docblock line="144">
          <description>Tries to return autocompletion for the current entered text.</description>
          <long-description></long-description>
          <tag line="144" name="param" description="The last segment of the entered text" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="144" name="return" description="A list of guessed strings or true" type="Boolean|array">
            <type by_reference="false">Boolean</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console" line="184" package="Default">
        <name>readline</name>
        <full_name>readline</full_name>
        <docblock line="179">
          <description>Reads a single line from standard input.</description>
          <long-description></long-description>
          <tag line="179" name="return" description="The single line from standard input" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="197" package="Default">
        <name>getProcessIsolation</name>
        <full_name>getProcessIsolation</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="202" package="Default">
        <name>setProcessIsolation</name>
        <full_name>setProcessIsolation</full_name>
        <argument line="202">
          <name>$processIsolation</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Shell.php</error>
      <error line="31" code="50018">No DocBlock was found for property $application</error>
      <error line="32" code="50018">No DocBlock was found for property $history</error>
      <error line="33" code="50018">No DocBlock was found for property $output</error>
      <error line="34" code="50018">No DocBlock was found for property $hasReadline</error>
      <error line="35" code="50018">No DocBlock was found for property $prompt</error>
      <error line="36" code="50018">No DocBlock was found for property $processIsolation</error>
      <error line="197" code="50010">No DocBlock was found for method getProcessIsolation()</error>
      <error line="202" code="50010">No DocBlock was found for method setProcessIsolation()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Command/Command.php" hash="d85d13a8e9ce016b4faf2bacce5acff8" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Command" line="29" package="Default">
      <extends/>
      <name>Command</name>
      <full_name>\Symfony\Component\Console\Command\Command</full_name>
      <docblock line="22">
        <description>Base class for all commands.</description>
        <long-description></long-description>
        <tag line="22" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="22" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="private" line="31" namespace="Symfony\Component\Console\Command" package="Default">
        <name>$application</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="Symfony\Component\Console\Command" package="Default">
        <name>$name</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="33" namespace="Symfony\Component\Console\Command" package="Default">
        <name>$aliases</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="Symfony\Component\Console\Command" package="Default">
        <name>$definition</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="Symfony\Component\Console\Command" package="Default">
        <name>$help</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="36" namespace="Symfony\Component\Console\Command" package="Default">
        <name>$description</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="37" namespace="Symfony\Component\Console\Command" package="Default">
        <name>$ignoreValidationErrors</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="38" namespace="Symfony\Component\Console\Command" package="Default">
        <name>$applicationDefinitionMerged</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="39" namespace="Symfony\Component\Console\Command" package="Default">
        <name>$code</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="40" namespace="Symfony\Component\Console\Command" package="Default">
        <name>$synopsis</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="41" namespace="Symfony\Component\Console\Command" package="Default">
        <name>$helperSet</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="52" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="43">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="43" name="param" description="The name of the command" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="throws" description="When the command name is empty" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
          <tag line="43" name="api" description=""/>
        </docblock>
        <argument line="52">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="75" package="Default">
        <name>ignoreValidationErrors</name>
        <full_name>ignoreValidationErrors</full_name>
        <docblock line="70">
          <description>Ignores validation errors.</description>
          <long-description>&lt;p&gt;This is mainly useful for the help command.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="87" package="Default">
        <name>setApplication</name>
        <full_name>setApplication</full_name>
        <docblock line="80">
          <description>Sets the application instance for this command.</description>
          <long-description></long-description>
          <tag line="80" name="param" description="An Application instance" type="\Symfony\Component\Console\Application" variable="$application">
            <type by_reference="false">\Symfony\Component\Console\Application</type>
          </tag>
          <tag line="80" name="api" description=""/>
        </docblock>
        <argument line="87">
          <name>$application</name>
          <default>null</default>
          <type>\Symfony\Component\Console\Application</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="102" package="Default">
        <name>setHelperSet</name>
        <full_name>setHelperSet</full_name>
        <docblock line="97">
          <description>Sets the helper set.</description>
          <long-description></long-description>
          <tag line="97" name="param" description="A HelperSet instance" type="\Symfony\Component\Console\Helper\HelperSet" variable="$helperSet">
            <type by_reference="false">\Symfony\Component\Console\Helper\HelperSet</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$helperSet</name>
          <default></default>
          <type>\Symfony\Component\Console\Helper\HelperSet</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="112" package="Default">
        <name>getHelperSet</name>
        <full_name>getHelperSet</full_name>
        <docblock line="107">
          <description>Gets the helper set.</description>
          <long-description></long-description>
          <tag line="107" name="return" description="A HelperSet instance" type="\Symfony\Component\Console\Helper\HelperSet">
            <type by_reference="false">\Symfony\Component\Console\Helper\HelperSet</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="124" package="Default">
        <name>getApplication</name>
        <full_name>getApplication</full_name>
        <docblock line="117">
          <description>Gets the application instance for this command.</description>
          <long-description></long-description>
          <tag line="117" name="return" description="An Application instance" type="\Symfony\Component\Console\Application">
            <type by_reference="false">\Symfony\Component\Console\Application</type>
          </tag>
          <tag line="117" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="137" package="Default">
        <name>isEnabled</name>
        <full_name>isEnabled</full_name>
        <docblock line="129">
          <description>Checks whether the command is enabled or not in the current environment</description>
          <long-description>&lt;p&gt;Override this to check for x or y and return false if the command can not
run properly under the current conditions.&lt;/p&gt;</long-description>
          <tag line="129" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console\Command" line="145" package="Default">
        <name>configure</name>
        <full_name>configure</full_name>
        <docblock line="142">
          <description>Configures the current command.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console\Command" line="165" package="Default">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="149">
          <description>Executes the current command.</description>
          <long-description>&lt;p&gt;This method is not abstract because you can use this class
as a concrete class. In this case, instead of defining the
execute() method, you set the code to execute by passing
a Closure to the setCode() method.&lt;/p&gt;</long-description>
          <tag line="149" name="param" description="An InputInterface instance" type="\Symfony\Component\Console\Input\InputInterface" variable="$input">
            <type by_reference="false">\Symfony\Component\Console\Input\InputInterface</type>
          </tag>
          <tag line="149" name="param" description="An OutputInterface instance" type="\Symfony\Component\Console\Output\OutputInterface" variable="$output">
            <type by_reference="false">\Symfony\Component\Console\Output\OutputInterface</type>
          </tag>
          <tag line="149" name="return" description="0 if everything went fine, or an error code" type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="149" name="throws" description="When this abstract method is not implemented" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
          <tag line="149" name="see" description="\Symfony\Component\Console\Command\setCode()" refers="\Symfony\Component\Console\Command\setCode()"/>
        </docblock>
        <argument line="165">
          <name>$input</name>
          <default></default>
          <type>\Symfony\Component\Console\Input\InputInterface</type>
        </argument>
        <argument line="165">
          <name>$output</name>
          <default></default>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console\Command" line="176" package="Default">
        <name>interact</name>
        <full_name>interact</full_name>
        <docblock line="170">
          <description>Interacts with the user.</description>
          <long-description></long-description>
          <tag line="170" name="param" description="An InputInterface instance" type="\Symfony\Component\Console\Input\InputInterface" variable="$input">
            <type by_reference="false">\Symfony\Component\Console\Input\InputInterface</type>
          </tag>
          <tag line="170" name="param" description="An OutputInterface instance" type="\Symfony\Component\Console\Output\OutputInterface" variable="$output">
            <type by_reference="false">\Symfony\Component\Console\Output\OutputInterface</type>
          </tag>
        </docblock>
        <argument line="176">
          <name>$input</name>
          <default></default>
          <type>\Symfony\Component\Console\Input\InputInterface</type>
        </argument>
        <argument line="176">
          <name>$output</name>
          <default></default>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console\Command" line="189" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="180">
          <description>Initializes the command just after the input has been validated.</description>
          <long-description>&lt;p&gt;This is mainly useful when a lot of commands extends one main command
where some things need to be initialized based on the input arguments and options.&lt;/p&gt;</long-description>
          <tag line="180" name="param" description="An InputInterface instance" type="\Symfony\Component\Console\Input\InputInterface" variable="$input">
            <type by_reference="false">\Symfony\Component\Console\Input\InputInterface</type>
          </tag>
          <tag line="180" name="param" description="An OutputInterface instance" type="\Symfony\Component\Console\Output\OutputInterface" variable="$output">
            <type by_reference="false">\Symfony\Component\Console\Output\OutputInterface</type>
          </tag>
        </docblock>
        <argument line="189">
          <name>$input</name>
          <default></default>
          <type>\Symfony\Component\Console\Input\InputInterface</type>
        </argument>
        <argument line="189">
          <name>$output</name>
          <default></default>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="208" package="Default">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="193">
          <description>Runs the command.</description>
          <long-description>&lt;p&gt;The code to execute is either defined directly with the
setCode() method or by overriding the execute() method
in a sub-class.&lt;/p&gt;</long-description>
          <tag line="193" name="param" description="An InputInterface instance" type="\Symfony\Component\Console\Input\InputInterface" variable="$input">
            <type by_reference="false">\Symfony\Component\Console\Input\InputInterface</type>
          </tag>
          <tag line="193" name="param" description="An OutputInterface instance" type="\Symfony\Component\Console\Output\OutputInterface" variable="$output">
            <type by_reference="false">\Symfony\Component\Console\Output\OutputInterface</type>
          </tag>
          <tag line="193" name="see" description="\Symfony\Component\Console\Command\setCode()" refers="\Symfony\Component\Console\Command\setCode()"/>
          <tag line="193" name="see" description="\Symfony\Component\Console\Command\execute()" refers="\Symfony\Component\Console\Command\execute()"/>
          <tag line="193" name="api" description=""/>
        </docblock>
        <argument line="208">
          <name>$input</name>
          <default></default>
          <type>\Symfony\Component\Console\Input\InputInterface</type>
        </argument>
        <argument line="208">
          <name>$output</name>
          <default></default>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="254" package="Default">
        <name>setCode</name>
        <full_name>setCode</full_name>
        <docblock line="240">
          <description>Sets the code to execute when running this command.</description>
          <long-description>&lt;p&gt;If this method is used, it overrides the code defined
in the execute() method.&lt;/p&gt;</long-description>
          <tag line="240" name="param" description="A \Closure" type="\Closure" variable="$code">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="240" name="return" description="The current instance" type="\Symfony\Component\Console\Command\Command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
          <tag line="240" name="see" description="\Symfony\Component\Console\Command\execute()" refers="\Symfony\Component\Console\Command\execute()"/>
          <tag line="240" name="api" description=""/>
        </docblock>
        <argument line="254">
          <name>$code</name>
          <default></default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Command" line="264" package="Default">
        <name>mergeApplicationDefinition</name>
        <full_name>mergeApplicationDefinition</full_name>
        <docblock line="261">
          <description>Merges the application definition with the command definition.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="288" package="Default">
        <name>setDefinition</name>
        <full_name>setDefinition</full_name>
        <docblock line="279">
          <description>Sets an array of argument and option instances.</description>
          <long-description></long-description>
          <tag line="279" name="param" description="An array of argument and option instances or a definition instance" type="array|\Symfony\Component\Console\Input\InputDefinition" variable="$definition">
            <type by_reference="false">array</type>
            <type by_reference="false">\Symfony\Component\Console\Input\InputDefinition</type>
          </tag>
          <tag line="279" name="return" description="The current instance" type="\Symfony\Component\Console\Command\Command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
          <tag line="279" name="api" description=""/>
        </docblock>
        <argument line="288">
          <name>$definition</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="308" package="Default">
        <name>getDefinition</name>
        <full_name>getDefinition</full_name>
        <docblock line="301">
          <description>Gets the InputDefinition attached to this Command.</description>
          <long-description></long-description>
          <tag line="301" name="return" description="An InputDefinition instance" type="\Symfony\Component\Console\Input\InputDefinition">
            <type by_reference="false">\Symfony\Component\Console\Input\InputDefinition</type>
          </tag>
          <tag line="301" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console\Command" line="321" package="Default">
        <name>getNativeDefinition</name>
        <full_name>getNativeDefinition</full_name>
        <docblock line="313">
          <description>Gets the InputDefinition to be used to create XML and Text representations of this Command.</description>
          <long-description>&lt;p&gt;Can be overridden to provide the original command representation when it would otherwise
be changed by merging with the application InputDefinition.&lt;/p&gt;</long-description>
          <tag line="313" name="return" description="An InputDefinition instance" type="\Symfony\Component\Console\Input\InputDefinition">
            <type by_reference="false">\Symfony\Component\Console\Input\InputDefinition</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="338" package="Default">
        <name>addArgument</name>
        <full_name>addArgument</full_name>
        <docblock line="326">
          <description>Adds an argument.</description>
          <long-description></long-description>
          <tag line="326" name="param" description="The argument name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="326" name="param" description="The argument mode: InputArgument::REQUIRED or InputArgument::OPTIONAL" type="integer" variable="$mode">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="326" name="param" description="A description text" type="string" variable="$description">
            <type by_reference="false">string</type>
          </tag>
          <tag line="326" name="param" description="The default value (for InputArgument::OPTIONAL mode only)" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="326" name="return" description="The current instance" type="\Symfony\Component\Console\Command\Command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
          <tag line="326" name="api" description=""/>
        </docblock>
        <argument line="338">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="338">
          <name>$mode</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="338">
          <name>$description</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="338">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="358" package="Default">
        <name>addOption</name>
        <full_name>addOption</full_name>
        <docblock line="345">
          <description>Adds an option.</description>
          <long-description></long-description>
          <tag line="345" name="param" description="The option name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="345" name="param" description="The shortcut (can be null)" type="string" variable="$shortcut">
            <type by_reference="false">string</type>
          </tag>
          <tag line="345" name="param" description="The option mode: One of the InputOption::VALUE_* constants" type="integer" variable="$mode">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="345" name="param" description="A description text" type="string" variable="$description">
            <type by_reference="false">string</type>
          </tag>
          <tag line="345" name="param" description="The default value (must be null for InputOption::VALUE_REQUIRED or InputOption::VALUE_NONE)" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="345" name="return" description="The current instance" type="\Symfony\Component\Console\Command\Command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
          <tag line="345" name="api" description=""/>
        </docblock>
        <argument line="358">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="358">
          <name>$shortcut</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="358">
          <name>$mode</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="358">
          <name>$description</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="358">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="381" package="Default">
        <name>setName</name>
        <full_name>setName</full_name>
        <docblock line="365">
          <description>Sets the name of the command.</description>
          <long-description>&lt;p&gt;This method can set both the namespace and the name if
you separate them by a colon (:)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$command-&amp;gt;setName('foo:bar');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="365" name="param" description="The command name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="365" name="return" description="The current instance" type="\Symfony\Component\Console\Command\Command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
          <tag line="365" name="throws" description="When command name given is empty" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="365" name="api" description=""/>
        </docblock>
        <argument line="381">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="397" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="390">
          <description>Returns the command name.</description>
          <long-description></long-description>
          <tag line="390" name="return" description="The command name" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="390" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="411" package="Default">
        <name>setDescription</name>
        <full_name>setDescription</full_name>
        <docblock line="402">
          <description>Sets the description for the command.</description>
          <long-description></long-description>
          <tag line="402" name="param" description="The description for the command" type="string" variable="$description">
            <type by_reference="false">string</type>
          </tag>
          <tag line="402" name="return" description="The current instance" type="\Symfony\Component\Console\Command\Command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
          <tag line="402" name="api" description=""/>
        </docblock>
        <argument line="411">
          <name>$description</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="425" package="Default">
        <name>getDescription</name>
        <full_name>getDescription</full_name>
        <docblock line="418">
          <description>Returns the description for the command.</description>
          <long-description></long-description>
          <tag line="418" name="return" description="The description for the command" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="418" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="439" package="Default">
        <name>setHelp</name>
        <full_name>setHelp</full_name>
        <docblock line="430">
          <description>Sets the help for the command.</description>
          <long-description></long-description>
          <tag line="430" name="param" description="The help for the command" type="string" variable="$help">
            <type by_reference="false">string</type>
          </tag>
          <tag line="430" name="return" description="The current instance" type="\Symfony\Component\Console\Command\Command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
          <tag line="430" name="api" description=""/>
        </docblock>
        <argument line="439">
          <name>$help</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="453" package="Default">
        <name>getHelp</name>
        <full_name>getHelp</full_name>
        <docblock line="446">
          <description>Returns the help for the command.</description>
          <long-description></long-description>
          <tag line="446" name="return" description="The help for the command" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="446" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="464" package="Default">
        <name>getProcessedHelp</name>
        <full_name>getProcessedHelp</full_name>
        <docblock line="458">
          <description>Returns the processed help for the command replacing the %command.name% and
%command.full_name% patterns with the real values dynamically.</description>
          <long-description></long-description>
          <tag line="458" name="return" description="The processed help for the command" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="489" package="Default">
        <name>setAliases</name>
        <full_name>setAliases</full_name>
        <docblock line="480">
          <description>Sets the aliases for the command.</description>
          <long-description></long-description>
          <tag line="480" name="param" description="An array of aliases for the command" type="array" variable="$aliases">
            <type by_reference="false">array</type>
          </tag>
          <tag line="480" name="return" description="The current instance" type="\Symfony\Component\Console\Command\Command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
          <tag line="480" name="api" description=""/>
        </docblock>
        <argument line="489">
          <name>$aliases</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="507" package="Default">
        <name>getAliases</name>
        <full_name>getAliases</full_name>
        <docblock line="500">
          <description>Returns the aliases for the command.</description>
          <long-description></long-description>
          <tag line="500" name="return" description="An array of aliases for the command" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="500" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="517" package="Default">
        <name>getSynopsis</name>
        <full_name>getSynopsis</full_name>
        <docblock line="512">
          <description>Returns the synopsis for the command.</description>
          <long-description></long-description>
          <tag line="512" name="return" description="The synopsis" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="537" package="Default">
        <name>getHelper</name>
        <full_name>getHelper</full_name>
        <docblock line="526">
          <description>Gets a helper instance by name.</description>
          <long-description></long-description>
          <tag line="526" name="param" description="The helper name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="526" name="return" description="The helper value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="526" name="throws" description="if the helper is not defined" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="526" name="api" description=""/>
        </docblock>
        <argument line="537">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="547" package="Default">
        <name>asText</name>
        <full_name>asText</full_name>
        <docblock line="542">
          <description>Returns a text representation of the command.</description>
          <long-description></long-description>
          <tag line="542" name="return" description="A string representing the command" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="576" package="Default">
        <name>asXml</name>
        <full_name>asXml</full_name>
        <docblock line="569">
          <description>Returns an XML representation of the command.</description>
          <long-description></long-description>
          <tag line="569" name="param" description="Whether to return a DOM or an XML string" type="Boolean" variable="$asDom">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="569" name="return" description="An XML string representing the command" type="string|\Symfony\Component\Console\Command\DOMDocument">
            <type by_reference="false">string</type>
            <type by_reference="false">\Symfony\Component\Console\Command\DOMDocument</type>
          </tag>
        </docblock>
        <argument line="576">
          <name>$asDom</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Command" line="606" package="Default">
        <name>validateName</name>
        <full_name>validateName</full_name>
        <argument line="606">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Command/Command.php</error>
      <error line="31" code="50018">No DocBlock was found for property $application</error>
      <error line="32" code="50018">No DocBlock was found for property $name</error>
      <error line="33" code="50018">No DocBlock was found for property $aliases</error>
      <error line="34" code="50018">No DocBlock was found for property $definition</error>
      <error line="35" code="50018">No DocBlock was found for property $help</error>
      <error line="36" code="50018">No DocBlock was found for property $description</error>
      <error line="37" code="50018">No DocBlock was found for property $ignoreValidationErrors</error>
      <error line="38" code="50018">No DocBlock was found for property $applicationDefinitionMerged</error>
      <error line="39" code="50018">No DocBlock was found for property $code</error>
      <error line="40" code="50018">No DocBlock was found for property $synopsis</error>
      <error line="41" code="50018">No DocBlock was found for property $helperSet</error>
      <error line="606" code="50010">No DocBlock was found for method validateName()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Command/ListCommand.php" hash="d68b610a5b7718da00fea2754c27fd01" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Command" line="27" package="Default">
      <extends>\Symfony\Component\Console\Command\Command</extends>
      <name>ListCommand</name>
      <full_name>\Symfony\Component\Console\Command\ListCommand</full_name>
      <docblock line="22">
        <description>ListCommand displays the list of all available commands for the application.</description>
        <long-description></long-description>
        <tag line="22" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console\Command" line="32" package="Default">
        <name>configure</name>
        <full_name>configure</full_name>
        <docblock line="29">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console\Command" line="62" package="Default">
        <name>getNativeDefinition</name>
        <full_name>getNativeDefinition</full_name>
        <docblock line="59">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console\Command" line="70" package="Default">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="67">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="70">
          <name>$input</name>
          <default></default>
          <type>\Symfony\Component\Console\Input\InputInterface</type>
        </argument>
        <argument line="70">
          <name>$output</name>
          <default></default>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Command" line="79" package="Default">
        <name>createDefinition</name>
        <full_name>createDefinition</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Command/ListCommand.php</error>
      <error line="67" code="50015">Argument $input is missing from the Docblock of execute()</error>
      <error line="67" code="50015">Argument $output is missing from the Docblock of execute()</error>
      <error line="79" code="50010">No DocBlock was found for method createDefinition()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Command/HelpCommand.php" hash="2bfcb086355c77d0113c0e9a0fa97224" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Command" line="26" package="Default">
      <extends>\Symfony\Component\Console\Command\Command</extends>
      <name>HelpCommand</name>
      <full_name>\Symfony\Component\Console\Command\HelpCommand</full_name>
      <docblock line="21">
        <description>HelpCommand displays the help for a given command.</description>
        <long-description></long-description>
        <tag line="21" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="28" namespace="Symfony\Component\Console\Command" package="Default">
        <name>$command</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console\Command" line="33" package="Default">
        <name>configure</name>
        <full_name>configure</full_name>
        <docblock line="30">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Command" line="62" package="Default">
        <name>setCommand</name>
        <full_name>setCommand</full_name>
        <docblock line="57">
          <description>Sets the command</description>
          <long-description></long-description>
          <tag line="57" name="param" description="The command to set" type="\Symfony\Component\Console\Command\Command" variable="$command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$command</name>
          <default></default>
          <type>\Symfony\Component\Console\Command\Command</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console\Command" line="70" package="Default">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="67">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="70">
          <name>$input</name>
          <default></default>
          <type>\Symfony\Component\Console\Input\InputInterface</type>
        </argument>
        <argument line="70">
          <name>$output</name>
          <default></default>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Command/HelpCommand.php</error>
      <error line="28" code="50018">No DocBlock was found for property $command</error>
      <error line="67" code="50015">Argument $input is missing from the Docblock of execute()</error>
      <error line="67" code="50015">Argument $output is missing from the Docblock of execute()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Formatter/OutputFormatterInterface.php" hash="8a22ba2284e1d2169da417efe61b9c52" package="Default">
    <interface namespace="Symfony\Component\Console\Formatter" line="21" package="Default">
      <name>OutputFormatterInterface</name>
      <full_name>\Symfony\Component\Console\Formatter\OutputFormatterInterface</full_name>
      <docblock line="14">
        <description>Formatter interface for console output.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Konstantin Kudryashov &lt;ever.zet@gmail.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="30" package="Default">
        <name>setDecorated</name>
        <full_name>setDecorated</full_name>
        <docblock line="23">
          <description>Sets the decorated flag.</description>
          <long-description></long-description>
          <tag line="23" name="param" description="Whether to decorate the messages or not" type="Boolean" variable="$decorated">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="23" name="api" description=""/>
        </docblock>
        <argument line="30">
          <name>$decorated</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="39" package="Default">
        <name>isDecorated</name>
        <full_name>isDecorated</full_name>
        <docblock line="32">
          <description>Gets the decorated flag.</description>
          <long-description></long-description>
          <tag line="32" name="return" description="true if the output will decorate messages, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="32" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="49" package="Default">
        <name>setStyle</name>
        <full_name>setStyle</full_name>
        <docblock line="41">
          <description>Sets a new style.</description>
          <long-description></long-description>
          <tag line="41" name="param" description="The style name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="41" name="param" description="The style instance" type="\Symfony\Component\Console\Formatter\OutputFormatterStyleInterface" variable="$style">
            <type by_reference="false">\Symfony\Component\Console\Formatter\OutputFormatterStyleInterface</type>
          </tag>
          <tag line="41" name="api" description=""/>
        </docblock>
        <argument line="49">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="49">
          <name>$style</name>
          <default></default>
          <type>\Symfony\Component\Console\Formatter\OutputFormatterStyleInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="60" package="Default">
        <name>hasStyle</name>
        <full_name>hasStyle</full_name>
        <docblock line="51">
          <description>Checks if output formatter has style with specified name.</description>
          <long-description></long-description>
          <tag line="51" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="51" name="api" description=""/>
        </docblock>
        <argument line="60">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="71" package="Default">
        <name>getStyle</name>
        <full_name>getStyle</full_name>
        <docblock line="62">
          <description>Gets style options from style with specified name.</description>
          <long-description></long-description>
          <tag line="62" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="62" name="return" description="" type="\Symfony\Component\Console\Formatter\OutputFormatterStyleInterface">
            <type by_reference="false">\Symfony\Component\Console\Formatter\OutputFormatterStyleInterface</type>
          </tag>
          <tag line="62" name="api" description=""/>
        </docblock>
        <argument line="71">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="82" package="Default">
        <name>format</name>
        <full_name>format</full_name>
        <docblock line="73">
          <description>Formats a message according to the given styles.</description>
          <long-description></long-description>
          <tag line="73" name="param" description="The message to style" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="return" description="The styled message" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="api" description=""/>
        </docblock>
        <argument line="82">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Formatter/OutputFormatterInterface.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Formatter/OutputFormatter.php" hash="0d2eb1ea4228b674c2319d34040ec9f4" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Formatter" line="21" package="Default">
      <extends/>
      <implements>\Symfony\Component\Console\Formatter\OutputFormatterInterface</implements>
      <name>OutputFormatter</name>
      <full_name>\Symfony\Component\Console\Formatter\OutputFormatter</full_name>
      <docblock line="14">
        <description>Formatter class for console output.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Konstantin Kudryashov &lt;ever.zet@gmail.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <constant namespace="Symfony\Component\Console\Formatter" line="26" package="Default">
        <name>FORMAT_PATTERN</name>
        <full_name>FORMAT_PATTERN</full_name>
        <value>'#&lt;([a-z][a-z0-9_=;-]+)&gt;(.*?)&lt;/\\1?&gt;#is'</value>
        <docblock line="23">
          <description>The pattern to phrase the format.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="private" line="28" namespace="Symfony\Component\Console\Formatter" package="Default">
        <name>$decorated</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="29" namespace="Symfony\Component\Console\Formatter" package="Default">
        <name>$styles</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="39" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="31">
          <description>Initializes console output formatter.</description>
          <long-description></long-description>
          <tag line="31" name="param" description="Whether this formatter should actually decorate strings" type="Boolean" variable="$decorated">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="31" name="param" description="Array of &quot;name =&gt; FormatterStyle&quot; instances" type="array" variable="$styles">
            <type by_reference="false">array</type>
          </tag>
          <tag line="31" name="api" description=""/>
        </docblock>
        <argument line="39">
          <name>$decorated</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="39">
          <name>$styles</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="60" package="Default">
        <name>setDecorated</name>
        <full_name>setDecorated</full_name>
        <docblock line="53">
          <description>Sets the decorated flag.</description>
          <long-description></long-description>
          <tag line="53" name="param" description="Whether to decorate the messages or not" type="Boolean" variable="$decorated">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="53" name="api" description=""/>
        </docblock>
        <argument line="60">
          <name>$decorated</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="72" package="Default">
        <name>isDecorated</name>
        <full_name>isDecorated</full_name>
        <docblock line="65">
          <description>Gets the decorated flag.</description>
          <long-description></long-description>
          <tag line="65" name="return" description="true if the output will decorate messages, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="65" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="85" package="Default">
        <name>setStyle</name>
        <full_name>setStyle</full_name>
        <docblock line="77">
          <description>Sets a new style.</description>
          <long-description></long-description>
          <tag line="77" name="param" description="The style name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="param" description="The style instance" type="\Symfony\Component\Console\Formatter\OutputFormatterStyleInterface" variable="$style">
            <type by_reference="false">\Symfony\Component\Console\Formatter\OutputFormatterStyleInterface</type>
          </tag>
          <tag line="77" name="api" description=""/>
        </docblock>
        <argument line="85">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="85">
          <name>$style</name>
          <default></default>
          <type>\Symfony\Component\Console\Formatter\OutputFormatterStyleInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="99" package="Default">
        <name>hasStyle</name>
        <full_name>hasStyle</full_name>
        <docblock line="90">
          <description>Checks if output formatter has style with specified name.</description>
          <long-description></long-description>
          <tag line="90" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="90" name="api" description=""/>
        </docblock>
        <argument line="99">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="115" package="Default">
        <name>getStyle</name>
        <full_name>getStyle</full_name>
        <docblock line="104">
          <description>Gets style options from style with specified name.</description>
          <long-description></long-description>
          <tag line="104" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="104" name="return" description="" type="\Symfony\Component\Console\Formatter\OutputFormatterStyleInterface">
            <type by_reference="false">\Symfony\Component\Console\Formatter\OutputFormatterStyleInterface</type>
          </tag>
          <tag line="104" name="throws" description="When style isn't defined" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="104" name="api" description=""/>
        </docblock>
        <argument line="115">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="133" package="Default">
        <name>format</name>
        <full_name>format</full_name>
        <docblock line="124">
          <description>Formats a message according to the given styles.</description>
          <long-description></long-description>
          <tag line="124" name="param" description="The message to style" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="124" name="return" description="The styled message" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="124" name="api" description=""/>
        </docblock>
        <argument line="133">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Formatter" line="145" package="Default">
        <name>replaceStyle</name>
        <full_name>replaceStyle</full_name>
        <docblock line="138">
          <description>Replaces style of the output.</description>
          <long-description></long-description>
          <tag line="138" name="param" description="" type="array" variable="$match">
            <type by_reference="false">array</type>
          </tag>
          <tag line="138" name="return" description="The replaced style" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$match</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Formatter" line="171" package="Default">
        <name>createStyleFromString</name>
        <full_name>createStyleFromString</full_name>
        <docblock line="164">
          <description>Tries to create new style instance from string.</description>
          <long-description></long-description>
          <tag line="164" name="param" description="" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="164" name="return" description="false if string is not format string" type="\Symfony\Component\Console\Formatter\Symfony\Component\Console\Format\FormatterStyle|Boolean">
            <type by_reference="false">\Symfony\Component\Console\Formatter\Symfony\Component\Console\Format\FormatterStyle</type>
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Formatter/OutputFormatter.php</error>
      <error line="28" code="50018">No DocBlock was found for property $decorated</error>
      <error line="29" code="50018">No DocBlock was found for property $styles</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Formatter/OutputFormatterStyle.php" hash="e4cffa14122bb43bd0e845db4e95f5de" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Formatter" line="21" package="Default">
      <extends/>
      <implements>\Symfony\Component\Console\Formatter\OutputFormatterStyleInterface</implements>
      <name>OutputFormatterStyle</name>
      <full_name>\Symfony\Component\Console\Formatter\OutputFormatterStyle</full_name>
      <docblock line="14">
        <description>Formatter style class for defining styles.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Konstantin Kudryashov &lt;ever.zet@gmail.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <property final="false" static="true" visibility="private" line="23" namespace="Symfony\Component\Console\Formatter" package="Default">
        <name>$availableForegroundColors</name>
        <default>array('black' =&gt; 30, 'red' =&gt; 31, 'green' =&gt; 32, 'yellow' =&gt; 33, 'blue' =&gt; 34, 'magenta' =&gt; 35, 'cyan' =&gt; 36, 'white' =&gt; 37)</default>
      </property>
      <property final="false" static="true" visibility="private" line="33" namespace="Symfony\Component\Console\Formatter" package="Default">
        <name>$availableBackgroundColors</name>
        <default>array('black' =&gt; 40, 'red' =&gt; 41, 'green' =&gt; 42, 'yellow' =&gt; 43, 'blue' =&gt; 44, 'magenta' =&gt; 45, 'cyan' =&gt; 46, 'white' =&gt; 47)</default>
      </property>
      <property final="false" static="true" visibility="private" line="43" namespace="Symfony\Component\Console\Formatter" package="Default">
        <name>$availableOptions</name>
        <default>array('bold' =&gt; 1, 'underscore' =&gt; 4, 'blink' =&gt; 5, 'reverse' =&gt; 7, 'conceal' =&gt; 8)</default>
      </property>
      <property final="false" static="false" visibility="private" line="51" namespace="Symfony\Component\Console\Formatter" package="Default">
        <name>$foreground</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="52" namespace="Symfony\Component\Console\Formatter" package="Default">
        <name>$background</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="53" namespace="Symfony\Component\Console\Formatter" package="Default">
        <name>$options</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="64" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="55">
          <description>Initializes output formatter style.</description>
          <long-description></long-description>
          <tag line="55" name="param" description="style foreground color name" type="string" variable="$foreground">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="param" description="style background color name" type="string" variable="$background">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="param" description="style options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="55" name="api" description=""/>
        </docblock>
        <argument line="64">
          <name>$foreground</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="64">
          <name>$background</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="64">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="86" package="Default">
        <name>setForeground</name>
        <full_name>setForeground</full_name>
        <docblock line="77">
          <description>Sets style foreground color.</description>
          <long-description></long-description>
          <tag line="77" name="param" description="color name" type="string" variable="$color">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="throws" description="When the color name isn't defined" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="77" name="api" description=""/>
        </docblock>
        <argument line="86">
          <name>$color</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="114" package="Default">
        <name>setBackground</name>
        <full_name>setBackground</full_name>
        <docblock line="105">
          <description>Sets style background color.</description>
          <long-description></long-description>
          <tag line="105" name="param" description="color name" type="string" variable="$color">
            <type by_reference="false">string</type>
          </tag>
          <tag line="105" name="throws" description="When the color name isn't defined" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="105" name="api" description=""/>
        </docblock>
        <argument line="114">
          <name>$color</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="142" package="Default">
        <name>setOption</name>
        <full_name>setOption</full_name>
        <docblock line="133">
          <description>Sets some specific style option.</description>
          <long-description></long-description>
          <tag line="133" name="param" description="option name" type="string" variable="$option">
            <type by_reference="false">string</type>
          </tag>
          <tag line="133" name="throws" description="When the option name isn't defined" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="133" name="api" description=""/>
        </docblock>
        <argument line="142">
          <name>$option</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="165" package="Default">
        <name>unsetOption</name>
        <full_name>unsetOption</full_name>
        <docblock line="157">
          <description>Unsets some specific style option.</description>
          <long-description></long-description>
          <tag line="157" name="param" description="option name" type="string" variable="$option">
            <type by_reference="false">string</type>
          </tag>
          <tag line="157" name="throws" description="When the option name isn't defined" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$option</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="186" package="Default">
        <name>setOptions</name>
        <full_name>setOptions</full_name>
        <docblock line="181">
          <description>Sets multiple style options at once.</description>
          <long-description></long-description>
          <tag line="181" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="202" package="Default">
        <name>apply</name>
        <full_name>apply</full_name>
        <docblock line="195">
          <description>Applies the style to a given text.</description>
          <long-description></long-description>
          <tag line="195" name="param" description="The text to style" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="202">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Formatter/OutputFormatterStyle.php</error>
      <error line="23" code="50018">No DocBlock was found for property $availableForegroundColors</error>
      <error line="33" code="50018">No DocBlock was found for property $availableBackgroundColors</error>
      <error line="43" code="50018">No DocBlock was found for property $availableOptions</error>
      <error line="51" code="50018">No DocBlock was found for property $foreground</error>
      <error line="52" code="50018">No DocBlock was found for property $background</error>
      <error line="53" code="50018">No DocBlock was found for property $options</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Formatter/OutputFormatterStyleInterface.php" hash="0c7cf1aa6e6c990552a62b88603743c2" package="Default">
    <interface namespace="Symfony\Component\Console\Formatter" line="21" package="Default">
      <name>OutputFormatterStyleInterface</name>
      <full_name>\Symfony\Component\Console\Formatter\OutputFormatterStyleInterface</full_name>
      <docblock line="14">
        <description>Formatter style interface for defining styles.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Konstantin Kudryashov &lt;ever.zet@gmail.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="30" package="Default">
        <name>setForeground</name>
        <full_name>setForeground</full_name>
        <docblock line="23">
          <description>Sets style foreground color.</description>
          <long-description></long-description>
          <tag line="23" name="param" description="color name" type="string" variable="$color">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="api" description=""/>
        </docblock>
        <argument line="30">
          <name>$color</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="39" package="Default">
        <name>setBackground</name>
        <full_name>setBackground</full_name>
        <docblock line="32">
          <description>Sets style background color.</description>
          <long-description></long-description>
          <tag line="32" name="param" description="color name" type="string" variable="$color">
            <type by_reference="false">string</type>
          </tag>
          <tag line="32" name="api" description=""/>
        </docblock>
        <argument line="39">
          <name>$color</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="48" package="Default">
        <name>setOption</name>
        <full_name>setOption</full_name>
        <docblock line="41">
          <description>Sets some specific style option.</description>
          <long-description></long-description>
          <tag line="41" name="param" description="option name" type="string" variable="$option">
            <type by_reference="false">string</type>
          </tag>
          <tag line="41" name="api" description=""/>
        </docblock>
        <argument line="48">
          <name>$option</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="55" package="Default">
        <name>unsetOption</name>
        <full_name>unsetOption</full_name>
        <docblock line="50">
          <description>Unsets some specific style option.</description>
          <long-description></long-description>
          <tag line="50" name="param" description="option name" type="string" variable="$option">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$option</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="62" package="Default">
        <name>setOptions</name>
        <full_name>setOptions</full_name>
        <docblock line="57">
          <description>Sets multiple style options at once.</description>
          <long-description></long-description>
          <tag line="57" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Formatter" line="71" package="Default">
        <name>apply</name>
        <full_name>apply</full_name>
        <docblock line="64">
          <description>Applies the style to a given text.</description>
          <long-description></long-description>
          <tag line="64" name="param" description="The text to style" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Formatter/OutputFormatterStyleInterface.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Application.php" hash="7b2f3850f9076b5902ec7ccb26ca4e59" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console" line="48" package="Default">
      <extends/>
      <name>Application</name>
      <full_name>\Symfony\Component\Console\Application</full_name>
      <docblock line="31">
        <description>An Application is the container for a collection of commands.</description>
        <long-description>&lt;p&gt;It is the main entry point of a Console application.&lt;/p&gt;

&lt;p&gt;This class is optimized for a standard CLI environment.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$app = new Application('myapp', '1.0 (stable)');
$app-&amp;gt;add(new SimpleCommand());
$app-&amp;gt;run();
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="31" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="31" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="private" line="50" namespace="Symfony\Component\Console" package="Default">
        <name>$commands</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="51" namespace="Symfony\Component\Console" package="Default">
        <name>$wantHelps</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="52" namespace="Symfony\Component\Console" package="Default">
        <name>$runningCommand</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="53" namespace="Symfony\Component\Console" package="Default">
        <name>$name</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="54" namespace="Symfony\Component\Console" package="Default">
        <name>$version</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="55" namespace="Symfony\Component\Console" package="Default">
        <name>$catchExceptions</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="56" namespace="Symfony\Component\Console" package="Default">
        <name>$autoExit</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="57" namespace="Symfony\Component\Console" package="Default">
        <name>$definition</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="58" namespace="Symfony\Component\Console" package="Default">
        <name>$helperSet</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="68" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="60">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="60" name="param" description="The name of the application" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="param" description="The version of the application" type="string" variable="$version">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="api" description=""/>
        </docblock>
        <argument line="68">
          <name>$name</name>
          <default>'UNKNOWN'</default>
          <type/>
        </argument>
        <argument line="68">
          <name>$version</name>
          <default>'UNKNOWN'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="95" package="Default">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="83">
          <description>Runs the current application.</description>
          <long-description></long-description>
          <tag line="83" name="param" description="An Input instance" type="\Symfony\Component\Console\Input\InputInterface" variable="$input">
            <type by_reference="false">\Symfony\Component\Console\Input\InputInterface</type>
          </tag>
          <tag line="83" name="param" description="An Output instance" type="\Symfony\Component\Console\Output\OutputInterface" variable="$output">
            <type by_reference="false">\Symfony\Component\Console\Output\OutputInterface</type>
          </tag>
          <tag line="83" name="return" description="0 if everything went fine, or an error code" type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="83" name="throws" description="When doRun returns Exception" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="83" name="api" description=""/>
        </docblock>
        <argument line="95">
          <name>$input</name>
          <default>null</default>
          <type>\Symfony\Component\Console\Input\InputInterface</type>
        </argument>
        <argument line="95">
          <name>$output</name>
          <default>null</default>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="142" package="Default">
        <name>doRun</name>
        <full_name>doRun</full_name>
        <docblock line="134">
          <description>Runs the current application.</description>
          <long-description></long-description>
          <tag line="134" name="param" description="An Input instance" type="\Symfony\Component\Console\Input\InputInterface" variable="$input">
            <type by_reference="false">\Symfony\Component\Console\Input\InputInterface</type>
          </tag>
          <tag line="134" name="param" description="An Output instance" type="\Symfony\Component\Console\Output\OutputInterface" variable="$output">
            <type by_reference="false">\Symfony\Component\Console\Output\OutputInterface</type>
          </tag>
          <tag line="134" name="return" description="0 if everything went fine, or an error code" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$input</name>
          <default></default>
          <type>\Symfony\Component\Console\Input\InputInterface</type>
        </argument>
        <argument line="142">
          <name>$output</name>
          <default></default>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="206" package="Default">
        <name>setHelperSet</name>
        <full_name>setHelperSet</full_name>
        <docblock line="199">
          <description>Set a helper set to be used with the command.</description>
          <long-description></long-description>
          <tag line="199" name="param" description="The helper set" type="\Symfony\Component\Console\Helper\HelperSet" variable="$helperSet">
            <type by_reference="false">\Symfony\Component\Console\Helper\HelperSet</type>
          </tag>
          <tag line="199" name="api" description=""/>
        </docblock>
        <argument line="206">
          <name>$helperSet</name>
          <default></default>
          <type>\Symfony\Component\Console\Helper\HelperSet</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="218" package="Default">
        <name>getHelperSet</name>
        <full_name>getHelperSet</full_name>
        <docblock line="211">
          <description>Get the helper set associated with the command.</description>
          <long-description></long-description>
          <tag line="211" name="return" description="The HelperSet instance associated with this command" type="\Symfony\Component\Console\Helper\HelperSet">
            <type by_reference="false">\Symfony\Component\Console\Helper\HelperSet</type>
          </tag>
          <tag line="211" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="228" package="Default">
        <name>getDefinition</name>
        <full_name>getDefinition</full_name>
        <docblock line="223">
          <description>Gets the InputDefinition related to this Application.</description>
          <long-description></long-description>
          <tag line="223" name="return" description="The InputDefinition instance" type="\Symfony\Component\Console\Input\InputDefinition">
            <type by_reference="false">\Symfony\Component\Console\Input\InputDefinition</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="238" package="Default">
        <name>getHelp</name>
        <full_name>getHelp</full_name>
        <docblock line="233">
          <description>Gets the help message.</description>
          <long-description></long-description>
          <tag line="233" name="return" description="A help message." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="266" package="Default">
        <name>setCatchExceptions</name>
        <full_name>setCatchExceptions</full_name>
        <docblock line="259">
          <description>Sets whether to catch exceptions or not during commands execution.</description>
          <long-description></long-description>
          <tag line="259" name="param" description="Whether to catch exceptions or not during commands execution" type="Boolean" variable="$boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="259" name="api" description=""/>
        </docblock>
        <argument line="266">
          <name>$boolean</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="278" package="Default">
        <name>setAutoExit</name>
        <full_name>setAutoExit</full_name>
        <docblock line="271">
          <description>Sets whether to automatically exit after a command execution or not.</description>
          <long-description></long-description>
          <tag line="271" name="param" description="Whether to automatically exit after a command execution or not" type="Boolean" variable="$boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="271" name="api" description=""/>
        </docblock>
        <argument line="278">
          <name>$boolean</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="290" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="283">
          <description>Gets the name of the application.</description>
          <long-description></long-description>
          <tag line="283" name="return" description="The application name" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="283" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="302" package="Default">
        <name>setName</name>
        <full_name>setName</full_name>
        <docblock line="295">
          <description>Sets the application name.</description>
          <long-description></long-description>
          <tag line="295" name="param" description="The application name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="295" name="api" description=""/>
        </docblock>
        <argument line="302">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="314" package="Default">
        <name>getVersion</name>
        <full_name>getVersion</full_name>
        <docblock line="307">
          <description>Gets the application version.</description>
          <long-description></long-description>
          <tag line="307" name="return" description="The application version" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="307" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="326" package="Default">
        <name>setVersion</name>
        <full_name>setVersion</full_name>
        <docblock line="319">
          <description>Sets the application version.</description>
          <long-description></long-description>
          <tag line="319" name="param" description="The application version" type="string" variable="$version">
            <type by_reference="false">string</type>
          </tag>
          <tag line="319" name="api" description=""/>
        </docblock>
        <argument line="326">
          <name>$version</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="338" package="Default">
        <name>getLongVersion</name>
        <full_name>getLongVersion</full_name>
        <docblock line="331">
          <description>Returns the long version of the application.</description>
          <long-description></long-description>
          <tag line="331" name="return" description="The long application version" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="331" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="356" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="347">
          <description>Registers a new command.</description>
          <long-description></long-description>
          <tag line="347" name="param" description="The command name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="347" name="return" description="The newly created command" type="\Symfony\Component\Console\Command\Command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
          <tag line="347" name="api" description=""/>
        </docblock>
        <argument line="356">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="368" package="Default">
        <name>addCommands</name>
        <full_name>addCommands</full_name>
        <docblock line="361">
          <description>Adds an array of command objects.</description>
          <long-description></long-description>
          <tag line="361" name="param" description="An array of commands" type="\Symfony\Component\Console\Command\Command[]" variable="$commands">
            <type by_reference="false">\Symfony\Component\Console\Command\Command[]</type>
          </tag>
          <tag line="361" name="api" description=""/>
        </docblock>
        <argument line="368">
          <name>$commands</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="386" package="Default">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="375">
          <description>Adds a command object.</description>
          <long-description>&lt;p&gt;If a command with the same name already exists, it will be overridden.&lt;/p&gt;</long-description>
          <tag line="375" name="param" description="A Command object" type="\Symfony\Component\Console\Command\Command" variable="$command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
          <tag line="375" name="return" description="The registered command" type="\Symfony\Component\Console\Command\Command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
          <tag line="375" name="api" description=""/>
        </docblock>
        <argument line="386">
          <name>$command</name>
          <default></default>
          <type>\Symfony\Component\Console\Command\Command</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="416" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="405">
          <description>Returns a registered command by name or alias.</description>
          <long-description></long-description>
          <tag line="405" name="param" description="The command name or alias" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="405" name="return" description="A Command object" type="\Symfony\Component\Console\Command\Command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
          <tag line="405" name="throws" description="When command name given does not exist" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="405" name="api" description=""/>
        </docblock>
        <argument line="416">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="445" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="436">
          <description>Returns true if the command exists, false otherwise.</description>
          <long-description></long-description>
          <tag line="436" name="param" description="The command name or alias" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="436" name="return" description="true if the command exists, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="436" name="api" description=""/>
        </docblock>
        <argument line="445">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="457" package="Default">
        <name>getNamespaces</name>
        <full_name>getNamespaces</full_name>
        <docblock line="450">
          <description>Returns an array of all unique namespaces used by currently registered commands.</description>
          <long-description>&lt;p&gt;It does not returns the global namespace which always exists.&lt;/p&gt;</long-description>
          <tag line="450" name="return" description="An array of namespaces" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="480" package="Default">
        <name>findNamespace</name>
        <full_name>findNamespace</full_name>
        <docblock line="471">
          <description>Finds a registered namespace by a name or an abbreviation.</description>
          <long-description></long-description>
          <tag line="471" name="param" description="A namespace or abbreviation to search for" type="string" variable="$namespace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="471" name="return" description="A registered namespace" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="471" name="throws" description="When namespace is incorrect or ambiguous" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="480">
          <name>$namespace</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="530" package="Default">
        <name>find</name>
        <full_name>find</full_name>
        <docblock line="516">
          <description>Finds a command by name or alias.</description>
          <long-description>&lt;p&gt;Contrary to get, this command tries to find the best
match if you give it an abbreviation of a name or alias.&lt;/p&gt;</long-description>
          <tag line="516" name="param" description="A command name or a command alias" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="516" name="return" description="A Command instance" type="\Symfony\Component\Console\Command\Command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
          <tag line="516" name="throws" description="When command name is incorrect or ambiguous" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="516" name="api" description=""/>
        </docblock>
        <argument line="530">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="599" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="588">
          <description>Gets the commands (registered in the given namespace if provided).</description>
          <long-description>&lt;p&gt;The array keys are the full names and the values the command instances.&lt;/p&gt;</long-description>
          <tag line="588" name="param" description="A namespace name" type="string" variable="$namespace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="588" name="return" description="An array of Command instances" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="588" name="api" description=""/>
        </docblock>
        <argument line="599">
          <name>$namespace</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\Console" line="622" package="Default">
        <name>getAbbreviations</name>
        <full_name>getAbbreviations</full_name>
        <docblock line="615">
          <description>Returns an array of possible abbreviations given a set of names.</description>
          <long-description></long-description>
          <tag line="615" name="param" description="An array of names" type="array" variable="$names">
            <type by_reference="false">array</type>
          </tag>
          <tag line="615" name="return" description="An array of abbreviations" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="622">
          <name>$names</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="652" package="Default">
        <name>asText</name>
        <full_name>asText</full_name>
        <docblock line="644">
          <description>Returns a text representation of the Application.</description>
          <long-description></long-description>
          <tag line="644" name="param" description="An optional namespace name" type="string" variable="$namespace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="644" name="param" description="Whether to return raw command list" type="boolean" variable="$raw">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="644" name="return" description="A string representing the Application" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="652">
          <name>$namespace</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="652">
          <name>$raw</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="702" package="Default">
        <name>asXml</name>
        <full_name>asXml</full_name>
        <docblock line="694">
          <description>Returns an XML representation of the Application.</description>
          <long-description></long-description>
          <tag line="694" name="param" description="An optional namespace name" type="string" variable="$namespace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="694" name="param" description="Whether to return a DOM or an XML string" type="Boolean" variable="$asDom">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="694" name="return" description="An XML string representing the Application" type="string|\Symfony\Component\Console\DOMDocument">
            <type by_reference="false">string</type>
            <type by_reference="false">\Symfony\Component\Console\DOMDocument</type>
          </tag>
        </docblock>
        <argument line="702">
          <name>$namespace</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="702">
          <name>$asDom</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console" line="754" package="Default">
        <name>renderException</name>
        <full_name>renderException</full_name>
        <docblock line="748">
          <description>Renders a catched exception.</description>
          <long-description></long-description>
          <tag line="748" name="param" description="An exception instance" type="\Symfony\Component\Console\Exception" variable="$e">
            <type by_reference="false">\Symfony\Component\Console\Exception</type>
          </tag>
          <tag line="748" name="param" description="An OutputInterface instance" type="\Symfony\Component\Console\Output\OutputInterface" variable="$output">
            <type by_reference="false">\Symfony\Component\Console\Output\OutputInterface</type>
          </tag>
        </docblock>
        <argument line="754">
          <name>$e</name>
          <default></default>
          <type/>
        </argument>
        <argument line="754">
          <name>$output</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console" line="834" package="Default">
        <name>getCommandName</name>
        <full_name>getCommandName</full_name>
        <docblock line="827">
          <description>Gets the name of the command based on input.</description>
          <long-description></long-description>
          <tag line="827" name="param" description="The input interface" type="\Symfony\Component\Console\Input\InputInterface" variable="$input">
            <type by_reference="false">\Symfony\Component\Console\Input\InputInterface</type>
          </tag>
          <tag line="827" name="return" description="The command name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="834">
          <name>$input</name>
          <default></default>
          <type>\Symfony\Component\Console\Input\InputInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console" line="844" package="Default">
        <name>getDefaultInputDefinition</name>
        <full_name>getDefaultInputDefinition</full_name>
        <docblock line="839">
          <description>Gets the default input definition.</description>
          <long-description></long-description>
          <tag line="839" name="return" description="An InputDefinition instance" type="\Symfony\Component\Console\Input\InputDefinition">
            <type by_reference="false">\Symfony\Component\Console\Input\InputDefinition</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console" line="864" package="Default">
        <name>getDefaultCommands</name>
        <full_name>getDefaultCommands</full_name>
        <docblock line="859">
          <description>Gets the default commands that should always be available.</description>
          <long-description></long-description>
          <tag line="859" name="return" description="An array of default Command instances" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console" line="874" package="Default">
        <name>getDefaultHelperSet</name>
        <full_name>getDefaultHelperSet</full_name>
        <docblock line="869">
          <description>Gets the default helper set with the helpers that should always be available.</description>
          <long-description></long-description>
          <tag line="869" name="return" description="A HelperSet instance" type="\Symfony\Component\Console\Helper\HelperSet">
            <type by_reference="false">\Symfony\Component\Console\Helper\HelperSet</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console" line="889" package="Default">
        <name>sortCommands</name>
        <full_name>sortCommands</full_name>
        <docblock line="882">
          <description>Sorts commands in alphabetical order.</description>
          <long-description></long-description>
          <tag line="882" name="param" description="An associative array of commands to sort" type="array" variable="$commands">
            <type by_reference="false">array</type>
          </tag>
          <tag line="882" name="return" description="A sorted array of commands" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="889">
          <name>$commands</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console" line="916" package="Default">
        <name>getAbbreviationSuggestions</name>
        <full_name>getAbbreviationSuggestions</full_name>
        <docblock line="909">
          <description>Returns abbreviated suggestions in string format.</description>
          <long-description></long-description>
          <tag line="909" name="param" description="Abbreviated suggestions to convert" type="array" variable="$abbrevs">
            <type by_reference="false">array</type>
          </tag>
          <tag line="909" name="return" description="A formatted string of abbreviated suggestions" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="916">
          <name>$abbrevs</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console" line="929" package="Default">
        <name>extractNamespace</name>
        <full_name>extractNamespace</full_name>
        <docblock line="921">
          <description>Returns the namespace part of the command name.</description>
          <long-description></long-description>
          <tag line="921" name="param" description="The full name of the command" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="921" name="param" description="The maximum number of parts of the namespace" type="string" variable="$limit">
            <type by_reference="false">string</type>
          </tag>
          <tag line="921" name="return" description="The namespace of the command" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="929">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="929">
          <name>$limit</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console" line="945" package="Default">
        <name>findAlternativeCommands</name>
        <full_name>findAlternativeCommands</full_name>
        <docblock line="937">
          <description>Finds alternative commands of $name</description>
          <long-description></long-description>
          <tag line="937" name="param" description="The full name of the command" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="937" name="param" description="The abbreviations" type="array" variable="$abbrevs">
            <type by_reference="false">array</type>
          </tag>
          <tag line="937" name="return" description="A sorted array of similar commands" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="945">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="945">
          <name>$abbrevs</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console" line="962" package="Default">
        <name>findAlternativeNamespace</name>
        <full_name>findAlternativeNamespace</full_name>
        <docblock line="954">
          <description>Finds alternative namespace of $name</description>
          <long-description></long-description>
          <tag line="954" name="param" description="The full name of the namespace" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="954" name="param" description="The abbreviations" type="array" variable="$abbrevs">
            <type by_reference="false">array</type>
          </tag>
          <tag line="954" name="return" description="A sorted array of similar namespace" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="962">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="962">
          <name>$abbrevs</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console" line="978" package="Default">
        <name>findAlternatives</name>
        <full_name>findAlternatives</full_name>
        <docblock line="967">
          <description>Finds alternative of $name among $collection,
if nothing is found in $collection, try in $abbrevs</description>
          <long-description></long-description>
          <tag line="967" name="param" description="The string" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="967" name="param" description="The collecion" type="array|\Symfony\Component\Console\Traversable" variable="$collection">
            <type by_reference="false">array</type>
            <type by_reference="false">\Symfony\Component\Console\Traversable</type>
          </tag>
          <tag line="967" name="param" description="The abbreviations" type="array" variable="$abbrevs">
            <type by_reference="false">array</type>
          </tag>
          <tag line="967" name="param" description="The callable to transform collection item before comparison" type="\Symfony\Component\Console\Closure|string|array" variable="$callback">
            <type by_reference="false">\Symfony\Component\Console\Closure</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="967" name="return" description="A sorted array of similar string" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="978">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="978">
          <name>$collection</name>
          <default></default>
          <type/>
        </argument>
        <argument line="978">
          <name>$abbrevs</name>
          <default></default>
          <type/>
        </argument>
        <argument line="978">
          <name>$callback</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Application.php</error>
      <error line="50" code="50018">No DocBlock was found for property $commands</error>
      <error line="51" code="50018">No DocBlock was found for property $wantHelps</error>
      <error line="52" code="50018">No DocBlock was found for property $runningCommand</error>
      <error line="53" code="50018">No DocBlock was found for property $name</error>
      <error line="54" code="50018">No DocBlock was found for property $version</error>
      <error line="55" code="50018">No DocBlock was found for property $catchExceptions</error>
      <error line="56" code="50018">No DocBlock was found for property $autoExit</error>
      <error line="57" code="50018">No DocBlock was found for property $definition</error>
      <error line="58" code="50018">No DocBlock was found for property $helperSet</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Helper/HelperInterface.php" hash="f272307e41770084f906b378b5af7bfe" package="Default">
    <interface namespace="Symfony\Component\Console\Helper" line="21" package="Default">
      <name>HelperInterface</name>
      <full_name>\Symfony\Component\Console\Helper\HelperInterface</full_name>
      <docblock line="14">
        <description>HelperInterface is the interface all helpers must implement.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="30" package="Default">
        <name>setHelperSet</name>
        <full_name>setHelperSet</full_name>
        <docblock line="23">
          <description>Sets the helper set associated with this helper.</description>
          <long-description></long-description>
          <tag line="23" name="param" description="A HelperSet instance" type="\Symfony\Component\Console\Helper\HelperSet" variable="$helperSet">
            <type by_reference="false">\Symfony\Component\Console\Helper\HelperSet</type>
          </tag>
          <tag line="23" name="api" description=""/>
        </docblock>
        <argument line="30">
          <name>$helperSet</name>
          <default>null</default>
          <type>\Symfony\Component\Console\Helper\HelperSet</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="39" package="Default">
        <name>getHelperSet</name>
        <full_name>getHelperSet</full_name>
        <docblock line="32">
          <description>Gets the helper set associated with this helper.</description>
          <long-description></long-description>
          <tag line="32" name="return" description="A HelperSet instance" type="\Symfony\Component\Console\Helper\HelperSet">
            <type by_reference="false">\Symfony\Component\Console\Helper\HelperSet</type>
          </tag>
          <tag line="32" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="48" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="41">
          <description>Returns the canonical name of this helper.</description>
          <long-description></long-description>
          <tag line="41" name="return" description="The canonical name" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="41" name="api" description=""/>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Helper/HelperInterface.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Helper/DialogHelper.php" hash="7d7887207460f850bfba58466c7a0f04" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Helper" line="21" package="Default">
      <extends>\Symfony\Component\Console\Helper\Helper</extends>
      <name>DialogHelper</name>
      <full_name>\Symfony\Component\Console\Helper\DialogHelper</full_name>
      <docblock line="16">
        <description>The Dialog class provides helpers to interact with the user.</description>
        <long-description></long-description>
        <tag line="16" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="23" namespace="Symfony\Component\Console\Helper" package="Default">
        <name>$inputStream</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="36" package="Default">
        <name>ask</name>
        <full_name>ask</full_name>
        <docblock line="25">
          <description>Asks a question to the user.</description>
          <long-description></long-description>
          <tag line="25" name="param" description="An Output instance" type="\Symfony\Component\Console\Output\OutputInterface" variable="$output">
            <type by_reference="false">\Symfony\Component\Console\Output\OutputInterface</type>
          </tag>
          <tag line="25" name="param" description="The question to ask" type="string|array" variable="$question">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="25" name="param" description="The default answer if none is given by the user" type="string" variable="$default">
            <type by_reference="false">string</type>
          </tag>
          <tag line="25" name="return" description="The user answer" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="25" name="throws" description="If there is no data to read in the input stream" type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$output</name>
          <default></default>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
        <argument line="36">
          <name>$question</name>
          <default></default>
          <type/>
        </argument>
        <argument line="36">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="60" package="Default">
        <name>askConfirmation</name>
        <full_name>askConfirmation</full_name>
        <docblock line="49">
          <description>Asks a confirmation to the user.</description>
          <long-description>&lt;p&gt;The question will be asked until the user answers by nothing, yes, or no.&lt;/p&gt;</long-description>
          <tag line="49" name="param" description="An Output instance" type="\Symfony\Component\Console\Output\OutputInterface" variable="$output">
            <type by_reference="false">\Symfony\Component\Console\Output\OutputInterface</type>
          </tag>
          <tag line="49" name="param" description="The question to ask" type="string|array" variable="$question">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="49" name="param" description="The default answer if the user enters nothing" type="Boolean" variable="$default">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="49" name="return" description="true if the user has confirmed, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$output</name>
          <default></default>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
        <argument line="60">
          <name>$question</name>
          <default></default>
          <type/>
        </argument>
        <argument line="60">
          <name>$default</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="91" package="Default">
        <name>askAndValidate</name>
        <full_name>askAndValidate</full_name>
        <docblock line="74">
          <description>Asks for a value and validates the response.</description>
          <long-description>&lt;p&gt;The validator receives the data to validate. It must return the
validated data when the data is valid and throw an exception
otherwise.&lt;/p&gt;</long-description>
          <tag line="74" name="param" description="An Output instance" type="\Symfony\Component\Console\Output\OutputInterface" variable="$output">
            <type by_reference="false">\Symfony\Component\Console\Output\OutputInterface</type>
          </tag>
          <tag line="74" name="param" description="The question to ask" type="string|array" variable="$question">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="74" name="param" description="A PHP callback" type="callback" variable="$validator">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="74" name="param" description="Max number of times to ask before giving up (false by default, which means infinite)" type="integer" variable="$attempts">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="74" name="param" description="The default answer if none is given by the user" type="string" variable="$default">
            <type by_reference="false">string</type>
          </tag>
          <tag line="74" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="74" name="throws" description="When any of the validators return an error" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$output</name>
          <default></default>
          <type>\Symfony\Component\Console\Output\OutputInterface</type>
        </argument>
        <argument line="91">
          <name>$question</name>
          <default></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$validator</name>
          <default></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$attempts</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="91">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="117" package="Default">
        <name>setInputStream</name>
        <full_name>setInputStream</full_name>
        <docblock line="110">
          <description>Sets the input stream to read from when interacting with the user.</description>
          <long-description>&lt;p&gt;This is mainly useful for testing purpose.&lt;/p&gt;</long-description>
          <tag line="110" name="param" description="The input stream" type="resource" variable="$stream">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$stream</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="127" package="Default">
        <name>getInputStream</name>
        <full_name>getInputStream</full_name>
        <docblock line="122">
          <description>Returns the helper's input stream</description>
          <long-description></long-description>
          <tag line="122" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="135" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="132">
          <description>Returns the helper's canonical name.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Helper/DialogHelper.php</error>
      <error line="23" code="50018">No DocBlock was found for property $inputStream</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Helper/FormatterHelper.php" hash="1b51c244939780a88e9c588c8558915b" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Helper" line="19" package="Default">
      <extends>\Symfony\Component\Console\Helper\Helper</extends>
      <name>FormatterHelper</name>
      <full_name>\Symfony\Component\Console\Helper\FormatterHelper</full_name>
      <docblock line="14">
        <description>The Formatter class provides helpers to format messages.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="28" package="Default">
        <name>formatSection</name>
        <full_name>formatSection</full_name>
        <docblock line="21">
          <description>Formats a message within a section.</description>
          <long-description></long-description>
          <tag line="21" name="param" description="The section name" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="21" name="param" description="The message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="21" name="param" description="The style to apply to the section" type="string" variable="$style">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
        <argument line="28">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="28">
          <name>$style</name>
          <default>'info'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="42" package="Default">
        <name>formatBlock</name>
        <full_name>formatBlock</full_name>
        <docblock line="33">
          <description>Formats a message as a block of text.</description>
          <long-description></long-description>
          <tag line="33" name="param" description="The message to write in the block" type="string|array" variable="$messages">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="33" name="param" description="The style to apply to the whole block" type="string" variable="$style">
            <type by_reference="false">string</type>
          </tag>
          <tag line="33" name="param" description="Whether to return a large block" type="Boolean" variable="$large">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="33" name="return" description="The formatter message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$messages</name>
          <default></default>
          <type/>
        </argument>
        <argument line="42">
          <name>$style</name>
          <default></default>
          <type/>
        </argument>
        <argument line="42">
          <name>$large</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Helper" line="75" package="Default">
        <name>strlen</name>
        <full_name>strlen</full_name>
        <docblock line="68">
          <description>Returns the length of a string, using mb_strlen if it is available.</description>
          <long-description></long-description>
          <tag line="68" name="param" description="The string to check its length" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="return" description="The length of the string" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="93" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="88">
          <description>Returns the helper's canonical name.</description>
          <long-description></long-description>
          <tag line="88" name="return" description="The canonical name of the helper" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Helper/FormatterHelper.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Helper/HelperSet.php" hash="9177055c69025dbe21662ee67c15dbf2" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Helper" line="21" package="Default">
      <extends/>
      <name>HelperSet</name>
      <full_name>\Symfony\Component\Console\Helper\HelperSet</full_name>
      <docblock line="16">
        <description>HelperSet represents a set of helpers to be used with a command.</description>
        <long-description></long-description>
        <tag line="16" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="23" namespace="Symfony\Component\Console\Helper" package="Default">
        <name>$helpers</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="24" namespace="Symfony\Component\Console\Helper" package="Default">
        <name>$command</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="31" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="26">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="26" name="param" description="An array of helper." type="\Symfony\Component\Console\Helper\Helper[]" variable="$helpers">
            <type by_reference="false">\Symfony\Component\Console\Helper\Helper[]</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$helpers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="45" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="39">
          <description>Sets a helper.</description>
          <long-description></long-description>
          <tag line="39" name="param" description="The helper instance" type="\Symfony\Component\Console\Helper\HelperInterface" variable="$helper">
            <type by_reference="false">\Symfony\Component\Console\Helper\HelperInterface</type>
          </tag>
          <tag line="39" name="param" description="An alias" type="string" variable="$alias">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$helper</name>
          <default></default>
          <type>\Symfony\Component\Console\Helper\HelperInterface</type>
        </argument>
        <argument line="45">
          <name>$alias</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="62" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="55">
          <description>Returns true if the helper if defined.</description>
          <long-description></long-description>
          <tag line="55" name="param" description="The helper name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="return" description="true if the helper is defined, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="76" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="67">
          <description>Gets a helper value.</description>
          <long-description></long-description>
          <tag line="67" name="param" description="The helper name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="return" description="The helper instance" type="\Symfony\Component\Console\Helper\HelperInterface">
            <type by_reference="false">\Symfony\Component\Console\Helper\HelperInterface</type>
          </tag>
          <tag line="67" name="throws" description="if the helper is not defined" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="90" package="Default">
        <name>setCommand</name>
        <full_name>setCommand</full_name>
        <docblock line="85">
          <description>Sets the command associated with this helper set.</description>
          <long-description></long-description>
          <tag line="85" name="param" description="A Command instance" type="\Symfony\Component\Console\Command\Command" variable="$command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$command</name>
          <default>null</default>
          <type>\Symfony\Component\Console\Command\Command</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="100" package="Default">
        <name>getCommand</name>
        <full_name>getCommand</full_name>
        <docblock line="95">
          <description>Gets the command associated with this helper set.</description>
          <long-description></long-description>
          <tag line="95" name="return" description="A Command instance" type="\Symfony\Component\Console\Command\Command">
            <type by_reference="false">\Symfony\Component\Console\Command\Command</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Helper/HelperSet.php</error>
      <error line="23" code="50018">No DocBlock was found for property $helpers</error>
      <error line="24" code="50018">No DocBlock was found for property $command</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Helper/Helper.php" hash="98ba8553238ecbaf2877d3baa17edf41" package="Default">
    <class final="false" abstract="true" namespace="Symfony\Component\Console\Helper" line="19" package="Default">
      <extends/>
      <implements>\Symfony\Component\Console\Helper\HelperInterface</implements>
      <name>Helper</name>
      <full_name>\Symfony\Component\Console\Helper\Helper</full_name>
      <docblock line="14">
        <description>Helper is the base class for all helper classes.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="21" namespace="Symfony\Component\Console\Helper" package="Default">
        <name>$helperSet</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="28" package="Default">
        <name>setHelperSet</name>
        <full_name>setHelperSet</full_name>
        <docblock line="23">
          <description>Sets the helper set associated with this helper.</description>
          <long-description></long-description>
          <tag line="23" name="param" description="A HelperSet instance" type="\Symfony\Component\Console\Helper\HelperSet" variable="$helperSet">
            <type by_reference="false">\Symfony\Component\Console\Helper\HelperSet</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$helperSet</name>
          <default>null</default>
          <type>\Symfony\Component\Console\Helper\HelperSet</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Helper" line="38" package="Default">
        <name>getHelperSet</name>
        <full_name>getHelperSet</full_name>
        <docblock line="33">
          <description>Gets the helper set associated with this helper.</description>
          <long-description></long-description>
          <tag line="33" name="return" description="A HelperSet instance" type="\Symfony\Component\Console\Helper\HelperSet">
            <type by_reference="false">\Symfony\Component\Console\Helper\HelperSet</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Helper/Helper.php</error>
      <error line="21" code="50018">No DocBlock was found for property $helperSet</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Input/InputDefinition.php" hash="42276e36e981f7bce56eea1cd2d8bdf8" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Input" line="28" package="Default">
      <extends/>
      <name>InputDefinition</name>
      <full_name>\Symfony\Component\Console\Input\InputDefinition</full_name>
      <docblock line="14">
        <description>A InputDefinition represents a set of valid command line arguments and options.</description>
        <long-description>&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$definition = new InputDefinition(array(
  new InputArgument('name', InputArgument::REQUIRED),
  new InputOption('foo', 'f', InputOption::VALUE_REQUIRED),
));
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="private" line="30" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$arguments</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$requiredCount</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$hasAnArrayArgument</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="33" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$hasOptional</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$options</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$shortcuts</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="44" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="37">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="37" name="param" description="An array of InputArgument and InputOption instance" type="array" variable="$definition">
            <type by_reference="false">array</type>
          </tag>
          <tag line="37" name="api" description=""/>
        </docblock>
        <argument line="44">
          <name>$definition</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="56" package="Default">
        <name>setDefinition</name>
        <full_name>setDefinition</full_name>
        <docblock line="49">
          <description>Sets the definition of the input.</description>
          <long-description></long-description>
          <tag line="49" name="param" description="The definition array" type="array" variable="$definition">
            <type by_reference="false">array</type>
          </tag>
          <tag line="49" name="api" description=""/>
        </docblock>
        <argument line="56">
          <name>$definition</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="79" package="Default">
        <name>setArguments</name>
        <full_name>setArguments</full_name>
        <docblock line="72">
          <description>Sets the InputArgument objects.</description>
          <long-description></long-description>
          <tag line="72" name="param" description="An array of InputArgument objects" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="72" name="api" description=""/>
        </docblock>
        <argument line="79">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="95" package="Default">
        <name>addArguments</name>
        <full_name>addArguments</full_name>
        <docblock line="88">
          <description>Adds an array of InputArgument objects.</description>
          <long-description></long-description>
          <tag line="88" name="param" description="An array of InputArgument objects" type="\Symfony\Component\Console\Input\InputArgument[]" variable="$arguments">
            <type by_reference="false">\Symfony\Component\Console\Input\InputArgument[]</type>
          </tag>
          <tag line="88" name="api" description=""/>
        </docblock>
        <argument line="95">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="113" package="Default">
        <name>addArgument</name>
        <full_name>addArgument</full_name>
        <docblock line="104">
          <description>Adds an InputArgument object.</description>
          <long-description></long-description>
          <tag line="104" name="param" description="An InputArgument object" type="\Symfony\Component\Console\Input\InputArgument" variable="$argument">
            <type by_reference="false">\Symfony\Component\Console\Input\InputArgument</type>
          </tag>
          <tag line="104" name="throws" description="When incorrect argument is given" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
          <tag line="104" name="api" description=""/>
        </docblock>
        <argument line="113">
          <name>$argument</name>
          <default></default>
          <type>\Symfony\Component\Console\Input\InputArgument</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="151" package="Default">
        <name>getArgument</name>
        <full_name>getArgument</full_name>
        <docblock line="140">
          <description>Returns an InputArgument by name or by position.</description>
          <long-description></long-description>
          <tag line="140" name="param" description="The InputArgument name or position" type="string|integer" variable="$name">
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="140" name="return" description="An InputArgument object" type="\Symfony\Component\Console\Input\InputArgument">
            <type by_reference="false">\Symfony\Component\Console\Input\InputArgument</type>
          </tag>
          <tag line="140" name="throws" description="When argument given doesn't exist" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="140" name="api" description=""/>
        </docblock>
        <argument line="151">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="171" package="Default">
        <name>hasArgument</name>
        <full_name>hasArgument</full_name>
        <docblock line="162">
          <description>Returns true if an InputArgument object exists by name or position.</description>
          <long-description></long-description>
          <tag line="162" name="param" description="The InputArgument name or position" type="string|integer" variable="$name">
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="162" name="return" description="true if the InputArgument object exists, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="162" name="api" description=""/>
        </docblock>
        <argument line="171">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="185" package="Default">
        <name>getArguments</name>
        <full_name>getArguments</full_name>
        <docblock line="178">
          <description>Gets the array of InputArgument objects.</description>
          <long-description></long-description>
          <tag line="178" name="return" description="An array of InputArgument objects" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="178" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="195" package="Default">
        <name>getArgumentCount</name>
        <full_name>getArgumentCount</full_name>
        <docblock line="190">
          <description>Returns the number of InputArguments.</description>
          <long-description></long-description>
          <tag line="190" name="return" description="The number of InputArguments" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="205" package="Default">
        <name>getArgumentRequiredCount</name>
        <full_name>getArgumentRequiredCount</full_name>
        <docblock line="200">
          <description>Returns the number of required InputArguments.</description>
          <long-description></long-description>
          <tag line="200" name="return" description="The number of required InputArguments" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="215" package="Default">
        <name>getArgumentDefaults</name>
        <full_name>getArgumentDefaults</full_name>
        <docblock line="210">
          <description>Gets the default values.</description>
          <long-description></long-description>
          <tag line="210" name="return" description="An array of default values" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="232" package="Default">
        <name>setOptions</name>
        <full_name>setOptions</full_name>
        <docblock line="225">
          <description>Sets the InputOption objects.</description>
          <long-description></long-description>
          <tag line="225" name="param" description="An array of InputOption objects" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="225" name="api" description=""/>
        </docblock>
        <argument line="232">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="246" package="Default">
        <name>addOptions</name>
        <full_name>addOptions</full_name>
        <docblock line="239">
          <description>Adds an array of InputOption objects.</description>
          <long-description></long-description>
          <tag line="239" name="param" description="An array of InputOption objects" type="\Symfony\Component\Console\Input\InputOption[]" variable="$options">
            <type by_reference="false">\Symfony\Component\Console\Input\InputOption[]</type>
          </tag>
          <tag line="239" name="api" description=""/>
        </docblock>
        <argument line="246">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="262" package="Default">
        <name>addOption</name>
        <full_name>addOption</full_name>
        <docblock line="253">
          <description>Adds an InputOption object.</description>
          <long-description></long-description>
          <tag line="253" name="param" description="An InputOption object" type="\Symfony\Component\Console\Input\InputOption" variable="$option">
            <type by_reference="false">\Symfony\Component\Console\Input\InputOption</type>
          </tag>
          <tag line="253" name="throws" description="When option given already exist" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
          <tag line="253" name="api" description=""/>
        </docblock>
        <argument line="262">
          <name>$option</name>
          <default></default>
          <type>\Symfony\Component\Console\Input\InputOption</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="285" package="Default">
        <name>getOption</name>
        <full_name>getOption</full_name>
        <docblock line="276">
          <description>Returns an InputOption by name.</description>
          <long-description></long-description>
          <tag line="276" name="param" description="The InputOption name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="276" name="return" description="A InputOption object" type="\Symfony\Component\Console\Input\InputOption">
            <type by_reference="false">\Symfony\Component\Console\Input\InputOption</type>
          </tag>
          <tag line="276" name="api" description=""/>
        </docblock>
        <argument line="285">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="303" package="Default">
        <name>hasOption</name>
        <full_name>hasOption</full_name>
        <docblock line="294">
          <description>Returns true if an InputOption object exists by name.</description>
          <long-description></long-description>
          <tag line="294" name="param" description="The InputOption name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="294" name="return" description="true if the InputOption object exists, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="294" name="api" description=""/>
        </docblock>
        <argument line="303">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="315" package="Default">
        <name>getOptions</name>
        <full_name>getOptions</full_name>
        <docblock line="308">
          <description>Gets the array of InputOption objects.</description>
          <long-description></long-description>
          <tag line="308" name="return" description="An array of InputOption objects" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="308" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="327" package="Default">
        <name>hasShortcut</name>
        <full_name>hasShortcut</full_name>
        <docblock line="320">
          <description>Returns true if an InputOption object exists by shortcut.</description>
          <long-description></long-description>
          <tag line="320" name="param" description="The InputOption shortcut" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="320" name="return" description="true if the InputOption object exists, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="327">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="339" package="Default">
        <name>getOptionForShortcut</name>
        <full_name>getOptionForShortcut</full_name>
        <docblock line="332">
          <description>Gets an InputOption by shortcut.</description>
          <long-description></long-description>
          <tag line="332" name="param" description="the Shortcut name" type="string" variable="$shortcut">
            <type by_reference="false">string</type>
          </tag>
          <tag line="332" name="return" description="An InputOption object" type="\Symfony\Component\Console\Input\InputOption">
            <type by_reference="false">\Symfony\Component\Console\Input\InputOption</type>
          </tag>
        </docblock>
        <argument line="339">
          <name>$shortcut</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="349" package="Default">
        <name>getOptionDefaults</name>
        <full_name>getOptionDefaults</full_name>
        <docblock line="344">
          <description>Gets an array of default values.</description>
          <long-description></long-description>
          <tag line="344" name="return" description="An array of all default values" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Input" line="368" package="Default">
        <name>shortcutToName</name>
        <full_name>shortcutToName</full_name>
        <docblock line="359">
          <description>Returns the InputOption name given a shortcut.</description>
          <long-description></long-description>
          <tag line="359" name="param" description="The shortcut" type="string" variable="$shortcut">
            <type by_reference="false">string</type>
          </tag>
          <tag line="359" name="return" description="The InputOption name" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="359" name="throws" description="When option given does not exist" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="368">
          <name>$shortcut</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="382" package="Default">
        <name>getSynopsis</name>
        <full_name>getSynopsis</full_name>
        <docblock line="377">
          <description>Gets the synopsis.</description>
          <long-description></long-description>
          <tag line="377" name="return" description="The synopsis" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="406" package="Default">
        <name>asText</name>
        <full_name>asText</full_name>
        <docblock line="401">
          <description>Returns a textual representation of the InputDefinition.</description>
          <long-description></long-description>
          <tag line="401" name="return" description="A string representing the InputDefinition" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="478" package="Default">
        <name>asXml</name>
        <full_name>asXml</full_name>
        <docblock line="471">
          <description>Returns an XML representation of the InputDefinition.</description>
          <long-description></long-description>
          <tag line="471" name="param" description="Whether to return a DOM or an XML string" type="Boolean" variable="$asDom">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="471" name="return" description="An XML string representing the InputDefinition" type="string|\Symfony\Component\Console\Input\DOMDocument">
            <type by_reference="false">string</type>
            <type by_reference="false">\Symfony\Component\Console\Input\DOMDocument</type>
          </tag>
        </docblock>
        <argument line="478">
          <name>$asDom</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Input" line="525" package="Default">
        <name>formatDefaultValue</name>
        <full_name>formatDefaultValue</full_name>
        <argument line="525">
          <name>$default</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Input/InputDefinition.php</error>
      <error line="30" code="50018">No DocBlock was found for property $arguments</error>
      <error line="31" code="50018">No DocBlock was found for property $requiredCount</error>
      <error line="32" code="50018">No DocBlock was found for property $hasAnArrayArgument</error>
      <error line="33" code="50018">No DocBlock was found for property $hasOptional</error>
      <error line="34" code="50018">No DocBlock was found for property $options</error>
      <error line="35" code="50018">No DocBlock was found for property $shortcuts</error>
      <error line="525" code="50010">No DocBlock was found for method formatDefaultValue()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Input/InputInterface.php" hash="2e3c4c4ef173e1a7185ca78b82be9426" package="Default">
    <interface namespace="Symfony\Component\Console\Input" line="19" package="Default">
      <name>InputInterface</name>
      <full_name>\Symfony\Component\Console\Input\InputInterface</full_name>
      <docblock line="14">
        <description>InputInterface is the interface implemented by all input classes.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="26" package="Default">
        <name>getFirstArgument</name>
        <full_name>getFirstArgument</full_name>
        <docblock line="21">
          <description>Returns the first argument from the raw parameters (not parsed).</description>
          <long-description></long-description>
          <tag line="21" name="return" description="The value of the first argument or null otherwise" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="38" package="Default">
        <name>hasParameterOption</name>
        <full_name>hasParameterOption</full_name>
        <docblock line="28">
          <description>Returns true if the raw parameters (not parsed) contain a value.</description>
          <long-description>&lt;p&gt;This method is to be used to introspect the input parameters
before they have been validated. It must be used carefully.&lt;/p&gt;</long-description>
          <tag line="28" name="param" description="The values to look for in the raw parameters (can be an array)" type="string|array" variable="$values">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="return" description="true if the value is contained in the raw parameters" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="51" package="Default">
        <name>getParameterOption</name>
        <full_name>getParameterOption</full_name>
        <docblock line="40">
          <description>Returns the value of a raw option (not parsed).</description>
          <long-description>&lt;p&gt;This method is to be used to introspect the input parameters
before they have been validated. It must be used carefully.&lt;/p&gt;</long-description>
          <tag line="40" name="param" description="The value(s) to look for in the raw parameters (can be an array)" type="string|array" variable="$values">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="40" name="param" description="The default value to return if no result is found" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="40" name="return" description="The option value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$default</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="58" package="Default">
        <name>bind</name>
        <full_name>bind</full_name>
        <docblock line="53">
          <description>Binds the current Input instance with the given arguments and options.</description>
          <long-description></long-description>
          <tag line="53" name="param" description="A InputDefinition instance" type="\Symfony\Component\Console\Input\InputDefinition" variable="$definition">
            <type by_reference="false">\Symfony\Component\Console\Input\InputDefinition</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$definition</name>
          <default></default>
          <type>\Symfony\Component\Console\Input\InputDefinition</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="67" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="60">
          <description>Validates if arguments given are correct.</description>
          <long-description>&lt;p&gt;Throws an exception when not enough arguments are given.&lt;/p&gt;</long-description>
          <tag line="60" name="throws" description="" type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="74" package="Default">
        <name>getArguments</name>
        <full_name>getArguments</full_name>
        <docblock line="69">
          <description>Returns all the given arguments merged with the default values.</description>
          <long-description></long-description>
          <tag line="69" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="83" package="Default">
        <name>getArgument</name>
        <full_name>getArgument</full_name>
        <docblock line="76">
          <description>Gets argument by name.</description>
          <long-description></long-description>
          <tag line="76" name="param" description="The name of the argument" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="93" package="Default">
        <name>setArgument</name>
        <full_name>setArgument</full_name>
        <docblock line="85">
          <description>Sets an argument value by name.</description>
          <long-description></long-description>
          <tag line="85" name="param" description="The argument name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="85" name="param" description="The argument value" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="85" name="throws" description="When argument given doesn't exist" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="93">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="102" package="Default">
        <name>hasArgument</name>
        <full_name>hasArgument</full_name>
        <docblock line="95">
          <description>Returns true if an InputArgument object exists by name or position.</description>
          <long-description></long-description>
          <tag line="95" name="param" description="The InputArgument name or position" type="string|integer" variable="$name">
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="95" name="return" description="true if the InputArgument object exists, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="109" package="Default">
        <name>getOptions</name>
        <full_name>getOptions</full_name>
        <docblock line="104">
          <description>Returns all the given options merged with the default values.</description>
          <long-description></long-description>
          <tag line="104" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="118" package="Default">
        <name>getOption</name>
        <full_name>getOption</full_name>
        <docblock line="111">
          <description>Gets an option by name.</description>
          <long-description></long-description>
          <tag line="111" name="param" description="The name of the option" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="128" package="Default">
        <name>setOption</name>
        <full_name>setOption</full_name>
        <docblock line="120">
          <description>Sets an option value by name.</description>
          <long-description></long-description>
          <tag line="120" name="param" description="The option name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="param" description="The option value" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="throws" description="When option given doesn't exist" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="128">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="137" package="Default">
        <name>hasOption</name>
        <full_name>hasOption</full_name>
        <docblock line="130">
          <description>Returns true if an InputOption object exists by name.</description>
          <long-description></long-description>
          <tag line="130" name="param" description="The InputOption name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="return" description="true if the InputOption object exists, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="144" package="Default">
        <name>isInteractive</name>
        <full_name>isInteractive</full_name>
        <docblock line="139">
          <description>Is this input means interactive?</description>
          <long-description></long-description>
          <tag line="139" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="151" package="Default">
        <name>setInteractive</name>
        <full_name>setInteractive</full_name>
        <docblock line="146">
          <description>Sets the input interactivity.</description>
          <long-description></long-description>
          <tag line="146" name="param" description="If the input should be interactive" type="Boolean" variable="$interactive">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$interactive</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Input/InputInterface.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Input/ArrayInput.php" hash="b93aa56c3b45e9ccd7dc263906a557d3" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Input" line="25" package="Default">
      <extends>\Symfony\Component\Console\Input\Input</extends>
      <name>ArrayInput</name>
      <full_name>\Symfony\Component\Console\Input\ArrayInput</full_name>
      <docblock line="14">
        <description>ArrayInput represents an input provided as an array.</description>
        <long-description>&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$input = new ArrayInput(array('name' =&amp;gt; 'foo', '--bar' =&amp;gt; 'foobar'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="private" line="27" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$parameters</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="37" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="29">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="29" name="param" description="An array of parameters" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="29" name="param" description="A InputDefinition instance" type="\Symfony\Component\Console\Input\InputDefinition" variable="$definition">
            <type by_reference="false">\Symfony\Component\Console\Input\InputDefinition</type>
          </tag>
          <tag line="29" name="api" description=""/>
        </docblock>
        <argument line="37">
          <name>$parameters</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="37">
          <name>$definition</name>
          <default>null</default>
          <type>\Symfony\Component\Console\Input\InputDefinition</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="49" package="Default">
        <name>getFirstArgument</name>
        <full_name>getFirstArgument</full_name>
        <docblock line="44">
          <description>Returns the first argument from the raw parameters (not parsed).</description>
          <long-description></long-description>
          <tag line="44" name="return" description="The value of the first argument or null otherwise" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="70" package="Default">
        <name>hasParameterOption</name>
        <full_name>hasParameterOption</full_name>
        <docblock line="60">
          <description>Returns true if the raw parameters (not parsed) contain a value.</description>
          <long-description>&lt;p&gt;This method is to be used to introspect the input parameters
before they have been validated. It must be used carefully.&lt;/p&gt;</long-description>
          <tag line="60" name="param" description="The values to look for in the raw parameters (can be an array)" type="string|array" variable="$values">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="60" name="return" description="true if the value is contained in the raw parameters" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="98" package="Default">
        <name>getParameterOption</name>
        <full_name>getParameterOption</full_name>
        <docblock line="87">
          <description>Returns the value of a raw option (not parsed).</description>
          <long-description>&lt;p&gt;This method is to be used to introspect the input parameters
before they have been validated. It must be used carefully.&lt;/p&gt;</long-description>
          <tag line="87" name="param" description="The value(s) to look for in the raw parameters (can be an array)" type="string|array" variable="$values">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="87" name="param" description="The default value to return if no result is found" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="87" name="return" description="The option value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
        <argument line="98">
          <name>$default</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console\Input" line="116" package="Default">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="113">
          <description>Processes command line arguments.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Input" line="137" package="Default">
        <name>addShortOption</name>
        <full_name>addShortOption</full_name>
        <docblock line="129">
          <description>Adds a short option value.</description>
          <long-description></long-description>
          <tag line="129" name="param" description="The short option key" type="string" variable="$shortcut">
            <type by_reference="false">string</type>
          </tag>
          <tag line="129" name="param" description="The value for the option" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="129" name="throws" description="When option given doesn't exist" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$shortcut</name>
          <default></default>
          <type/>
        </argument>
        <argument line="137">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Input" line="155" package="Default">
        <name>addLongOption</name>
        <full_name>addLongOption</full_name>
        <docblock line="146">
          <description>Adds a long option value.</description>
          <long-description></long-description>
          <tag line="146" name="param" description="The long option key" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="param" description="The value for the option" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="146" name="throws" description="When option given doesn't exist" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="146" name="throws" description="When a required value is missing" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="155">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Input" line="182" package="Default">
        <name>addArgument</name>
        <full_name>addArgument</full_name>
        <docblock line="174">
          <description>Adds an argument value.</description>
          <long-description></long-description>
          <tag line="174" name="param" description="The argument name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="174" name="param" description="The value for the argument" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="174" name="throws" description="When argument given doesn't exist" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="182">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Input/ArrayInput.php</error>
      <error line="27" code="50018">No DocBlock was found for property $parameters</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Input/ArgvInput.php" hash="07207da93dad8110a04fb87ad2a76fd3" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Input" line="41" package="Default">
      <extends>\Symfony\Component\Console\Input\Input</extends>
      <name>ArgvInput</name>
      <full_name>\Symfony\Component\Console\Input\ArgvInput</full_name>
      <docblock line="14">
        <description>ArgvInput represents an input coming from the CLI arguments.</description>
        <long-description>&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$input = new ArgvInput();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By default, the &lt;code&gt;$_SERVER['argv']&lt;/code&gt; array is used for the input values.&lt;/p&gt;

&lt;p&gt;This can be overridden by explicitly passing the input values in the constructor:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$input = new ArgvInput($_SERVER['argv']);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you pass it yourself, don't forget that the first element of the array
is the name of the running application.&lt;/p&gt;

&lt;p&gt;When passing an argument to the constructor, be sure that it respects
the same rules as the argv one. It's almost always better to use the
&lt;code&gt;StringInput&lt;/code&gt; when you want to provide your own input.&lt;/p&gt;</long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="see" description="\Symfony\Component\Console\Input\http://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html" refers="\Symfony\Component\Console\Input\http://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html"/>
        <tag line="14" name="see" description="\Symfony\Component\Console\Input\http://www.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap12.html#tag_12_02" refers="\Symfony\Component\Console\Input\http://www.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap12.html#tag_12_02"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="private" line="43" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$tokens</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="44" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$parsed</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="54" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="46">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="46" name="param" description="An array of parameters from the CLI (in the argv format)" type="array" variable="$argv">
            <type by_reference="false">array</type>
          </tag>
          <tag line="46" name="param" description="A InputDefinition instance" type="\Symfony\Component\Console\Input\InputDefinition" variable="$definition">
            <type by_reference="false">\Symfony\Component\Console\Input\InputDefinition</type>
          </tag>
          <tag line="46" name="api" description=""/>
        </docblock>
        <argument line="54">
          <name>$argv</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="54">
          <name>$definition</name>
          <default>null</default>
          <type>\Symfony\Component\Console\Input\InputDefinition</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console\Input" line="68" package="Default">
        <name>setTokens</name>
        <full_name>setTokens</full_name>
        <argument line="68">
          <name>$tokens</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\Console\Input" line="76" package="Default">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="73">
          <description>Processes command line arguments.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Input" line="98" package="Default">
        <name>parseShortOption</name>
        <full_name>parseShortOption</full_name>
        <docblock line="93">
          <description>Parses a short option.</description>
          <long-description></long-description>
          <tag line="93" name="param" description="The current token." type="string" variable="$token">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Input" line="121" package="Default">
        <name>parseShortOptionSet</name>
        <full_name>parseShortOptionSet</full_name>
        <docblock line="114">
          <description>Parses a short option set.</description>
          <long-description></long-description>
          <tag line="114" name="param" description="The current token" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="114" name="throws" description="When option given doesn't exist" type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Input" line="145" package="Default">
        <name>parseLongOption</name>
        <full_name>parseLongOption</full_name>
        <docblock line="140">
          <description>Parses a long option.</description>
          <long-description></long-description>
          <tag line="140" name="param" description="The current token" type="string" variable="$token">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Input" line="163" package="Default">
        <name>parseArgument</name>
        <full_name>parseArgument</full_name>
        <docblock line="156">
          <description>Parses an argument.</description>
          <long-description></long-description>
          <tag line="156" name="param" description="The current token" type="string" variable="$token">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="throws" description="When too many arguments are given" type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Input" line="191" package="Default">
        <name>addShortOption</name>
        <full_name>addShortOption</full_name>
        <docblock line="183">
          <description>Adds a short option value.</description>
          <long-description></long-description>
          <tag line="183" name="param" description="The short option key" type="string" variable="$shortcut">
            <type by_reference="false">string</type>
          </tag>
          <tag line="183" name="param" description="The value for the option" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="183" name="throws" description="When option given doesn't exist" type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$shortcut</name>
          <default></default>
          <type/>
        </argument>
        <argument line="191">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Input" line="208" package="Default">
        <name>addLongOption</name>
        <full_name>addLongOption</full_name>
        <docblock line="200">
          <description>Adds a long option value.</description>
          <long-description></long-description>
          <tag line="200" name="param" description="The long option key" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="200" name="param" description="The value for the option" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="200" name="throws" description="When option given doesn't exist" type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="208">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="247" package="Default">
        <name>getFirstArgument</name>
        <full_name>getFirstArgument</full_name>
        <docblock line="242">
          <description>Returns the first argument from the raw parameters (not parsed).</description>
          <long-description></long-description>
          <tag line="242" name="return" description="The value of the first argument or null otherwise" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="268" package="Default">
        <name>hasParameterOption</name>
        <full_name>hasParameterOption</full_name>
        <docblock line="258">
          <description>Returns true if the raw parameters (not parsed) contain a value.</description>
          <long-description>&lt;p&gt;This method is to be used to introspect the input parameters
before they have been validated. It must be used carefully.&lt;/p&gt;</long-description>
          <tag line="258" name="param" description="The value(s) to look for in the raw parameters (can be an array)" type="string|array" variable="$values">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="258" name="return" description="true if the value is contained in the raw parameters" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="268">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="292" package="Default">
        <name>getParameterOption</name>
        <full_name>getParameterOption</full_name>
        <docblock line="281">
          <description>Returns the value of a raw option (not parsed).</description>
          <long-description>&lt;p&gt;This method is to be used to introspect the input parameters
before they have been validated. It must be used carefully.&lt;/p&gt;</long-description>
          <tag line="281" name="param" description="The value(s) to look for in the raw parameters (can be an array)" type="string|array" variable="$values">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="281" name="param" description="The default value to return if no result is found" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="281" name="return" description="The option value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="292">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
        <argument line="292">
          <name>$default</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Input/ArgvInput.php</error>
      <error line="43" code="50018">No DocBlock was found for property $tokens</error>
      <error line="44" code="50018">No DocBlock was found for property $parsed</error>
      <error line="68" code="50010">No DocBlock was found for method setTokens()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Input/StringInput.php" hash="4f0cc35703a10d31fc568304000c56f3" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Input" line="25" package="Default">
      <extends>\Symfony\Component\Console\Input\ArgvInput</extends>
      <name>StringInput</name>
      <full_name>\Symfony\Component\Console\Input\StringInput</full_name>
      <docblock line="14">
        <description>StringInput represents an input provided as a string.</description>
        <long-description>&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$input = new StringInput('foo --bar="foobar"');
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <constant namespace="Symfony\Component\Console\Input" line="27" package="Default">
        <name>REGEX_STRING</name>
        <full_name>REGEX_STRING</full_name>
        <value>'([^ ]+?)(?: |(?&lt;!\\\\)"|(?&lt;!\\\\)\'|$)'</value>
      </constant>
      <constant namespace="Symfony\Component\Console\Input" line="28" package="Default">
        <name>REGEX_QUOTED_STRING</name>
        <full_name>REGEX_QUOTED_STRING</full_name>
        <value>'(?:"([^"\\\\]*(?:\\\\.[^"\\\\]*)*)"|\'([^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\')'</value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="38" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="30">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="30" name="param" description="An array of parameters from the CLI (in the argv format)" type="string" variable="$input">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="A InputDefinition instance" type="\Symfony\Component\Console\Input\InputDefinition" variable="$definition">
            <type by_reference="false">\Symfony\Component\Console\Input\InputDefinition</type>
          </tag>
          <tag line="30" name="api" description=""/>
        </docblock>
        <argument line="38">
          <name>$input</name>
          <default></default>
          <type/>
        </argument>
        <argument line="38">
          <name>$definition</name>
          <default>null</default>
          <type>\Symfony\Component\Console\Input\InputDefinition</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\Console\Input" line="52" package="Default">
        <name>tokenize</name>
        <full_name>tokenize</full_name>
        <docblock line="45">
          <description>Tokenizes a string.</description>
          <long-description></long-description>
          <tag line="45" name="param" description="The input to tokenize" type="string" variable="$input">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="throws" description="When unable to parse input (should never happen)" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$input</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Input/StringInput.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Input/Input.php" hash="6247a5219605f3702e1de88b421ac750" package="Default">
    <class final="false" abstract="true" namespace="Symfony\Component\Console\Input" line="25" package="Default">
      <extends/>
      <implements>\Symfony\Component\Console\Input\InputInterface</implements>
      <name>Input</name>
      <full_name>\Symfony\Component\Console\Input\Input</full_name>
      <docblock line="14">
        <description>Input is the base class for all concrete Input classes.</description>
        <long-description>&lt;p&gt;Three concrete classes are provided by default:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ArgvInput&lt;/code&gt;: The input comes from the CLI arguments (argv)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;StringInput&lt;/code&gt;: The input is provided as a string&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ArrayInput&lt;/code&gt;: The input is provided as an array&lt;/li&gt;
&lt;/ul&gt;</long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="27" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$definition</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$options</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$arguments</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$interactive</name>
        <default>true</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="37" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="32">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="32" name="param" description="A InputDefinition instance" type="\Symfony\Component\Console\Input\InputDefinition" variable="$definition">
            <type by_reference="false">\Symfony\Component\Console\Input\InputDefinition</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$definition</name>
          <default>null</default>
          <type>\Symfony\Component\Console\Input\InputDefinition</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="52" package="Default">
        <name>bind</name>
        <full_name>bind</full_name>
        <docblock line="47">
          <description>Binds the current Input instance with the given arguments and options.</description>
          <long-description></long-description>
          <tag line="47" name="param" description="A InputDefinition instance" type="\Symfony\Component\Console\Input\InputDefinition" variable="$definition">
            <type by_reference="false">\Symfony\Component\Console\Input\InputDefinition</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$definition</name>
          <default></default>
          <type>\Symfony\Component\Console\Input\InputDefinition</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="Symfony\Component\Console\Input" line="64" package="Default">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="61">
          <description>Processes command line arguments.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="71" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="66">
          <description>Validates the input.</description>
          <long-description></long-description>
          <tag line="66" name="throws" description="When not enough arguments are given" type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="83" package="Default">
        <name>isInteractive</name>
        <full_name>isInteractive</full_name>
        <docblock line="78">
          <description>Checks if the input is interactive.</description>
          <long-description></long-description>
          <tag line="78" name="return" description="Returns true if the input is interactive" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="93" package="Default">
        <name>setInteractive</name>
        <full_name>setInteractive</full_name>
        <docblock line="88">
          <description>Sets the input interactivity.</description>
          <long-description></long-description>
          <tag line="88" name="param" description="If the input should be interactive" type="Boolean" variable="$interactive">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$interactive</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="103" package="Default">
        <name>getArguments</name>
        <full_name>getArguments</full_name>
        <docblock line="98">
          <description>Returns the argument values.</description>
          <long-description></long-description>
          <tag line="98" name="return" description="An array of argument values" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="117" package="Default">
        <name>getArgument</name>
        <full_name>getArgument</full_name>
        <docblock line="108">
          <description>Returns the argument value for a given argument name.</description>
          <long-description></long-description>
          <tag line="108" name="param" description="The argument name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="108" name="return" description="The argument value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="108" name="throws" description="When argument given doesn't exist" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="134" package="Default">
        <name>setArgument</name>
        <full_name>setArgument</full_name>
        <docblock line="126">
          <description>Sets an argument value by name.</description>
          <long-description></long-description>
          <tag line="126" name="param" description="The argument name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="param" description="The argument value" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="throws" description="When argument given doesn't exist" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="134">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="150" package="Default">
        <name>hasArgument</name>
        <full_name>hasArgument</full_name>
        <docblock line="143">
          <description>Returns true if an InputArgument object exists by name or position.</description>
          <long-description></long-description>
          <tag line="143" name="param" description="The InputArgument name or position" type="string|integer" variable="$name">
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="143" name="return" description="true if the InputArgument object exists, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="160" package="Default">
        <name>getOptions</name>
        <full_name>getOptions</full_name>
        <docblock line="155">
          <description>Returns the options values.</description>
          <long-description></long-description>
          <tag line="155" name="return" description="An array of option values" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="174" package="Default">
        <name>getOption</name>
        <full_name>getOption</full_name>
        <docblock line="165">
          <description>Returns the option value for a given option name.</description>
          <long-description></long-description>
          <tag line="165" name="param" description="The option name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="165" name="return" description="The option value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="165" name="throws" description="When option given doesn't exist" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="191" package="Default">
        <name>setOption</name>
        <full_name>setOption</full_name>
        <docblock line="183">
          <description>Sets an option value by name.</description>
          <long-description></long-description>
          <tag line="183" name="param" description="The option name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="183" name="param" description="The option value" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="183" name="throws" description="When option given doesn't exist" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="191">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="207" package="Default">
        <name>hasOption</name>
        <full_name>hasOption</full_name>
        <docblock line="200">
          <description>Returns true if an InputOption object exists by name.</description>
          <long-description></long-description>
          <tag line="200" name="param" description="The InputOption name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="200" name="return" description="true if the InputOption object exists, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="207">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Input/Input.php</error>
      <error line="27" code="50018">No DocBlock was found for property $definition</error>
      <error line="28" code="50018">No DocBlock was found for property $options</error>
      <error line="29" code="50018">No DocBlock was found for property $arguments</error>
      <error line="30" code="50018">No DocBlock was found for property $interactive</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Input/InputArgument.php" hash="5f8cab8fa300cacc4241803404927b6f" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Input" line="21" package="Default">
      <extends/>
      <name>InputArgument</name>
      <full_name>\Symfony\Component\Console\Input\InputArgument</full_name>
      <docblock line="14">
        <description>Represents a command line argument.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <constant namespace="Symfony\Component\Console\Input" line="23" package="Default">
        <name>REQUIRED</name>
        <full_name>REQUIRED</full_name>
        <value>1</value>
      </constant>
      <constant namespace="Symfony\Component\Console\Input" line="24" package="Default">
        <name>OPTIONAL</name>
        <full_name>OPTIONAL</full_name>
        <value>2</value>
      </constant>
      <constant namespace="Symfony\Component\Console\Input" line="25" package="Default">
        <name>IS_ARRAY</name>
        <full_name>IS_ARRAY</full_name>
        <value>4</value>
      </constant>
      <property final="false" static="false" visibility="private" line="27" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$name</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="28" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$mode</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="29" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$default</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="30" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$description</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="44" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="32">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="32" name="param" description="The argument name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="32" name="param" description="The argument mode: self::REQUIRED or self::OPTIONAL" type="integer" variable="$mode">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="32" name="param" description="A description text" type="string" variable="$description">
            <type by_reference="false">string</type>
          </tag>
          <tag line="32" name="param" description="The default value (for self::OPTIONAL mode only)" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="32" name="throws" description="When argument mode is not valid" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="32" name="api" description=""/>
        </docblock>
        <argument line="44">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="44">
          <name>$mode</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="44">
          <name>$description</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="44">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="64" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="59">
          <description>Returns the argument name.</description>
          <long-description></long-description>
          <tag line="59" name="return" description="The argument name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="74" package="Default">
        <name>isRequired</name>
        <full_name>isRequired</full_name>
        <docblock line="69">
          <description>Returns true if the argument is required.</description>
          <long-description></long-description>
          <tag line="69" name="return" description="true if parameter mode is self::REQUIRED, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="84" package="Default">
        <name>isArray</name>
        <full_name>isArray</full_name>
        <docblock line="79">
          <description>Returns true if the argument can take multiple values.</description>
          <long-description></long-description>
          <tag line="79" name="return" description="true if mode is self::IS_ARRAY, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="96" package="Default">
        <name>setDefault</name>
        <full_name>setDefault</full_name>
        <docblock line="89">
          <description>Sets the default value.</description>
          <long-description></long-description>
          <tag line="89" name="param" description="The default value" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="89" name="throws" description="When incorrect default value is given" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="118" package="Default">
        <name>getDefault</name>
        <full_name>getDefault</full_name>
        <docblock line="113">
          <description>Returns the default value.</description>
          <long-description></long-description>
          <tag line="113" name="return" description="The default value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="128" package="Default">
        <name>getDescription</name>
        <full_name>getDescription</full_name>
        <docblock line="123">
          <description>Returns the description text.</description>
          <long-description></long-description>
          <tag line="123" name="return" description="The description text" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Input/InputArgument.php</error>
      <error line="27" code="50018">No DocBlock was found for property $name</error>
      <error line="28" code="50018">No DocBlock was found for property $mode</error>
      <error line="29" code="50018">No DocBlock was found for property $default</error>
      <error line="30" code="50018">No DocBlock was found for property $description</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/Console/Input/InputOption.php" hash="943fb165aff011f04abaca69f06874ba" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\Console\Input" line="21" package="Default">
      <extends/>
      <name>InputOption</name>
      <full_name>\Symfony\Component\Console\Input\InputOption</full_name>
      <docblock line="14">
        <description>Represents a command line option.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <constant namespace="Symfony\Component\Console\Input" line="23" package="Default">
        <name>VALUE_NONE</name>
        <full_name>VALUE_NONE</full_name>
        <value>1</value>
      </constant>
      <constant namespace="Symfony\Component\Console\Input" line="24" package="Default">
        <name>VALUE_REQUIRED</name>
        <full_name>VALUE_REQUIRED</full_name>
        <value>2</value>
      </constant>
      <constant namespace="Symfony\Component\Console\Input" line="25" package="Default">
        <name>VALUE_OPTIONAL</name>
        <full_name>VALUE_OPTIONAL</full_name>
        <value>4</value>
      </constant>
      <constant namespace="Symfony\Component\Console\Input" line="26" package="Default">
        <name>VALUE_IS_ARRAY</name>
        <full_name>VALUE_IS_ARRAY</full_name>
        <value>8</value>
      </constant>
      <property final="false" static="false" visibility="private" line="28" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$name</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="29" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$shortcut</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="30" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$mode</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$default</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="Symfony\Component\Console\Input" package="Default">
        <name>$description</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="47" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="34">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="34" name="param" description="The option name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="param" description="The shortcut (can be null)" type="string" variable="$shortcut">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="param" description="The option mode: One of the VALUE_* constants" type="integer" variable="$mode">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="34" name="param" description="A description text" type="string" variable="$description">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="param" description="The default value (must be null for self::VALUE_REQUIRED or self::VALUE_NONE)" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="34" name="throws" description="If option mode is invalid or incompatible" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="34" name="api" description=""/>
        </docblock>
        <argument line="47">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$shortcut</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="47">
          <name>$mode</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="47">
          <name>$description</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="47">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="86" package="Default">
        <name>getShortcut</name>
        <full_name>getShortcut</full_name>
        <docblock line="81">
          <description>Returns the option shortcut.</description>
          <long-description></long-description>
          <tag line="81" name="return" description="The shortcut" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="96" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="91">
          <description>Returns the option name.</description>
          <long-description></long-description>
          <tag line="91" name="return" description="The name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="106" package="Default">
        <name>acceptValue</name>
        <full_name>acceptValue</full_name>
        <docblock line="101">
          <description>Returns true if the option accepts a value.</description>
          <long-description></long-description>
          <tag line="101" name="return" description="true if value mode is not self::VALUE_NONE, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="116" package="Default">
        <name>isValueRequired</name>
        <full_name>isValueRequired</full_name>
        <docblock line="111">
          <description>Returns true if the option requires a value.</description>
          <long-description></long-description>
          <tag line="111" name="return" description="true if value mode is self::VALUE_REQUIRED, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="126" package="Default">
        <name>isValueOptional</name>
        <full_name>isValueOptional</full_name>
        <docblock line="121">
          <description>Returns true if the option takes an optional value.</description>
          <long-description></long-description>
          <tag line="121" name="return" description="true if value mode is self::VALUE_OPTIONAL, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="136" package="Default">
        <name>isArray</name>
        <full_name>isArray</full_name>
        <docblock line="131">
          <description>Returns true if the option can take multiple values.</description>
          <long-description></long-description>
          <tag line="131" name="return" description="true if mode is self::VALUE_IS_ARRAY, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="148" package="Default">
        <name>setDefault</name>
        <full_name>setDefault</full_name>
        <docblock line="141">
          <description>Sets the default value.</description>
          <long-description></long-description>
          <tag line="141" name="param" description="The default value" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="141" name="throws" description="When incorrect default value is given" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="170" package="Default">
        <name>getDefault</name>
        <full_name>getDefault</full_name>
        <docblock line="165">
          <description>Returns the default value.</description>
          <long-description></long-description>
          <tag line="165" name="return" description="The default value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="180" package="Default">
        <name>getDescription</name>
        <full_name>getDescription</full_name>
        <docblock line="175">
          <description>Returns the description text.</description>
          <long-description></long-description>
          <tag line="175" name="return" description="The description text" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\Console\Input" line="191" package="Default">
        <name>equals</name>
        <full_name>equals</full_name>
        <docblock line="185">
          <description>Checks whether the given option equals this one</description>
          <long-description></long-description>
          <tag line="185" name="param" description="option to compare" type="\Symfony\Component\Console\Input\InputOption" variable="$option">
            <type by_reference="false">\Symfony\Component\Console\Input\InputOption</type>
          </tag>
          <tag line="185" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$option</name>
          <default></default>
          <type>\Symfony\Component\Console\Input\InputOption</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/Console/Input/InputOption.php</error>
      <error line="28" code="50018">No DocBlock was found for property $name</error>
      <error line="29" code="50018">No DocBlock was found for property $shortcut</error>
      <error line="30" code="50018">No DocBlock was found for property $mode</error>
      <error line="31" code="50018">No DocBlock was found for property $default</error>
      <error line="32" code="50018">No DocBlock was found for property $description</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/ApacheRequest.php" hash="b5b31ac452c5b7350e3a53c4e4d50b98" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation" line="19" package="Default">
      <extends>\Symfony\Component\HttpFoundation\Request</extends>
      <name>ApacheRequest</name>
      <full_name>\Symfony\Component\HttpFoundation\ApacheRequest</full_name>
      <docblock line="14">
        <description>Request represents an HTTP request from an Apache server.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="24" package="Default">
        <name>prepareRequestUri</name>
        <full_name>prepareRequestUri</full_name>
        <docblock line="21">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="32" package="Default">
        <name>prepareBaseUrl</name>
        <full_name>prepareBaseUrl</full_name>
        <docblock line="29">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="47" package="Default">
        <name>preparePathInfo</name>
        <full_name>preparePathInfo</full_name>
        <docblock line="44">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/ApacheRequest.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/RedirectResponse.php" hash="4a22bb2878d80dfbb8590dca7c68e954" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation" line="21" package="Default">
      <extends>\Symfony\Component\HttpFoundation\Response</extends>
      <name>RedirectResponse</name>
      <full_name>\Symfony\Component\HttpFoundation\RedirectResponse</full_name>
      <docblock line="14">
        <description>RedirectResponse represents an HTTP response doing a redirect.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="23" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$targetUrl</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="36" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="25">
          <description>Creates a redirect response so that it conforms to the rules defined for a redirect status code.</description>
          <long-description></long-description>
          <tag line="25" name="param" description="The URL to redirect to" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="25" name="param" description="The status code (302 by default)" type="integer" variable="$status">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="25" name="param" description="The headers (Location is always set to the given url)" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="25" name="see" description="\Symfony\Component\HttpFoundation\http://tools.ietf.org/html/rfc2616#section-10.3" refers="\Symfony\Component\HttpFoundation\http://tools.ietf.org/html/rfc2616#section-10.3"/>
          <tag line="25" name="api" description=""/>
        </docblock>
        <argument line="36">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="36">
          <name>$status</name>
          <default>302</default>
          <type/>
        </argument>
        <argument line="36">
          <name>$headers</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation" line="54" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="51">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="54">
          <name>$url</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="54">
          <name>$status</name>
          <default>302</default>
          <type/>
        </argument>
        <argument line="54">
          <name>$headers</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="64" package="Default">
        <name>getTargetUrl</name>
        <full_name>getTargetUrl</full_name>
        <docblock line="59">
          <description>Returns the target URL.</description>
          <long-description></long-description>
          <tag line="59" name="return" description="target URL" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="76" package="Default">
        <name>setTargetUrl</name>
        <full_name>setTargetUrl</full_name>
        <docblock line="69">
          <description>Sets the redirect target of this response.</description>
          <long-description></long-description>
          <tag line="69" name="param" description="The URL to redirect to" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="return" description="The current response." type="\Symfony\Component\HttpFoundation\RedirectResponse">
            <type by_reference="false">\Symfony\Component\HttpFoundation\RedirectResponse</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/RedirectResponse.php</error>
      <error line="23" code="50018">No DocBlock was found for property $targetUrl</error>
      <error line="51" code="50015">Argument $url is missing from the Docblock of create()</error>
      <error line="51" code="50015">Argument $status is missing from the Docblock of create()</error>
      <error line="51" code="50015">Argument $headers is missing from the Docblock of create()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/SessionStorageInterface.php" hash="221b53a2d3d88e8319f173aa55ed6968" package="Default">
    <interface namespace="Symfony\Component\HttpFoundation\Session\Storage" line="25" package="Default">
      <name>SessionStorageInterface</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface</full_name>
      <docblock line="17">
        <description>StorageInterface.</description>
        <long-description></long-description>
        <tag line="17" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="17" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
        <tag line="17" name="api" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="36" package="Default">
        <name>start</name>
        <full_name>start</full_name>
        <docblock line="27">
          <description>Starts the session.</description>
          <long-description></long-description>
          <tag line="27" name="throws" description="If something goes wrong starting the session." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
          <tag line="27" name="return" description="True if started." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="27" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="43" package="Default">
        <name>isStarted</name>
        <full_name>isStarted</full_name>
        <docblock line="38">
          <description>Checks if the session is started.</description>
          <long-description></long-description>
          <tag line="38" name="return" description="True if started, false otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="52" package="Default">
        <name>getId</name>
        <full_name>getId</full_name>
        <docblock line="45">
          <description>Returns the session ID</description>
          <long-description></long-description>
          <tag line="45" name="return" description="The session ID or empty." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="61" package="Default">
        <name>setId</name>
        <full_name>setId</full_name>
        <docblock line="54">
          <description>Sets the session ID</description>
          <long-description></long-description>
          <tag line="54" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="api" description=""/>
        </docblock>
        <argument line="61">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="70" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="63">
          <description>Returns the session name</description>
          <long-description></long-description>
          <tag line="63" name="return" description="The session name." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="63" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="79" package="Default">
        <name>setName</name>
        <full_name>setName</full_name>
        <docblock line="72">
          <description>Sets the session name</description>
          <long-description></long-description>
          <tag line="72" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="72" name="api" description=""/>
        </docblock>
        <argument line="79">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="104" package="Default">
        <name>regenerate</name>
        <full_name>regenerate</full_name>
        <docblock line="81">
          <description>Regenerates id that represents this storage.</description>
          <long-description>&lt;p&gt;This method must invoke session_regenerate_id($destroy) unless
this interface is used for a storage object designed for unit
or functional testing where a real PHP session would interfere
with testing.&lt;/p&gt;

&lt;p&gt;Note regenerate+destroy should not clear the session data in memory
only delete the session data from persistent storage.&lt;/p&gt;</long-description>
          <tag line="81" name="param" description="Destroy session when regenerating?" type="Boolean" variable="$destroy">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="81" name="param" description="Sets the cookie lifetime for the session cookie. A null value&#10;                         will leave the system settings unchanged, 0 sets the cookie&#10;                         to expire with browser session. Time is in seconds, and is&#10;                         not a Unix timestamp." type="integer" variable="$lifetime">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="81" name="return" description="True if session regenerated, false if error" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="81" name="throws" description="If an error occurs while regenerating this storage" type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
          <tag line="81" name="api" description=""/>
        </docblock>
        <argument line="104">
          <name>$destroy</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="104">
          <name>$lifetime</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="117" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="106">
          <description>Force the session to be saved and closed.</description>
          <long-description>&lt;p&gt;This method must invoke session_write_close() unless this interface is
used for a storage object design for unit or functional testing where
a real PHP session would interfere with testing, in which case it
it should actually persist the session data if required.&lt;/p&gt;</long-description>
          <tag line="106" name="throws" description="If the session is saved without being started, or if the session&#10;                          is already closed." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="122" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="119">
          <description>Clear all session data in memory.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="133" package="Default">
        <name>getBag</name>
        <full_name>getBag</full_name>
        <docblock line="124">
          <description>Gets a SessionBagInterface by name.</description>
          <long-description></long-description>
          <tag line="124" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="124" name="return" description="" type="\Symfony\Component\HttpFoundation\Session\SessionBagInterface">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\SessionBagInterface</type>
          </tag>
          <tag line="124" name="throws" description="If the bag does not exist" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="133">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="140" package="Default">
        <name>registerBag</name>
        <full_name>registerBag</full_name>
        <docblock line="135">
          <description>Registers a SessionBagInterface for use.</description>
          <long-description></long-description>
          <tag line="135" name="param" description="" type="\Symfony\Component\HttpFoundation\Session\SessionBagInterface" variable="$bag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\SessionBagInterface</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$bag</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Session\SessionBagInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="145" package="Default">
        <name>getMetadataBag</name>
        <full_name>getMetadataBag</full_name>
        <docblock line="142">
          <description></description>
          <long-description></long-description>
          <tag line="142" name="return" description="" type="\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/SessionStorageInterface.php</error>
      <error line="142" code="50012">No short description for method getMetadataBag()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/MockArraySessionStorage.php" hash="7e37a51fdb963cd31785c6b9a1dcc7d7" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="29" package="Default">
      <extends/>
      <implements>\Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface</implements>
      <name>MockArraySessionStorage</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\MockArraySessionStorage</full_name>
      <docblock line="17">
        <description>MockArraySessionStorage mocks the session for unit tests.</description>
        <long-description>&lt;p&gt;No PHP session is actually started since a session can be initialized
and shutdown only once per PHP execution cycle.&lt;/p&gt;

&lt;p&gt;When doing functional testing, you should use MockFileSessionStorage instead.&lt;/p&gt;</long-description>
        <tag line="17" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="17" name="author" description="Bulat Shakirzyanov &lt;mallluhuct@gmail.com&gt;"/>
        <tag line="17" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$id</name>
        <default>''</default>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
          <tag line="31" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$name</name>
        <default></default>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
          <tag line="36" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$started</name>
        <default>false</default>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
          <tag line="41" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="49" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$closed</name>
        <default>false</default>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
          <tag line="46" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$data</name>
        <default>array()</default>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
          <tag line="51" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="59" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$metadataBag</name>
        <default></default>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
          <tag line="56" name="var" description="" type="\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="64" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$bags</name>
        <default></default>
        <docblock line="61">
          <description></description>
          <long-description></long-description>
          <tag line="61" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="72" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="66">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="66" name="param" description="Session name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="param" description="MetadataBag instance." type="\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" variable="$metaBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$name</name>
          <default>'MOCKSESSID'</default>
          <type/>
        </argument>
        <argument line="72">
          <name>$metaBag</name>
          <default>null</default>
          <type>\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="83" package="Default">
        <name>setSessionData</name>
        <full_name>setSessionData</full_name>
        <docblock line="78">
          <description>Sets the session data.</description>
          <long-description></long-description>
          <tag line="78" name="param" description="" type="array" variable="$array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$array</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="91" package="Default">
        <name>start</name>
        <full_name>start</full_name>
        <docblock line="88">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="109" package="Default">
        <name>regenerate</name>
        <full_name>regenerate</full_name>
        <docblock line="106">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="109">
          <name>$destroy</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="109">
          <name>$lifetime</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="124" package="Default">
        <name>getId</name>
        <full_name>getId</full_name>
        <docblock line="121">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="132" package="Default">
        <name>setId</name>
        <full_name>setId</full_name>
        <docblock line="129">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="132">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="144" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="141">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="152" package="Default">
        <name>setName</name>
        <full_name>setName</full_name>
        <docblock line="149">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="152">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="160" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="157">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="172" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="169">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="189" package="Default">
        <name>registerBag</name>
        <full_name>registerBag</full_name>
        <docblock line="186">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="189">
          <name>$bag</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Session\SessionBagInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="197" package="Default">
        <name>getBag</name>
        <full_name>getBag</full_name>
        <docblock line="194">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="197">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="213" package="Default">
        <name>isStarted</name>
        <full_name>isStarted</full_name>
        <docblock line="210">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="223" package="Default">
        <name>setMetadataBag</name>
        <full_name>setMetadataBag</full_name>
        <docblock line="218">
          <description>Sets the MetadataBag.</description>
          <long-description></long-description>
          <tag line="218" name="param" description="" type="\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" variable="$bag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
          </tag>
        </docblock>
        <argument line="223">
          <name>$bag</name>
          <default>null</default>
          <type>\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="237" package="Default">
        <name>getMetadataBag</name>
        <full_name>getMetadataBag</full_name>
        <docblock line="232">
          <description>Gets the MetadataBag.</description>
          <long-description></long-description>
          <tag line="232" name="return" description="" type="\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="250" package="Default">
        <name>generateId</name>
        <full_name>generateId</full_name>
        <docblock line="242">
          <description>Generates a session ID.</description>
          <long-description>&lt;p&gt;This doesn't need to be particularly cryptographically secure since this is just
a mock.&lt;/p&gt;</long-description>
          <tag line="242" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="255" package="Default">
        <name>loadSession</name>
        <full_name>loadSession</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/MockArraySessionStorage.php</error>
      <critical line="31" code="50019">No short description for property $id</critical>
      <critical line="36" code="50019">No short description for property $name</critical>
      <critical line="41" code="50019">No short description for property $started</critical>
      <critical line="46" code="50019">No short description for property $closed</critical>
      <critical line="51" code="50019">No short description for property $data</critical>
      <critical line="56" code="50019">No short description for property $metadataBag</critical>
      <critical line="61" code="50019">No short description for property $bags</critical>
      <error line="106" code="50015">Argument $destroy is missing from the Docblock of regenerate()</error>
      <error line="106" code="50015">Argument $lifetime is missing from the Docblock of regenerate()</error>
      <error line="129" code="50015">Argument $id is missing from the Docblock of setId()</error>
      <error line="149" code="50015">Argument $name is missing from the Docblock of setName()</error>
      <error line="186" code="50015">Argument $bag is missing from the Docblock of registerBag()</error>
      <error line="194" code="50015">Argument $name is missing from the Docblock of getBag()</error>
      <error line="255" code="50010">No DocBlock was found for method loadSession()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/NativeSessionStorage.php" hash="a235ef259a4885976ae830bfd9928267" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="25" package="Default">
      <extends/>
      <implements>\Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface</implements>
      <name>NativeSessionStorage</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage</full_name>
      <docblock line="20">
        <description>This provides a base class for session attribute storage.</description>
        <long-description></long-description>
        <tag line="20" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="32" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$bags</name>
        <default></default>
        <docblock line="27">
          <description>Array of SessionBagInterface</description>
          <long-description></long-description>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$started</name>
        <default>false</default>
        <docblock line="34">
          <description></description>
          <long-description></long-description>
          <tag line="34" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="42" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$closed</name>
        <default>false</default>
        <docblock line="39">
          <description></description>
          <long-description></long-description>
          <tag line="39" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="47" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$saveHandler</name>
        <default></default>
        <docblock line="44">
          <description></description>
          <long-description></long-description>
          <tag line="44" name="var" description="" type="\Symfony\Component\HttpFoundation\Session\Storage\Proxy\AbstractProxy">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Storage\Proxy\AbstractProxy</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$metadataBag</name>
        <default></default>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
          <tag line="49" name="var" description="" type="\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="98" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="54">
          <description>Constructor.</description>
          <long-description>&lt;p&gt;Depending on how you want the storage driver to behave you probably
want to override this constructor entirely.&lt;/p&gt;

&lt;p&gt;List of options for $options array with their defaults.&lt;/p&gt;</long-description>
          <tag line="54" name="see" description="for options&#10;but we omit 'session.' from the beginning of the keys for convenience.&#10;(&quot;auto_start&quot;, is not supported as it tells PHP to start a session before&#10;PHP starts to execute user-land code. Setting during runtime has no effect).&#10;cache_limiter, &quot;nocache&quot; (use &quot;0&quot; to prevent headers from being sent entirely).&#10;cookie_domain, &quot;&quot;&#10;cookie_httponly, &quot;&quot;&#10;cookie_lifetime, &quot;0&quot;&#10;cookie_path, &quot;/&quot;&#10;cookie_secure, &quot;&quot;&#10;entropy_file, &quot;&quot;&#10;entropy_length, &quot;0&quot;&#10;gc_divisor, &quot;100&quot;&#10;gc_maxlifetime, &quot;1440&quot;&#10;gc_probability, &quot;1&quot;&#10;hash_bits_per_character, &quot;4&quot;&#10;hash_function, &quot;0&quot;&#10;name, &quot;PHPSESSID&quot;&#10;referer_check, &quot;&quot;&#10;serialize_handler, &quot;php&quot;&#10;use_cookies, &quot;1&quot;&#10;use_only_cookies, &quot;1&quot;&#10;use_trans_sid, &quot;0&quot;&#10;upload_progress.enabled, &quot;1&quot;&#10;upload_progress.cleanup, &quot;1&quot;&#10;upload_progress.prefix, &quot;upload_progress_&quot;&#10;upload_progress.name, &quot;PHP_SESSION_UPLOAD_PROGRESS&quot;&#10;upload_progress.freq, &quot;1%&quot;&#10;upload_progress.min-freq, &quot;1&quot;&#10;url_rewriter.tags, &quot;a=href,area=href,frame=src,form=,fieldset=&quot;" refers="\Symfony\Component\HttpFoundation\Session\Storage\http://php.net/session.configuration"/>
          <tag line="54" name="param" description="Session configuration options." type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="54" name="param" description="SessionHandlerInterface." type="object" variable="$handler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="54" name="param" description="MetadataBag." type="\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" variable="$metaBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="98">
          <name>$handler</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="98">
          <name>$metaBag</name>
          <default>null</default>
          <type>\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="119" package="Default">
        <name>getSaveHandler</name>
        <full_name>getSaveHandler</full_name>
        <docblock line="114">
          <description>Gets the save handler instance.</description>
          <long-description></long-description>
          <tag line="114" name="return" description="" type="\Symfony\Component\HttpFoundation\Session\Storage\Proxy\AbstractProxy">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Storage\Proxy\AbstractProxy</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="127" package="Default">
        <name>start</name>
        <full_name>start</full_name>
        <docblock line="124">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="162" package="Default">
        <name>getId</name>
        <full_name>getId</full_name>
        <docblock line="159">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="174" package="Default">
        <name>setId</name>
        <full_name>setId</full_name>
        <docblock line="171">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="174">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="182" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="179">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="190" package="Default">
        <name>setName</name>
        <full_name>setName</full_name>
        <docblock line="187">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="190">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="198" package="Default">
        <name>regenerate</name>
        <full_name>regenerate</full_name>
        <docblock line="195">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="198">
          <name>$destroy</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="198">
          <name>$lifetime</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="214" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="211">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="228" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="225">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="245" package="Default">
        <name>registerBag</name>
        <full_name>registerBag</full_name>
        <docblock line="242">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="245">
          <name>$bag</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Session\SessionBagInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="253" package="Default">
        <name>getBag</name>
        <full_name>getBag</full_name>
        <docblock line="250">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="253">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="273" package="Default">
        <name>setMetadataBag</name>
        <full_name>setMetadataBag</full_name>
        <docblock line="268">
          <description>Sets the MetadataBag.</description>
          <long-description></long-description>
          <tag line="268" name="param" description="" type="\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" variable="$metaBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
          </tag>
        </docblock>
        <argument line="273">
          <name>$metaBag</name>
          <default>null</default>
          <type>\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="287" package="Default">
        <name>getMetadataBag</name>
        <full_name>getMetadataBag</full_name>
        <docblock line="282">
          <description>Gets the MetadataBag.</description>
          <long-description></long-description>
          <tag line="282" name="return" description="" type="\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="295" package="Default">
        <name>isStarted</name>
        <full_name>isStarted</full_name>
        <docblock line="292">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="310" package="Default">
        <name>setOptions</name>
        <full_name>setOptions</full_name>
        <docblock line="300">
          <description>Sets session.* ini variables.</description>
          <long-description>&lt;p&gt;For convenience we omit 'session.' from the beginning of the keys.
Explicitly ignores other ini keys.&lt;/p&gt;</long-description>
          <tag line="300" name="param" description="Session ini directives array(key =&gt; value)." type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="300" name="see" description="\Symfony\Component\HttpFoundation\Session\Storage\http://php.net/session.configuration" refers="\Symfony\Component\HttpFoundation\Session\Storage\http://php.net/session.configuration"/>
        </docblock>
        <argument line="310">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="346" package="Default">
        <name>setSaveHandler</name>
        <full_name>setSaveHandler</full_name>
        <docblock line="331">
          <description>Registers save handler as a PHP session handler.</description>
          <long-description>&lt;p&gt;To use internal PHP session save handlers, override this method using ini_set with
session.save_handlers and session.save_path e.g.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ini_set('session.save_handlers', 'files');
ini_set('session.save_path', /tmp');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="331" name="see" description="\Symfony\Component\HttpFoundation\Session\Storage\http://php.net/session-set-save-handler" refers="\Symfony\Component\HttpFoundation\Session\Storage\http://php.net/session-set-save-handler"/>
          <tag line="331" name="see" description="\Symfony\Component\HttpFoundation\Session\Storage\http://php.net/sessionhandlerinterface" refers="\Symfony\Component\HttpFoundation\Session\Storage\http://php.net/sessionhandlerinterface"/>
          <tag line="331" name="see" description="\Symfony\Component\HttpFoundation\Session\Storage\http://php.net/sessionhandler" refers="\Symfony\Component\HttpFoundation\Session\Storage\http://php.net/sessionhandler"/>
          <tag line="331" name="param" description="Default null means NativeProxy." type="object" variable="$saveHandler">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="346">
          <name>$saveHandler</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="383" package="Default">
        <name>loadSession</name>
        <full_name>loadSession</full_name>
        <docblock line="373">
          <description>Load the session with attributes.</description>
          <long-description>&lt;p&gt;After starting the session, PHP retrieves the session from whatever handlers
are set to (either PHP's internal, or a custom save handler set with session_set_save_handler()).
PHP takes the return value from the read() handler, unserializes it
and populates $_SESSION with the result automatically.&lt;/p&gt;</long-description>
          <tag line="373" name="param" description="" type="array|null" variable="$session">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="383">
          <name>$session</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/NativeSessionStorage.php</error>
      <critical line="34" code="50019">No short description for property $started</critical>
      <critical line="39" code="50019">No short description for property $closed</critical>
      <critical line="44" code="50019">No short description for property $saveHandler</critical>
      <critical line="49" code="50019">No short description for property $metadataBag</critical>
      <error line="171" code="50015">Argument $id is missing from the Docblock of setId()</error>
      <error line="187" code="50015">Argument $name is missing from the Docblock of setName()</error>
      <error line="195" code="50015">Argument $destroy is missing from the Docblock of regenerate()</error>
      <error line="195" code="50015">Argument $lifetime is missing from the Docblock of regenerate()</error>
      <error line="242" code="50015">Argument $bag is missing from the Docblock of registerBag()</error>
      <error line="250" code="50015">Argument $name is missing from the Docblock of getBag()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/MockFileSessionStorage.php" hash="a390a5fb1dd3e3dc8d16e2a3c9e5d29e" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="25" package="Default">
      <extends>\Symfony\Component\HttpFoundation\Session\Storage\MockArraySessionStorage</extends>
      <name>MockFileSessionStorage</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage</full_name>
      <docblock line="14">
        <description>MockFileSessionStorage is used to mock sessions for
functional testing when done in a single PHP process.</description>
        <long-description>&lt;p&gt;No PHP session is actually started since a session can be initialized
and shutdown only once per PHP execution cycle and this class does
not pollute any session related globals, including session_&lt;em&gt;() functions
or session.&lt;/em&gt; PHP ini directives.&lt;/p&gt;</long-description>
        <tag line="14" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="30" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$savePath</name>
        <default></default>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag line="27" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$sessionData</name>
        <default></default>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
          <tag line="32" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="44" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="37">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="37" name="param" description="Path of directory to save session files." type="string" variable="$savePath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="Session name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="MetadataBag instance." type="\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" variable="$metaBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$savePath</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="44">
          <name>$name</name>
          <default>'MOCKSESSID'</default>
          <type/>
        </argument>
        <argument line="44">
          <name>$metaBag</name>
          <default>null</default>
          <type>\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="62" package="Default">
        <name>start</name>
        <full_name>start</full_name>
        <docblock line="59">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="82" package="Default">
        <name>regenerate</name>
        <full_name>regenerate</full_name>
        <docblock line="79">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="82">
          <name>$destroy</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="82">
          <name>$lifetime</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="98" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="95">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="116" package="Default">
        <name>destroy</name>
        <full_name>destroy</full_name>
        <docblock line="112">
          <description>Deletes a session from persistent storage.</description>
          <long-description>&lt;p&gt;Deliberately leaves session data in memory intact.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="128" package="Default">
        <name>getFilePath</name>
        <full_name>getFilePath</full_name>
        <docblock line="123">
          <description>Calculate path to file.</description>
          <long-description></long-description>
          <tag line="123" name="return" description="File path" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="136" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="133">
          <description>Reads session from storage and loads session.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/MockFileSessionStorage.php</error>
      <critical line="27" code="50019">No short description for property $savePath</critical>
      <critical line="32" code="50019">No short description for property $sessionData</critical>
      <error line="79" code="50015">Argument $destroy is missing from the Docblock of regenerate()</error>
      <error line="79" code="50015">Argument $lifetime is missing from the Docblock of regenerate()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Proxy/NativeProxy.php" hash="44a07157d9bfa9b7f4561c813f5213bd" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="21" package="Default">
      <extends>\Symfony\Component\HttpFoundation\Session\Storage\Proxy\AbstractProxy</extends>
      <name>NativeProxy</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\Proxy\NativeProxy</full_name>
      <docblock line="14">
        <description>NativeProxy.</description>
        <long-description>&lt;p&gt;This proxy is built-in session handlers in PHP 5.3.x&lt;/p&gt;</long-description>
        <tag line="14" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="26" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="23">
          <description>Constructor.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="37" package="Default">
        <name>isWrapper</name>
        <full_name>isWrapper</full_name>
        <docblock line="32">
          <description>Returns true if this handler wraps an internal PHP session save handler using \SessionHandler.</description>
          <long-description></long-description>
          <tag line="32" name="return" description="False." type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Proxy/NativeProxy.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Proxy/SessionHandlerProxy.php" hash="a69eb6d9f22d2453ccd1c8215ccbf7d8" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="19" package="Default">
      <extends>\Symfony\Component\HttpFoundation\Session\Storage\Proxy\AbstractProxy</extends>
      <implements>\SessionHandlerInterface</implements>
      <name>SessionHandlerProxy</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy</full_name>
      <docblock line="14">
        <description>SessionHandler proxy.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="24" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" package="Default">
        <name>$handler</name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="\SessionHandlerInterface">
            <type by_reference="false">\SessionHandlerInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="31" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="26">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="26" name="param" description="" type="\SessionHandlerInterface" variable="$handler">
            <type by_reference="false">\SessionHandlerInterface</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$handler</name>
          <default></default>
          <type>\SessionHandlerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="43" package="Default">
        <name>open</name>
        <full_name>open</full_name>
        <docblock line="40">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="43">
          <name>$savePath</name>
          <default></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$sessionName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="57" package="Default">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="54">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="67" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="64">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="67">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="75" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="72">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="75">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="83" package="Default">
        <name>destroy</name>
        <full_name>destroy</full_name>
        <docblock line="80">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="83">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="91" package="Default">
        <name>gc</name>
        <full_name>gc</full_name>
        <docblock line="88">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="91">
          <name>$maxlifetime</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Proxy/SessionHandlerProxy.php</error>
      <critical line="21" code="50019">No short description for property $handler</critical>
      <error line="40" code="50015">Argument $savePath is missing from the Docblock of open()</error>
      <error line="40" code="50015">Argument $sessionName is missing from the Docblock of open()</error>
      <error line="64" code="50015">Argument $id is missing from the Docblock of read()</error>
      <error line="72" code="50015">Argument $id is missing from the Docblock of write()</error>
      <error line="72" code="50015">Argument $data is missing from the Docblock of write()</error>
      <error line="80" code="50015">Argument $id is missing from the Docblock of destroy()</error>
      <error line="88" code="50015">Argument $maxlifetime is missing from the Docblock of gc()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Proxy/AbstractProxy.php" hash="611ed6cfd1f5004eab42568e18c9f2dc" package="Default">
    <class final="false" abstract="true" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="19" package="Default">
      <extends/>
      <name>AbstractProxy</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\Proxy\AbstractProxy</full_name>
      <docblock line="14">
        <description>AbstractProxy.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="26" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" package="Default">
        <name>$wrapper</name>
        <default>false</default>
        <docblock line="21">
          <description>Flag if handler wraps an internal PHP session handler (using \SessionHandler).</description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" package="Default">
        <name>$active</name>
        <default>false</default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
          <tag line="28" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" package="Default">
        <name>$saveHandlerName</name>
        <default></default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="43" package="Default">
        <name>getSaveHandlerName</name>
        <full_name>getSaveHandlerName</full_name>
        <docblock line="38">
          <description>Gets the session.save_handler name.</description>
          <long-description></long-description>
          <tag line="38" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="53" package="Default">
        <name>isSessionHandlerInterface</name>
        <full_name>isSessionHandlerInterface</full_name>
        <docblock line="48">
          <description>Is this proxy handler and instance of \SessionHandlerInterface.</description>
          <long-description></long-description>
          <tag line="48" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="63" package="Default">
        <name>isWrapper</name>
        <full_name>isWrapper</full_name>
        <docblock line="58">
          <description>Returns true if this handler wraps an internal PHP session save handler using \SessionHandler.</description>
          <long-description></long-description>
          <tag line="58" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="73" package="Default">
        <name>isActive</name>
        <full_name>isActive</full_name>
        <docblock line="68">
          <description>Has a session started?</description>
          <long-description></long-description>
          <tag line="68" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="83" package="Default">
        <name>setActive</name>
        <full_name>setActive</full_name>
        <docblock line="78">
          <description>Sets the active flag.</description>
          <long-description></long-description>
          <tag line="78" name="param" description="" type="Boolean" variable="$flag">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$flag</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="93" package="Default">
        <name>getId</name>
        <full_name>getId</full_name>
        <docblock line="88">
          <description>Gets the session ID.</description>
          <long-description></long-description>
          <tag line="88" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="103" package="Default">
        <name>setId</name>
        <full_name>setId</full_name>
        <docblock line="98">
          <description>Sets the session ID.</description>
          <long-description></long-description>
          <tag line="98" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="117" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="112">
          <description>Gets the session name.</description>
          <long-description></long-description>
          <tag line="112" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Proxy" line="127" package="Default">
        <name>setName</name>
        <full_name>setName</full_name>
        <docblock line="122">
          <description>Sets the session name.</description>
          <long-description></long-description>
          <tag line="122" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="127">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Proxy/AbstractProxy.php</error>
      <critical line="28" code="50019">No short description for property $active</critical>
      <critical line="33" code="50019">No short description for property $saveHandlerName</critical>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Handler/NativeSessionHandler.php" hash="6cceeeecb21f9be4a5160de9beedb000" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="21" package="Default">
      <extends>\SessionHandler</extends>
      <name>NativeSessionHandler</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeSessionHandler</full_name>
    </class>
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="23" package="Default">
      <extends/>
      <name>NativeSessionHandler</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeSessionHandler</full_name>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Handler/NativeSessionHandler.php</error>
      <error line="21" code="50000">No DocBlock was found for \Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeSessionHandler</error>
      <error line="23" code="50000">No DocBlock was found for \Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeSessionHandler</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Handler/NativeFileSessionHandler.php" hash="d92f0c04f60e7d11ae45d3dbc330a5f8" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="21" package="Default">
      <extends>\Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeSessionHandler</extends>
      <name>NativeFileSessionHandler</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler</full_name>
      <docblock line="14">
        <description>NativeFileSessionHandler.</description>
        <long-description>&lt;p&gt;Native session handler using PHP's built in file storage.&lt;/p&gt;</long-description>
        <tag line="14" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="34" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="23">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="23" name="param" description="Path of directory to save session files.&#10;                        Default null will leave setting as defined by PHP.&#10;                        '/path', 'N;/path', or 'N;octal-mode;/path" type="string" variable="$savePath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="see" description="for further details." refers="\Symfony\Component\HttpFoundation\Session\Storage\Handler\http://php.net/session.configuration.php#ini.session.save-path"/>
          <tag line="23" name="throws" description="On invalid $savePath" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$savePath</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Handler/NativeFileSessionHandler.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Handler/NullSessionHandler.php" hash="e72c7603e426f517cf4cc027f6c9f153" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="23" package="Default">
      <extends/>
      <implements>\SessionHandlerInterface</implements>
      <name>NullSessionHandler</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\Handler\NullSessionHandler</full_name>
      <docblock line="14">
        <description>NullSessionHandler.</description>
        <long-description>&lt;p&gt;Can be used in unit testing or in a situations where persisted sessions are not desired.&lt;/p&gt;</long-description>
        <tag line="14" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="28" package="Default">
        <name>open</name>
        <full_name>open</full_name>
        <docblock line="25">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="28">
          <name>$savePath</name>
          <default></default>
          <type/>
        </argument>
        <argument line="28">
          <name>$sessionName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="36" package="Default">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="33">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="44" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="41">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="44">
          <name>$sessionId</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="52" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="49">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="52">
          <name>$sessionId</name>
          <default></default>
          <type/>
        </argument>
        <argument line="52">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="60" package="Default">
        <name>destroy</name>
        <full_name>destroy</full_name>
        <docblock line="57">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="60">
          <name>$sessionId</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="68" package="Default">
        <name>gc</name>
        <full_name>gc</full_name>
        <docblock line="65">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="68">
          <name>$lifetime</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Handler/NullSessionHandler.php</error>
      <error line="25" code="50015">Argument $savePath is missing from the Docblock of open()</error>
      <error line="25" code="50015">Argument $sessionName is missing from the Docblock of open()</error>
      <error line="41" code="50015">Argument $sessionId is missing from the Docblock of read()</error>
      <error line="49" code="50015">Argument $sessionId is missing from the Docblock of write()</error>
      <error line="49" code="50015">Argument $data is missing from the Docblock of write()</error>
      <error line="57" code="50015">Argument $sessionId is missing from the Docblock of destroy()</error>
      <error line="65" code="50015">Argument $lifetime is missing from the Docblock of gc()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Handler/MemcachedSessionHandler.php" hash="61d5c03b0e181e569ae3d00aec075525" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="24" package="Default">
      <extends/>
      <implements>\SessionHandlerInterface</implements>
      <name>MemcachedSessionHandler</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\Handler\MemcachedSessionHandler</full_name>
      <docblock line="14">
        <description>MemcachedSessionHandler.</description>
        <long-description>&lt;p&gt;Memcached based session storage handler based on the Memcached class
provided by the PHP memcached extension.&lt;/p&gt;</long-description>
        <tag line="14" name="see" description="\Symfony\Component\HttpFoundation\Session\Storage\Handler\http://php.net/memcached" refers="\Symfony\Component\HttpFoundation\Session\Storage\Handler\http://php.net/memcached"/>
        <tag line="14" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="29" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" package="Default">
        <name>$memcached</name>
        <default></default>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
          <tag line="26" name="var" description="Memcached driver." type="\Memcached">
            <type by_reference="false">\Memcached</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" package="Default">
        <name>$ttl</name>
        <default></default>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
          <tag line="31" name="var" description="Time to live in seconds" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="39" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" package="Default">
        <name>$prefix</name>
        <default></default>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
          <tag line="36" name="var" description="Key prefix for shared environments." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="53" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="41">
          <description>Constructor.</description>
          <long-description>&lt;p&gt;List of available options:
 * prefix: The prefix to use for the memcached keys in order to avoid collision
 * expiretime: The time to live in seconds&lt;/p&gt;</long-description>
          <tag line="41" name="param" description="A \Memcached instance" type="\Memcached" variable="$memcached">
            <type by_reference="false">\Memcached</type>
          </tag>
          <tag line="41" name="param" description="An associative array of Memcached options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="41" name="throws" description="When unsupported options are passed" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$memcached</name>
          <default></default>
          <type>\Memcached</type>
        </argument>
        <argument line="53">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="70" package="Default">
        <name>open</name>
        <full_name>open</full_name>
        <docblock line="67">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="70">
          <name>$savePath</name>
          <default></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$sessionName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="78" package="Default">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="75">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="86" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="83">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="86">
          <name>$sessionId</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="94" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="91">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="94">
          <name>$sessionId</name>
          <default></default>
          <type/>
        </argument>
        <argument line="94">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="102" package="Default">
        <name>destroy</name>
        <full_name>destroy</full_name>
        <docblock line="99">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="102">
          <name>$sessionId</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="110" package="Default">
        <name>gc</name>
        <full_name>gc</full_name>
        <docblock line="107">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="110">
          <name>$lifetime</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Handler/MemcachedSessionHandler.php</error>
      <error line="67" code="50015">Argument $savePath is missing from the Docblock of open()</error>
      <error line="67" code="50015">Argument $sessionName is missing from the Docblock of open()</error>
      <error line="83" code="50015">Argument $sessionId is missing from the Docblock of read()</error>
      <error line="91" code="50015">Argument $sessionId is missing from the Docblock of write()</error>
      <error line="91" code="50015">Argument $data is missing from the Docblock of write()</error>
      <error line="99" code="50015">Argument $sessionId is missing from the Docblock of destroy()</error>
      <error line="107" code="50015">Argument $lifetime is missing from the Docblock of gc()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Handler/PdoSessionHandler.php" hash="07f03f790f0c7770df578ead67fdac8f" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="20" package="Default">
      <extends/>
      <implements>\SessionHandlerInterface</implements>
      <name>PdoSessionHandler</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler</full_name>
      <docblock line="14">
        <description>PdoSessionHandler.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="author" description="Michael Williams &lt;michael.williams@funsational.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="25" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" package="Default">
        <name>$pdo</name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag line="22" name="var" description="PDO instance." type="\PDO">
            <type by_reference="false">\PDO</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="30" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" package="Default">
        <name>$dbOptions</name>
        <default></default>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag line="27" name="var" description="Database options." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="46" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="32">
          <description>Constructor.</description>
          <long-description>&lt;p&gt;List of available options:
 * db_table: The name of the table [required]
 * db_id_col: The column where to store the session id [default: sess_id]
 * db_data_col: The column where to store the session data [default: sess_data]
 * db_time_col: The column where to store the timestamp [default: sess_time]&lt;/p&gt;</long-description>
          <tag line="32" name="param" description="A \PDO instance" type="\PDO" variable="$pdo">
            <type by_reference="false">\PDO</type>
          </tag>
          <tag line="32" name="param" description="An associative array of DB options" type="array" variable="$dbOptions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="32" name="throws" description="When &quot;db_table&quot; option is not provided" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$pdo</name>
          <default></default>
          <type>\PDO</type>
        </argument>
        <argument line="46">
          <name>$dbOptions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="63" package="Default">
        <name>open</name>
        <full_name>open</full_name>
        <docblock line="60">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="63">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="63">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="71" package="Default">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="68">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="79" package="Default">
        <name>destroy</name>
        <full_name>destroy</full_name>
        <docblock line="76">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="79">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="102" package="Default">
        <name>gc</name>
        <full_name>gc</full_name>
        <docblock line="99">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="102">
          <name>$lifetime</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="125" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="122">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="125">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="159" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="156">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="159">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="159">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="221" package="Default">
        <name>createNewSession</name>
        <full_name>createNewSession</full_name>
        <docblock line="213">
          <description>Creates a new session with the given $id and $data</description>
          <long-description></long-description>
          <tag line="213" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="213" name="param" description="" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="213" name="return" description="True." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="221">
          <name>$data</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Handler/PdoSessionHandler.php</error>
      <error line="60" code="50015">Argument $path is missing from the Docblock of open()</error>
      <error line="60" code="50015">Argument $name is missing from the Docblock of open()</error>
      <error line="76" code="50015">Argument $id is missing from the Docblock of destroy()</error>
      <error line="99" code="50015">Argument $lifetime is missing from the Docblock of gc()</error>
      <error line="122" code="50015">Argument $id is missing from the Docblock of read()</error>
      <error line="156" code="50015">Argument $id is missing from the Docblock of write()</error>
      <error line="156" code="50015">Argument $data is missing from the Docblock of write()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Handler/MemcacheSessionHandler.php" hash="f6bb672ce4d010b43cf9390de01cf48e" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="19" package="Default">
      <extends/>
      <implements>\SessionHandlerInterface</implements>
      <name>MemcacheSessionHandler</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\Handler\MemcacheSessionHandler</full_name>
      <docblock line="14">
        <description>MemcacheSessionHandler.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="24" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" package="Default">
        <name>$memcache</name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
          <tag line="21" name="var" description="Memcache driver." type="\Memcache">
            <type by_reference="false">\Memcache</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="29" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" package="Default">
        <name>$ttl</name>
        <default></default>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
          <tag line="26" name="var" description="Time to live in seconds" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" package="Default">
        <name>$prefix</name>
        <default></default>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
          <tag line="31" name="var" description="Key prefix for shared environments." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="48" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="36">
          <description>Constructor.</description>
          <long-description>&lt;p&gt;List of available options:
 * prefix: The prefix to use for the memcache keys in order to avoid collision
 * expiretime: The time to live in seconds&lt;/p&gt;</long-description>
          <tag line="36" name="param" description="A \Memcache instance" type="\Memcache" variable="$memcache">
            <type by_reference="false">\Memcache</type>
          </tag>
          <tag line="36" name="param" description="An associative array of Memcache options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="36" name="throws" description="When unsupported options are passed" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$memcache</name>
          <default></default>
          <type>\Memcache</type>
        </argument>
        <argument line="48">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="64" package="Default">
        <name>open</name>
        <full_name>open</full_name>
        <docblock line="61">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="64">
          <name>$savePath</name>
          <default></default>
          <type/>
        </argument>
        <argument line="64">
          <name>$sessionName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="72" package="Default">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="69">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="80" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="77">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="80">
          <name>$sessionId</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="88" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="85">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="88">
          <name>$sessionId</name>
          <default></default>
          <type/>
        </argument>
        <argument line="88">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="96" package="Default">
        <name>destroy</name>
        <full_name>destroy</full_name>
        <docblock line="93">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="96">
          <name>$sessionId</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="104" package="Default">
        <name>gc</name>
        <full_name>gc</full_name>
        <docblock line="101">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="104">
          <name>$lifetime</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Handler/MemcacheSessionHandler.php</error>
      <error line="61" code="50015">Argument $savePath is missing from the Docblock of open()</error>
      <error line="61" code="50015">Argument $sessionName is missing from the Docblock of open()</error>
      <error line="77" code="50015">Argument $sessionId is missing from the Docblock of read()</error>
      <error line="85" code="50015">Argument $sessionId is missing from the Docblock of write()</error>
      <error line="85" code="50015">Argument $data is missing from the Docblock of write()</error>
      <error line="93" code="50015">Argument $sessionId is missing from the Docblock of destroy()</error>
      <error line="101" code="50015">Argument $lifetime is missing from the Docblock of gc()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Handler/MongoDbSessionHandler.php" hash="e3ef0975a329e9526c55b1102f9e11fa" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="19" package="Default">
      <extends/>
      <implements>\SessionHandlerInterface</implements>
      <name>MongoDbSessionHandler</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler</full_name>
      <docblock line="14">
        <description>MongoDB session handler</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Markus Bachmann &lt;markus.bachmann@bachi.biz&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="24" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" package="Default">
        <name>$mongo</name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="\Mongo">
            <type by_reference="false">\Mongo</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="29" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" package="Default">
        <name>$collection</name>
        <default></default>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
          <tag line="26" name="var" description="" type="\MongoCollection">
            <type by_reference="false">\MongoCollection</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" package="Default">
        <name>$options</name>
        <default></default>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
          <tag line="31" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="45" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="36">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="A MongoClient or Mongo instance" type="\Mongo|\MongoClient" variable="$mongo">
            <type by_reference="false">\Mongo</type>
            <type by_reference="false">\MongoClient</type>
          </tag>
          <tag line="36" name="param" description="An associative array of field options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="36" name="throws" description="When MongoClient or Mongo instance not provided" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="36" name="throws" description="When &quot;database&quot; or &quot;collection&quot; not provided" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$mongo</name>
          <default></default>
          <type/>
        </argument>
        <argument line="45">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="67" package="Default">
        <name>open</name>
        <full_name>open</full_name>
        <docblock line="64">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="67">
          <name>$savePath</name>
          <default></default>
          <type/>
        </argument>
        <argument line="67">
          <name>$sessionName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="75" package="Default">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="72">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="83" package="Default">
        <name>destroy</name>
        <full_name>destroy</full_name>
        <docblock line="80">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="83">
          <name>$sessionId</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="96" package="Default">
        <name>gc</name>
        <full_name>gc</full_name>
        <docblock line="93">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="96">
          <name>$lifetime</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="108" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="105">
          <description>{@inheritDoc]</description>
          <long-description></long-description>
        </docblock>
        <argument line="108">
          <name>$sessionId</name>
          <default></default>
          <type/>
        </argument>
        <argument line="108">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="128" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="125">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="128">
          <name>$sessionId</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\HttpFoundation\Session\Storage\Handler" line="142" package="Default">
        <name>getCollection</name>
        <full_name>getCollection</full_name>
        <docblock line="137">
          <description>Return a "MongoCollection" instance</description>
          <long-description></long-description>
          <tag line="137" name="return" description="" type="\MongoCollection">
            <type by_reference="false">\MongoCollection</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/Handler/MongoDbSessionHandler.php</error>
      <critical line="21" code="50019">No short description for property $mongo</critical>
      <critical line="26" code="50019">No short description for property $collection</critical>
      <critical line="31" code="50019">No short description for property $options</critical>
      <error line="64" code="50015">Argument $savePath is missing from the Docblock of open()</error>
      <error line="64" code="50015">Argument $sessionName is missing from the Docblock of open()</error>
      <error line="80" code="50015">Argument $sessionId is missing from the Docblock of destroy()</error>
      <error line="93" code="50015">Argument $lifetime is missing from the Docblock of gc()</error>
      <error line="105" code="50015">Argument $sessionId is missing from the Docblock of write()</error>
      <error line="105" code="50015">Argument $data is missing from the Docblock of write()</error>
      <error line="125" code="50015">Argument $sessionId is missing from the Docblock of read()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/MetadataBag.php" hash="d422f65170783d3c0930aa7687379824" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="23" package="Default">
      <extends/>
      <implements>\Symfony\Component\HttpFoundation\Session\SessionBagInterface</implements>
      <name>MetadataBag</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</full_name>
      <docblock line="16">
        <description>Metadata container.</description>
        <long-description>&lt;p&gt;Adds metadata to the session.&lt;/p&gt;</long-description>
        <tag line="16" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <constant namespace="Symfony\Component\HttpFoundation\Session\Storage" line="25" package="Default">
        <name>CREATED</name>
        <full_name>CREATED</full_name>
        <value>'c'</value>
      </constant>
      <constant namespace="Symfony\Component\HttpFoundation\Session\Storage" line="26" package="Default">
        <name>UPDATED</name>
        <full_name>UPDATED</full_name>
        <value>'u'</value>
      </constant>
      <constant namespace="Symfony\Component\HttpFoundation\Session\Storage" line="27" package="Default">
        <name>LIFETIME</name>
        <full_name>LIFETIME</full_name>
        <value>'l'</value>
      </constant>
      <property final="false" static="false" visibility="private" line="32" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$name</name>
        <default>'__metadata'</default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
          <tag line="29" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="37" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$storageKey</name>
        <default></default>
        <docblock line="34">
          <description></description>
          <long-description></long-description>
          <tag line="34" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="42" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$meta</name>
        <default>array()</default>
        <docblock line="39">
          <description></description>
          <long-description></long-description>
          <tag line="39" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="49" namespace="Symfony\Component\HttpFoundation\Session\Storage" package="Default">
        <name>$lastUsed</name>
        <default></default>
        <docblock line="44">
          <description>Unix timestamp.</description>
          <long-description></long-description>
          <tag line="44" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="56" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="51">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="51" name="param" description="The key used to store bag in the session." type="string" variable="$storageKey">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$storageKey</name>
          <default>'_sf2_meta'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="65" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="62">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="65">
          <name>$array</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="82" package="Default">
        <name>getLifetime</name>
        <full_name>getLifetime</full_name>
        <docblock line="77">
          <description>Gets the lifetime that the session cookie was set with.</description>
          <long-description></long-description>
          <tag line="77" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="95" package="Default">
        <name>stampNew</name>
        <full_name>stampNew</full_name>
        <docblock line="87">
          <description>Stamps a new session's metadata.</description>
          <long-description></long-description>
          <tag line="87" name="param" description="Sets the cookie lifetime for the session cookie. A null value&#10;                         will leave the system settings unchanged, 0 sets the cookie&#10;                         to expire with browser session. Time is in seconds, and is&#10;                         not a Unix timestamp." type="integer" variable="$lifetime">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$lifetime</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="103" package="Default">
        <name>getStorageKey</name>
        <full_name>getStorageKey</full_name>
        <docblock line="100">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="113" package="Default">
        <name>getCreated</name>
        <full_name>getCreated</full_name>
        <docblock line="108">
          <description>Gets the created timestamp metadata.</description>
          <long-description></long-description>
          <tag line="108" name="return" description="Unix timestamp" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="123" package="Default">
        <name>getLastUsed</name>
        <full_name>getLastUsed</full_name>
        <docblock line="118">
          <description>Gets the last used metadata.</description>
          <long-description></long-description>
          <tag line="118" name="return" description="Unix timestamp" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="131" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="128">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="139" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="136">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="149" package="Default">
        <name>setName</name>
        <full_name>setName</full_name>
        <docblock line="144">
          <description>Sets name.</description>
          <long-description></long-description>
          <tag line="144" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\HttpFoundation\Session\Storage" line="154" package="Default">
        <name>stampCreated</name>
        <full_name>stampCreated</full_name>
        <argument line="154">
          <name>$lifetime</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Storage/MetadataBag.php</error>
      <critical line="29" code="50019">No short description for property $name</critical>
      <critical line="34" code="50019">No short description for property $storageKey</critical>
      <critical line="39" code="50019">No short description for property $meta</critical>
      <error line="62" code="50015">Argument $array is missing from the Docblock of initialize()</error>
      <error line="154" code="50010">No DocBlock was found for method stampCreated()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/SessionInterface.php" hash="fd1be319663a87dce542a5cdb0d62ad9" package="Default">
    <interface namespace="Symfony\Component\HttpFoundation\Session" line="21" package="Default">
      <name>SessionInterface</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\SessionInterface</full_name>
      <docblock line="16">
        <description>Interface for the session.</description>
        <long-description></long-description>
        <tag line="16" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="32" package="Default">
        <name>start</name>
        <full_name>start</full_name>
        <docblock line="23">
          <description>Starts the session storage.</description>
          <long-description></long-description>
          <tag line="23" name="return" description="True if session started." type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="23" name="throws" description="If session fails to start." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
          <tag line="23" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="41" package="Default">
        <name>getId</name>
        <full_name>getId</full_name>
        <docblock line="34">
          <description>Returns the session ID.</description>
          <long-description></long-description>
          <tag line="34" name="return" description="The session ID." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="50" package="Default">
        <name>setId</name>
        <full_name>setId</full_name>
        <docblock line="43">
          <description>Sets the session ID</description>
          <long-description></long-description>
          <tag line="43" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="api" description=""/>
        </docblock>
        <argument line="50">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="59" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="52">
          <description>Returns the session name.</description>
          <long-description></long-description>
          <tag line="52" name="return" description="The session name." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="52" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="68" package="Default">
        <name>setName</name>
        <full_name>setName</full_name>
        <docblock line="61">
          <description>Sets the session name.</description>
          <long-description></long-description>
          <tag line="61" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="api" description=""/>
        </docblock>
        <argument line="68">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="85" package="Default">
        <name>invalidate</name>
        <full_name>invalidate</full_name>
        <docblock line="70">
          <description>Invalidates the current session.</description>
          <long-description>&lt;p&gt;Clears all session attributes and flashes and regenerates the
session and deletes the old session from persistence.&lt;/p&gt;</long-description>
          <tag line="70" name="param" description="Sets the cookie lifetime for the session cookie. A null value&#10;                         will leave the system settings unchanged, 0 sets the cookie&#10;                         to expire with browser session. Time is in seconds, and is&#10;                         not a Unix timestamp." type="integer" variable="$lifetime">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="70" name="return" description="True if session invalidated, false if error." type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="70" name="api" description=""/>
        </docblock>
        <argument line="85">
          <name>$lifetime</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="101" package="Default">
        <name>migrate</name>
        <full_name>migrate</full_name>
        <docblock line="87">
          <description>Migrates the current session to a new session id while maintaining all
session attributes.</description>
          <long-description></long-description>
          <tag line="87" name="param" description="Whether to delete the old session or leave it to garbage collection." type="Boolean" variable="$destroy">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="87" name="param" description="Sets the cookie lifetime for the session cookie. A null value&#10;                         will leave the system settings unchanged, 0 sets the cookie&#10;                         to expire with browser session. Time is in seconds, and is&#10;                         not a Unix timestamp." type="integer" variable="$lifetime">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="87" name="return" description="True if session migrated, false if error." type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="87" name="api" description=""/>
        </docblock>
        <argument line="101">
          <name>$destroy</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="101">
          <name>$lifetime</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="110" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="103">
          <description>Force the session to be saved and closed.</description>
          <long-description>&lt;p&gt;This method is generally not required for real sessions as
the session will be automatically saved at the end of
code execution.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="121" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="112">
          <description>Checks if an attribute is defined.</description>
          <long-description></long-description>
          <tag line="112" name="param" description="The attribute name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="112" name="return" description="true if the attribute is defined, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="112" name="api" description=""/>
        </docblock>
        <argument line="121">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="133" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="123">
          <description>Returns an attribute.</description>
          <long-description></long-description>
          <tag line="123" name="param" description="The attribute name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="123" name="param" description="The default value if not found." type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="123" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="123" name="api" description=""/>
        </docblock>
        <argument line="133">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="133">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="143" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="135">
          <description>Sets an attribute.</description>
          <long-description></long-description>
          <tag line="135" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="135" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="135" name="api" description=""/>
        </docblock>
        <argument line="143">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="143">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="152" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="145">
          <description>Returns attributes.</description>
          <long-description></long-description>
          <tag line="145" name="return" description="Attributes" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="145" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="159" package="Default">
        <name>replace</name>
        <full_name>replace</full_name>
        <docblock line="154">
          <description>Sets attributes.</description>
          <long-description></long-description>
          <tag line="154" name="param" description="Attributes" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="159">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="170" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="161">
          <description>Removes an attribute.</description>
          <long-description></long-description>
          <tag line="161" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="161" name="return" description="The removed value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="161" name="api" description=""/>
        </docblock>
        <argument line="170">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="177" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="172">
          <description>Clears all attributes.</description>
          <long-description></long-description>
          <tag line="172" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="184" package="Default">
        <name>isStarted</name>
        <full_name>isStarted</full_name>
        <docblock line="179">
          <description>Checks if the session was started.</description>
          <long-description></long-description>
          <tag line="179" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="191" package="Default">
        <name>registerBag</name>
        <full_name>registerBag</full_name>
        <docblock line="186">
          <description>Registers a SessionBagInterface with the session.</description>
          <long-description></long-description>
          <tag line="186" name="param" description="" type="\Symfony\Component\HttpFoundation\Session\SessionBagInterface" variable="$bag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\SessionBagInterface</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$bag</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Session\SessionBagInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="200" package="Default">
        <name>getBag</name>
        <full_name>getBag</full_name>
        <docblock line="193">
          <description>Gets a bag instance by name.</description>
          <long-description></long-description>
          <tag line="193" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="193" name="return" description="" type="\Symfony\Component\HttpFoundation\Session\SessionBagInterface">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\SessionBagInterface</type>
          </tag>
        </docblock>
        <argument line="200">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="207" package="Default">
        <name>getMetadataBag</name>
        <full_name>getMetadataBag</full_name>
        <docblock line="202">
          <description>Gets session meta.</description>
          <long-description></long-description>
          <tag line="202" name="return" description="" type="\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/SessionInterface.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Attribute/NamespacedAttributeBag.php" hash="5605fe4308bd1b03e2b1fb3bfa5f34fe" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="20" package="Default">
      <extends>\Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag</extends>
      <name>NamespacedAttributeBag</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Attribute\NamespacedAttributeBag</full_name>
      <docblock line="14">
        <description>This class provides structured storage of session attributes using
a name spacing character in the key.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="27" namespace="Symfony\Component\HttpFoundation\Session\Attribute" package="Default">
        <name>$namespaceCharacter</name>
        <default></default>
        <docblock line="22">
          <description>Namespace character.</description>
          <long-description></long-description>
          <tag line="22" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="35" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="29">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="29" name="param" description="Session storage key." type="string" variable="$storageKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="param" description="Namespace character to use in keys." type="string" variable="$namespaceCharacter">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$storageKey</name>
          <default>'_sf2_attributes'</default>
          <type/>
        </argument>
        <argument line="35">
          <name>$namespaceCharacter</name>
          <default>'/'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="44" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="41">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="44">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="55" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="52">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="55">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="55">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="66" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="63">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="66">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="66">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="76" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="73">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="76">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="99" package="Default">
        <name>resolveAttributePath</name>
        <full_name>resolveAttributePath</full_name>
        <docblock line="89">
          <description>Resolves a path in attributes property and returns it as a reference.</description>
          <long-description>&lt;p&gt;This method allows structured namespacing of session attributes.&lt;/p&gt;</long-description>
          <tag line="89" name="param" description="Key name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="89" name="param" description="Write context, default false" type="boolean" variable="$writeContext">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="89" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="99">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="99">
          <name>$writeContext</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="146" package="Default">
        <name>resolveKey</name>
        <full_name>resolveKey</full_name>
        <docblock line="137">
          <description>Resolves the key from the name.</description>
          <long-description>&lt;p&gt;This is the last part in a dot separated string.&lt;/p&gt;</long-description>
          <tag line="137" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Attribute/NamespacedAttributeBag.php</error>
      <error line="41" code="50015">Argument $name is missing from the Docblock of has()</error>
      <error line="52" code="50015">Argument $name is missing from the Docblock of get()</error>
      <error line="52" code="50015">Argument $default is missing from the Docblock of get()</error>
      <error line="63" code="50015">Argument $name is missing from the Docblock of set()</error>
      <error line="63" code="50015">Argument $value is missing from the Docblock of set()</error>
      <error line="73" code="50015">Argument $name is missing from the Docblock of remove()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Attribute/AttributeBag.php" hash="759108a0d0c5bbb54323b8cb51a06e75" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="17" package="Default">
      <extends/>
      <implements>\Symfony\Component\HttpFoundation\Session\Attribute\AttributeBagInterface</implements>
      <implements>\IteratorAggregate</implements>
      <implements>\Countable</implements>
      <name>AttributeBag</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag</full_name>
      <docblock line="14">
        <description>This class relates to session attribute storage</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="19" namespace="Symfony\Component\HttpFoundation\Session\Attribute" package="Default">
        <name>$name</name>
        <default>'attributes'</default>
      </property>
      <property final="false" static="false" visibility="private" line="24" namespace="Symfony\Component\HttpFoundation\Session\Attribute" package="Default">
        <name>$storageKey</name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="Symfony\Component\HttpFoundation\Session\Attribute" package="Default">
        <name>$attributes</name>
        <default>array()</default>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="36" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="31">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="31" name="param" description="The key used to store flashes in the session." type="string" variable="$storageKey">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$storageKey</name>
          <default>'_sf2_attributes'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="44" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="41">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="49" package="Default">
        <name>setName</name>
        <full_name>setName</full_name>
        <argument line="49">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="57" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="54">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="57">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="65" package="Default">
        <name>getStorageKey</name>
        <full_name>getStorageKey</full_name>
        <docblock line="62">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="73" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="70">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="73">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="81" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="78">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="81">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="81">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="89" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="86">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="89">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="97" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="94">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="105" package="Default">
        <name>replace</name>
        <full_name>replace</full_name>
        <docblock line="102">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="105">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="116" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="113">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="116">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="130" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="127">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="143" package="Default">
        <name>getIterator</name>
        <full_name>getIterator</full_name>
        <docblock line="138">
          <description>Returns an iterator for attributes.</description>
          <long-description></long-description>
          <tag line="138" name="return" description="An \ArrayIterator instance" type="\ArrayIterator">
            <type by_reference="false">\ArrayIterator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="153" package="Default">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="148">
          <description>Returns the number of attributes.</description>
          <long-description></long-description>
          <tag line="148" name="return" description="The number of attributes" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Attribute/AttributeBag.php</error>
      <error line="19" code="50018">No DocBlock was found for property $name</error>
      <critical line="21" code="50019">No short description for property $storageKey</critical>
      <critical line="26" code="50019">No short description for property $attributes</critical>
      <error line="49" code="50010">No DocBlock was found for method setName()</error>
      <error line="54" code="50015">Argument $attributes is missing from the Docblock of initialize()</error>
      <error line="70" code="50015">Argument $name is missing from the Docblock of has()</error>
      <error line="78" code="50015">Argument $name is missing from the Docblock of get()</error>
      <error line="78" code="50015">Argument $default is missing from the Docblock of get()</error>
      <error line="86" code="50015">Argument $name is missing from the Docblock of set()</error>
      <error line="86" code="50015">Argument $value is missing from the Docblock of set()</error>
      <error line="102" code="50015">Argument $attributes is missing from the Docblock of replace()</error>
      <error line="113" code="50015">Argument $name is missing from the Docblock of remove()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Attribute/AttributeBagInterface.php" hash="f780fcaaa21996a43a6889219e2dee2d" package="Default">
    <interface namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="21" package="Default">
      <name>AttributeBagInterface</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Attribute\AttributeBagInterface</full_name>
      <extends>\Symfony\Component\HttpFoundation\Session\SessionBagInterface</extends>
      <docblock line="16">
        <description>Attributes store.</description>
        <long-description></long-description>
        <tag line="16" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="30" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="23">
          <description>Checks if an attribute is defined.</description>
          <long-description></long-description>
          <tag line="23" name="param" description="The attribute name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="return" description="true if the attribute is defined, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="40" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="32">
          <description>Returns an attribute.</description>
          <long-description></long-description>
          <tag line="32" name="param" description="The attribute name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="32" name="param" description="The default value if not found." type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="32" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="40">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="48" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="42">
          <description>Sets an attribute.</description>
          <long-description></long-description>
          <tag line="42" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="48">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="55" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="50">
          <description>Returns attributes.</description>
          <long-description></long-description>
          <tag line="50" name="return" description="Attributes" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="62" package="Default">
        <name>replace</name>
        <full_name>replace</full_name>
        <docblock line="57">
          <description>Sets attributes.</description>
          <long-description></long-description>
          <tag line="57" name="param" description="Attributes" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Attribute" line="71" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="64">
          <description>Removes an attribute.</description>
          <long-description></long-description>
          <tag line="64" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="return" description="The removed value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Attribute/AttributeBagInterface.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Flash/FlashBag.php" hash="ac35f3a40a459b80b0c8bfeacc0e083c" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="19" package="Default">
      <extends/>
      <implements>\Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface</implements>
      <implements>\IteratorAggregate</implements>
      <implements>\Countable</implements>
      <name>FlashBag</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Flash\FlashBag</full_name>
      <docblock line="14">
        <description>FlashBag flash message container.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" namespace="Symfony\Component\HttpFoundation\Session\Flash" package="Default">
        <name>$name</name>
        <default>'flashes'</default>
      </property>
      <property final="false" static="false" visibility="private" line="28" namespace="Symfony\Component\HttpFoundation\Session\Flash" package="Default">
        <name>$flashes</name>
        <default>array()</default>
        <docblock line="23">
          <description>Flash messages.</description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="Symfony\Component\HttpFoundation\Session\Flash" package="Default">
        <name>$storageKey</name>
        <default></default>
        <docblock line="30">
          <description>The storage key for flashes in the session</description>
          <long-description></long-description>
          <tag line="30" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="42" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="37">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="37" name="param" description="The key used to store flashes in the session." type="string" variable="$storageKey">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$storageKey</name>
          <default>'_sf2_flashes'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="50" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="47">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="55" package="Default">
        <name>setName</name>
        <full_name>setName</full_name>
        <argument line="55">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="63" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="60">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="63">
          <name>$flashes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="71" package="Default">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="68">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="71">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="71">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="79" package="Default">
        <name>peek</name>
        <full_name>peek</full_name>
        <docblock line="76">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="79">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="79">
          <name>$default</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="87" package="Default">
        <name>peekAll</name>
        <full_name>peekAll</full_name>
        <docblock line="84">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="95" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="92">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="95">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="95">
          <name>$default</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="111" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="108">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="122" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="119">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="122">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="122">
          <name>$messages</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="130" package="Default">
        <name>setAll</name>
        <full_name>setAll</full_name>
        <docblock line="127">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="130">
          <name>$messages</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="138" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="135">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="138">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="146" package="Default">
        <name>keys</name>
        <full_name>keys</full_name>
        <docblock line="143">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="154" package="Default">
        <name>getStorageKey</name>
        <full_name>getStorageKey</full_name>
        <docblock line="151">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="162" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="159">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="172" package="Default">
        <name>getIterator</name>
        <full_name>getIterator</full_name>
        <docblock line="167">
          <description>Returns an iterator for flashes.</description>
          <long-description></long-description>
          <tag line="167" name="return" description="An \ArrayIterator instance" type="\ArrayIterator">
            <type by_reference="false">\ArrayIterator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="182" package="Default">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="177">
          <description>Returns the number of flashes.</description>
          <long-description></long-description>
          <tag line="177" name="return" description="The number of flashes" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Flash/FlashBag.php</error>
      <error line="21" code="50018">No DocBlock was found for property $name</error>
      <error line="55" code="50010">No DocBlock was found for method setName()</error>
      <error line="60" code="50015">Argument $flashes is missing from the Docblock of initialize()</error>
      <error line="68" code="50015">Argument $type is missing from the Docblock of add()</error>
      <error line="68" code="50015">Argument $message is missing from the Docblock of add()</error>
      <error line="76" code="50015">Argument $type is missing from the Docblock of peek()</error>
      <error line="76" code="50015">Argument $default is missing from the Docblock of peek()</error>
      <error line="92" code="50015">Argument $type is missing from the Docblock of get()</error>
      <error line="92" code="50015">Argument $default is missing from the Docblock of get()</error>
      <error line="119" code="50015">Argument $type is missing from the Docblock of set()</error>
      <error line="119" code="50015">Argument $messages is missing from the Docblock of set()</error>
      <error line="127" code="50015">Argument $messages is missing from the Docblock of setAll()</error>
      <error line="135" code="50015">Argument $type is missing from the Docblock of has()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Flash/FlashBagInterface.php" hash="936456c9a8ff13c9c2a79bd069dbf245" package="Default">
    <interface namespace="Symfony\Component\HttpFoundation\Session\Flash" line="21" package="Default">
      <name>FlashBagInterface</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface</full_name>
      <extends>\Symfony\Component\HttpFoundation\Session\SessionBagInterface</extends>
      <docblock line="16">
        <description>FlashBagInterface.</description>
        <long-description></long-description>
        <tag line="16" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="29" package="Default">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="23">
          <description>Adds a flash message for type.</description>
          <long-description></long-description>
          <tag line="23" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="29">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="37" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="31">
          <description>Registers a message for a given type.</description>
          <long-description></long-description>
          <tag line="31" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="" type="string|array" variable="$message">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="47" package="Default">
        <name>peek</name>
        <full_name>peek</full_name>
        <docblock line="39">
          <description>Gets flash messages for a given type.</description>
          <long-description></long-description>
          <tag line="39" name="param" description="Message category type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="param" description="Default value if $type does not exist." type="array" variable="$default">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$default</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="54" package="Default">
        <name>peekAll</name>
        <full_name>peekAll</full_name>
        <docblock line="49">
          <description>Gets all flash messages.</description>
          <long-description></long-description>
          <tag line="49" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="64" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="56">
          <description>Gets and clears flash from the stack.</description>
          <long-description></long-description>
          <tag line="56" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="Default value if $type does not exist." type="array" variable="$default">
            <type by_reference="false">array</type>
          </tag>
          <tag line="56" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="64">
          <name>$default</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="71" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="66">
          <description>Gets and clears flashes from the stack.</description>
          <long-description></long-description>
          <tag line="66" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="76" package="Default">
        <name>setAll</name>
        <full_name>setAll</full_name>
        <docblock line="73">
          <description>Sets all flash messages.</description>
          <long-description></long-description>
        </docblock>
        <argument line="76">
          <name>$messages</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="85" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="78">
          <description>Has flash messages for a given type?</description>
          <long-description></long-description>
          <tag line="78" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="92" package="Default">
        <name>keys</name>
        <full_name>keys</full_name>
        <docblock line="87">
          <description>Returns a list of all defined types.</description>
          <long-description></long-description>
          <tag line="87" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Flash/FlashBagInterface.php</error>
      <error line="73" code="50015">Argument $messages is missing from the Docblock of setAll()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Flash/AutoExpireFlashBag.php" hash="a70cde588b67ee5318daba1263ce7db1" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="19" package="Default">
      <extends/>
      <implements>\Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface</implements>
      <name>AutoExpireFlashBag</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Flash\AutoExpireFlashBag</full_name>
      <docblock line="14">
        <description>AutoExpireFlashBag flash message container.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" namespace="Symfony\Component\HttpFoundation\Session\Flash" package="Default">
        <name>$name</name>
        <default>'flashes'</default>
      </property>
      <property final="false" static="false" visibility="private" line="28" namespace="Symfony\Component\HttpFoundation\Session\Flash" package="Default">
        <name>$flashes</name>
        <default>array()</default>
        <docblock line="23">
          <description>Flash messages.</description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="Symfony\Component\HttpFoundation\Session\Flash" package="Default">
        <name>$storageKey</name>
        <default></default>
        <docblock line="30">
          <description>The storage key for flashes in the session</description>
          <long-description></long-description>
          <tag line="30" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="42" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="37">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="37" name="param" description="The key used to store flashes in the session." type="string" variable="$storageKey">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$storageKey</name>
          <default>'_sf2_flashes'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="51" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="48">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="56" package="Default">
        <name>setName</name>
        <full_name>setName</full_name>
        <argument line="56">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="64" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="61">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="64">
          <name>$flashes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="78" package="Default">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="75">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="78">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="78">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="86" package="Default">
        <name>peek</name>
        <full_name>peek</full_name>
        <docblock line="83">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="86">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="86">
          <name>$default</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="94" package="Default">
        <name>peekAll</name>
        <full_name>peekAll</full_name>
        <docblock line="91">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="102" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="99">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="102">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="102">
          <name>$default</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="121" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="118">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="132" package="Default">
        <name>setAll</name>
        <full_name>setAll</full_name>
        <docblock line="129">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="132">
          <name>$messages</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="140" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="137">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="140">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$messages</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="148" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="145">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="148">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="156" package="Default">
        <name>keys</name>
        <full_name>keys</full_name>
        <docblock line="153">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="164" package="Default">
        <name>getStorageKey</name>
        <full_name>getStorageKey</full_name>
        <docblock line="161">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session\Flash" line="172" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="169">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Flash/AutoExpireFlashBag.php</error>
      <error line="21" code="50018">No DocBlock was found for property $name</error>
      <error line="56" code="50010">No DocBlock was found for method setName()</error>
      <error line="61" code="50015">Argument $flashes is missing from the Docblock of initialize()</error>
      <error line="75" code="50015">Argument $type is missing from the Docblock of add()</error>
      <error line="75" code="50015">Argument $message is missing from the Docblock of add()</error>
      <error line="83" code="50015">Argument $type is missing from the Docblock of peek()</error>
      <error line="83" code="50015">Argument $default is missing from the Docblock of peek()</error>
      <error line="99" code="50015">Argument $type is missing from the Docblock of get()</error>
      <error line="99" code="50015">Argument $default is missing from the Docblock of get()</error>
      <error line="129" code="50015">Argument $messages is missing from the Docblock of setAll()</error>
      <error line="137" code="50015">Argument $type is missing from the Docblock of set()</error>
      <error line="137" code="50015">Argument $messages is missing from the Docblock of set()</error>
      <error line="145" code="50015">Argument $type is missing from the Docblock of has()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/Session.php" hash="220bc23353ec928840acc9caf161b81f" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\Session" line="30" package="Default">
      <extends/>
      <implements>\Symfony\Component\HttpFoundation\Session\SessionInterface</implements>
      <implements>\IteratorAggregate</implements>
      <implements>\Countable</implements>
      <name>Session</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\Session</full_name>
      <docblock line="22">
        <description>Session.</description>
        <long-description></long-description>
        <tag line="22" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="22" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
        <tag line="22" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="37" namespace="Symfony\Component\HttpFoundation\Session" package="Default">
        <name>$storage</name>
        <default></default>
        <docblock line="32">
          <description>Storage driver.</description>
          <long-description></long-description>
          <tag line="32" name="var" description="" type="\Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="Symfony\Component\HttpFoundation\Session" package="Default">
        <name>$flashName</name>
        <default></default>
        <docblock line="39">
          <description></description>
          <long-description></long-description>
          <tag line="39" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="47" namespace="Symfony\Component\HttpFoundation\Session" package="Default">
        <name>$attributeName</name>
        <default></default>
        <docblock line="44">
          <description></description>
          <long-description></long-description>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="56" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="49">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="49" name="param" description="A SessionStorageInterface instance." type="\Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" variable="$storage">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface</type>
          </tag>
          <tag line="49" name="param" description="An AttributeBagInterface instance, (defaults null for default AttributeBag)" type="\Symfony\Component\HttpFoundation\Session\Attribute\AttributeBagInterface" variable="$attributes">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Attribute\AttributeBagInterface</type>
          </tag>
          <tag line="49" name="param" description="A FlashBagInterface instance (defaults null for default FlashBag)" type="\Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" variable="$flashes">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$storage</name>
          <default>null</default>
          <type>\Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface</type>
        </argument>
        <argument line="56">
          <name>$attributes</name>
          <default>null</default>
          <type>\Symfony\Component\HttpFoundation\Session\Attribute\AttributeBagInterface</type>
        </argument>
        <argument line="56">
          <name>$flashes</name>
          <default>null</default>
          <type>\Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="72" package="Default">
        <name>start</name>
        <full_name>start</full_name>
        <docblock line="69">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="80" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="77">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="80">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="88" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="85">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="88">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="88">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="96" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="93">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="96">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="96">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="104" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="101">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="112" package="Default">
        <name>replace</name>
        <full_name>replace</full_name>
        <docblock line="109">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="112">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="120" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="117">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="120">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="128" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="125">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="136" package="Default">
        <name>isStarted</name>
        <full_name>isStarted</full_name>
        <docblock line="133">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="146" package="Default">
        <name>getIterator</name>
        <full_name>getIterator</full_name>
        <docblock line="141">
          <description>Returns an iterator for attributes.</description>
          <long-description></long-description>
          <tag line="141" name="return" description="An \ArrayIterator instance" type="\ArrayIterator">
            <type by_reference="false">\ArrayIterator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="156" package="Default">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="151">
          <description>Returns the number of attributes.</description>
          <long-description></long-description>
          <tag line="151" name="return" description="The number of attributes" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="164" package="Default">
        <name>invalidate</name>
        <full_name>invalidate</full_name>
        <docblock line="161">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="164">
          <name>$lifetime</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="174" package="Default">
        <name>migrate</name>
        <full_name>migrate</full_name>
        <docblock line="171">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="174">
          <name>$destroy</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="174">
          <name>$lifetime</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="182" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="179">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="190" package="Default">
        <name>getId</name>
        <full_name>getId</full_name>
        <docblock line="187">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="198" package="Default">
        <name>setId</name>
        <full_name>setId</full_name>
        <docblock line="195">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="198">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="206" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="203">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="214" package="Default">
        <name>setName</name>
        <full_name>setName</full_name>
        <docblock line="211">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="214">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="222" package="Default">
        <name>getMetadataBag</name>
        <full_name>getMetadataBag</full_name>
        <docblock line="219">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="230" package="Default">
        <name>registerBag</name>
        <full_name>registerBag</full_name>
        <docblock line="227">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="230">
          <name>$bag</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Session\SessionBagInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="238" package="Default">
        <name>getBag</name>
        <full_name>getBag</full_name>
        <docblock line="235">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="238">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="248" package="Default">
        <name>getFlashBag</name>
        <full_name>getFlashBag</full_name>
        <docblock line="243">
          <description>Gets the flashbag interface.</description>
          <long-description></long-description>
          <tag line="243" name="return" description="" type="\Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="260" package="Default">
        <name>getFlashes</name>
        <full_name>getFlashes</full_name>
        <docblock line="255">
          <description></description>
          <long-description></long-description>
          <tag line="255" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="255" name="deprecated" description="since 2.1, will be removed from 2.3"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="283" package="Default">
        <name>setFlashes</name>
        <full_name>setFlashes</full_name>
        <docblock line="278">
          <description></description>
          <long-description></long-description>
          <tag line="278" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="278" name="deprecated" description="since 2.1, will be removed from 2.3"/>
        </docblock>
        <argument line="283">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="298" package="Default">
        <name>getFlash</name>
        <full_name>getFlash</full_name>
        <docblock line="290">
          <description></description>
          <long-description></long-description>
          <tag line="290" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="290" name="param" description="" type="string" variable="$default">
            <type by_reference="false">string</type>
          </tag>
          <tag line="290" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="290" name="deprecated" description="since 2.1, will be removed from 2.3"/>
        </docblock>
        <argument line="298">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="298">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="311" package="Default">
        <name>setFlash</name>
        <full_name>setFlash</full_name>
        <docblock line="305">
          <description></description>
          <long-description></long-description>
          <tag line="305" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="305" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="305" name="deprecated" description="since 2.1, will be removed from 2.3"/>
        </docblock>
        <argument line="311">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="311">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="323" package="Default">
        <name>hasFlash</name>
        <full_name>hasFlash</full_name>
        <docblock line="316">
          <description></description>
          <long-description></long-description>
          <tag line="316" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="316" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="316" name="deprecated" description="since 2.1, will be removed from 2.3"/>
        </docblock>
        <argument line="323">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="333" package="Default">
        <name>removeFlash</name>
        <full_name>removeFlash</full_name>
        <docblock line="328">
          <description></description>
          <long-description></long-description>
          <tag line="328" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="328" name="deprecated" description="since 2.1, will be removed from 2.3"/>
        </docblock>
        <argument line="333">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="343" package="Default">
        <name>clearFlashes</name>
        <full_name>clearFlashes</full_name>
        <docblock line="338">
          <description></description>
          <long-description></long-description>
          <tag line="338" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="338" name="deprecated" description="since 2.1, will be removed from 2.3"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/Session.php</error>
      <critical line="39" code="50019">No short description for property $flashName</critical>
      <critical line="44" code="50019">No short description for property $attributeName</critical>
      <error line="77" code="50015">Argument $name is missing from the Docblock of has()</error>
      <error line="85" code="50015">Argument $name is missing from the Docblock of get()</error>
      <error line="85" code="50015">Argument $default is missing from the Docblock of get()</error>
      <error line="93" code="50015">Argument $name is missing from the Docblock of set()</error>
      <error line="93" code="50015">Argument $value is missing from the Docblock of set()</error>
      <error line="109" code="50015">Argument $attributes is missing from the Docblock of replace()</error>
      <error line="117" code="50015">Argument $name is missing from the Docblock of remove()</error>
      <error line="161" code="50015">Argument $lifetime is missing from the Docblock of invalidate()</error>
      <error line="171" code="50015">Argument $destroy is missing from the Docblock of migrate()</error>
      <error line="171" code="50015">Argument $lifetime is missing from the Docblock of migrate()</error>
      <error line="195" code="50015">Argument $id is missing from the Docblock of setId()</error>
      <error line="211" code="50015">Argument $name is missing from the Docblock of setName()</error>
      <error line="227" code="50015">Argument $bag is missing from the Docblock of registerBag()</error>
      <error line="235" code="50015">Argument $name is missing from the Docblock of getBag()</error>
      <error line="255" code="50012">No short description for method getFlashes()</error>
      <error line="278" code="50012">No short description for method setFlashes()</error>
      <error line="290" code="50012">No short description for method getFlash()</error>
      <error line="305" code="50012">No short description for method setFlash()</error>
      <error line="316" code="50012">No short description for method hasFlash()</error>
      <error line="328" code="50012">No short description for method removeFlash()</error>
      <error line="338" code="50012">No short description for method clearFlashes()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Session/SessionBagInterface.php" hash="00004afe40adc86d3ddd38afd0161476" package="Default">
    <interface namespace="Symfony\Component\HttpFoundation\Session" line="19" package="Default">
      <name>SessionBagInterface</name>
      <full_name>\Symfony\Component\HttpFoundation\Session\SessionBagInterface</full_name>
      <docblock line="14">
        <description>Session Bag store.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="26" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="21">
          <description>Gets this bag's name</description>
          <long-description></long-description>
          <tag line="21" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="33" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="28">
          <description>Initializes the Bag</description>
          <long-description></long-description>
          <tag line="28" name="param" description="" type="array" variable="$array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$array</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="40" package="Default">
        <name>getStorageKey</name>
        <full_name>getStorageKey</full_name>
        <docblock line="35">
          <description>Gets the storage key for this bag.</description>
          <long-description></long-description>
          <tag line="35" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\Session" line="47" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="42">
          <description>Clears out data from bag.</description>
          <long-description></long-description>
          <tag line="42" name="return" description="Whatever data was contained." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Session/SessionBagInterface.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/StreamedResponse.php" hash="5e573a7a42beace2b78c590354a15a3e" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation" line="29" package="Default">
      <extends>\Symfony\Component\HttpFoundation\Response</extends>
      <name>StreamedResponse</name>
      <full_name>\Symfony\Component\HttpFoundation\StreamedResponse</full_name>
      <docblock line="14">
        <description>StreamedResponse represents a streamed HTTP response.</description>
        <long-description>&lt;p&gt;A StreamedResponse uses a callback for its content.&lt;/p&gt;

&lt;p&gt;The callback should use the standard PHP functions like echo
to stream the response back to the client. The flush() method
can also be used if needed.&lt;/p&gt;</long-description>
        <tag line="14" name="see" description="\Symfony\Component\HttpFoundation\flush()" refers="\Symfony\Component\HttpFoundation\flush()"/>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="31" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$callback</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$streamed</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="43" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="34">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="34" name="param" description="A valid PHP callback" type="mixed" variable="$callback">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="34" name="param" description="The response status code" type="integer" variable="$status">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="34" name="param" description="An array of response headers" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="34" name="api" description=""/>
        </docblock>
        <argument line="43">
          <name>$callback</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="43">
          <name>$status</name>
          <default>200</default>
          <type/>
        </argument>
        <argument line="43">
          <name>$headers</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation" line="56" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="53">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="56">
          <name>$callback</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="56">
          <name>$status</name>
          <default>200</default>
          <type/>
        </argument>
        <argument line="56">
          <name>$headers</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="66" package="Default">
        <name>setCallback</name>
        <full_name>setCallback</full_name>
        <docblock line="61">
          <description>Sets the PHP callback associated with this Response.</description>
          <long-description></long-description>
          <tag line="61" name="param" description="A valid PHP callback" type="mixed" variable="$callback">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="77" package="Default">
        <name>prepare</name>
        <full_name>prepare</full_name>
        <docblock line="74">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="77">
          <name>$request</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="89" package="Default">
        <name>sendContent</name>
        <full_name>sendContent</full_name>
        <docblock line="84">
          <description>{@inheritdoc}</description>
          <long-description>&lt;p&gt;This method only sends the content once.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="109" package="Default">
        <name>setContent</name>
        <full_name>setContent</full_name>
        <docblock line="104">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
          <tag line="104" name="throws" description="when the content is not null" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$content</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="121" package="Default">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="116">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
          <tag line="116" name="return" description="" type="false">
            <type by_reference="false">false</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/StreamedResponse.php</error>
      <error line="31" code="50018">No DocBlock was found for property $callback</error>
      <error line="32" code="50018">No DocBlock was found for property $streamed</error>
      <error line="53" code="50015">Argument $callback is missing from the Docblock of create()</error>
      <error line="53" code="50015">Argument $status is missing from the Docblock of create()</error>
      <error line="53" code="50015">Argument $headers is missing from the Docblock of create()</error>
      <error line="74" code="50015">Argument $request is missing from the Docblock of prepare()</error>
      <error line="104" code="50015">Argument $content is missing from the Docblock of setContent()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/LaravelResponse.php" hash="2d5e5a7a3b8430d18bb1d8e795cee179" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation" line="10" package="Default">
      <extends>\Symfony\Component\HttpFoundation\Response</extends>
      <name>LaravelResponse</name>
      <full_name>\Symfony\Component\HttpFoundation\LaravelResponse</full_name>
      <docblock line="3">
        <description>Response represents an HTTP response.</description>
        <long-description></long-description>
        <tag line="3" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="3" name="api" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="20" package="Default">
        <name>send</name>
        <full_name>send</full_name>
        <docblock line="13">
          <description>Sends HTTP headers and content.</description>
          <long-description></long-description>
          <tag line="13" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="13" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="33" package="Default">
        <name>finish</name>
        <full_name>finish</full_name>
        <docblock line="28">
          <description>Finishes the request for PHP-FastCGI</description>
          <long-description></long-description>
          <tag line="28" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/LaravelResponse.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/LaravelRequest.php" hash="706d7f613c06fb1b9ebbd1f09008486a" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation" line="3" package="Default">
      <extends>\Symfony\Component\HttpFoundation\Request</extends>
      <name>LaravelRequest</name>
      <full_name>\Symfony\Component\HttpFoundation\LaravelRequest</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation" line="12" package="Default">
        <name>createFromGlobals</name>
        <full_name>createFromGlobals</full_name>
        <docblock line="5">
          <description>Creates a new request with values from PHP's super globals.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="A new request" type="\Symfony\Component\HttpFoundation\Request">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Request</type>
          </tag>
          <tag line="5" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="33" package="Default">
        <name>getRootUrl</name>
        <full_name>getRootUrl</full_name>
        <docblock line="28">
          <description>Get the root URL of the application.</description>
          <long-description></long-description>
          <tag line="28" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/LaravelRequest.php</error>
      <error line="3" code="50000">No DocBlock was found for \Symfony\Component\HttpFoundation\LaravelRequest</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/File/MimeType/FileinfoMimeTypeGuesser.php" hash="3e7436e2b33eb0f7a21a7a61fb1219b1" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="22" package="Default">
      <extends/>
      <implements>\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface</implements>
      <name>FileinfoMimeTypeGuesser</name>
      <full_name>\Symfony\Component\HttpFoundation\File\MimeType\FileinfoMimeTypeGuesser</full_name>
      <docblock line="17">
        <description>Guesses the mime type using the PECL extension FileInfo</description>
        <long-description></long-description>
        <tag line="17" name="author" description="Bernhard Schussek &lt;bschussek@gmail.com&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="29" package="Default">
        <name>isSupported</name>
        <full_name>isSupported</full_name>
        <docblock line="24">
          <description>Returns whether this guesser is supported on the current OS/PHP setup</description>
          <long-description></long-description>
          <tag line="24" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="37" package="Default">
        <name>guess</name>
        <full_name>guess</full_name>
        <docblock line="34">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="37">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/File/MimeType/FileinfoMimeTypeGuesser.php</error>
      <error line="34" code="50015">Argument $path is missing from the Docblock of guess()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/File/MimeType/MimeTypeGuesserInterface.php" hash="9e64650a0dab046870a5b7bef33c6556" package="Default">
    <interface namespace="Symfony\Component\HttpFoundation\File\MimeType" line="22" package="Default">
      <name>MimeTypeGuesserInterface</name>
      <full_name>\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface</full_name>
      <docblock line="17">
        <description>Guesses the mime type of a file</description>
        <long-description></long-description>
        <tag line="17" name="author" description="Bernhard Schussek &lt;bschussek@gmail.com&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="34" package="Default">
        <name>guess</name>
        <full_name>guess</full_name>
        <docblock line="24">
          <description>Guesses the mime type of the file with the given path.</description>
          <long-description></long-description>
          <tag line="24" name="param" description="The path to the file" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="return" description="The mime type or NULL, if none could be guessed" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="throws" description="If the file does not exist" type="\Symfony\Component\HttpFoundation\File\Exception\FileNotFoundException">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\Exception\FileNotFoundException</type>
          </tag>
          <tag line="24" name="throws" description="If the file could not be read" type="\Symfony\Component\HttpFoundation\File\Exception\AccessDeniedException">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\Exception\AccessDeniedException</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/File/MimeType/MimeTypeGuesserInterface.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/File/MimeType/ExtensionGuesser.php" hash="0c9fe3b8d13d01b64f6cf32892afa8b6" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="29" package="Default">
      <extends/>
      <implements>\Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface</implements>
      <name>ExtensionGuesser</name>
      <full_name>\Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser</full_name>
      <docblock line="14">
        <description>A singleton mime type to file extension guesser.</description>
        <long-description>&lt;p&gt;A default guesser is provided.
You can register custom guessers by calling the register()
method on the singleton instance.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$guesser = ExtensionGuesser::getInstance();
$guesser-&gt;register(new MyCustomExtensionGuesser());
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The last registered guesser is preferred over previously registered ones.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="true" visibility="private" line="36" namespace="Symfony\Component\HttpFoundation\File\MimeType" package="Default">
        <name>$instance</name>
        <default>null</default>
        <docblock line="31">
          <description>The singleton instance</description>
          <long-description></long-description>
          <tag line="31" name="var" description="" type="\Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="43" namespace="Symfony\Component\HttpFoundation\File\MimeType" package="Default">
        <name>$guessers</name>
        <default>array()</default>
        <docblock line="38">
          <description>All registered ExtensionGuesserInterface instances</description>
          <long-description></long-description>
          <tag line="38" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="50" package="Default">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="45">
          <description>Returns the singleton instance</description>
          <long-description></long-description>
          <tag line="45" name="return" description="" type="\Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="62" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="59">
          <description>Registers all natively provided extension guessers</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="74" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="67">
          <description>Registers a new extension guesser</description>
          <long-description>&lt;p&gt;When guessing, this guesser is preferred over previously registered ones.&lt;/p&gt;</long-description>
          <tag line="67" name="param" description="" type="\Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface" variable="$guesser">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$guesser</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="90" package="Default">
        <name>guess</name>
        <full_name>guess</full_name>
        <docblock line="79">
          <description>Tries to guess the extension</description>
          <long-description>&lt;p&gt;The mime type is passed to each registered mime type guesser in reverse order
of their registration (last registered is queried first). Once a guesser
returns a value that is not NULL, this method terminates and returns the
value.&lt;/p&gt;</long-description>
          <tag line="79" name="param" description="The mime type" type="string" variable="$mimeType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="79" name="return" description="The guessed extension or NULL, if none could be guessed" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$mimeType</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/File/MimeType/ExtensionGuesser.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/File/MimeType/FileBinaryMimeTypeGuesser.php" hash="3f13fb8cfa71a87568581dfbeef0a720" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="22" package="Default">
      <extends/>
      <implements>\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface</implements>
      <name>FileBinaryMimeTypeGuesser</name>
      <full_name>\Symfony\Component\HttpFoundation\File\MimeType\FileBinaryMimeTypeGuesser</full_name>
      <docblock line="17">
        <description>Guesses the mime type with the binary "file" (only available on *nix)</description>
        <long-description></long-description>
        <tag line="17" name="author" description="Bernhard Schussek &lt;bschussek@gmail.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="24" namespace="Symfony\Component\HttpFoundation\File\MimeType" package="Default">
        <name>$cmd</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="36" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="26">
          <description>Constructor.</description>
          <long-description>&lt;p&gt;The $cmd pattern must contain a "%s" string that will be replaced
with the file name to guess.&lt;/p&gt;

&lt;p&gt;The command output must start with the mime type of the file.&lt;/p&gt;</long-description>
          <tag line="26" name="param" description="The command to run to get the mime type of a file" type="string" variable="$cmd">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$cmd</name>
          <default>'file -b --mime %s 2&gt;/dev/null'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="46" package="Default">
        <name>isSupported</name>
        <full_name>isSupported</full_name>
        <docblock line="41">
          <description>Returns whether this guesser is supported on the current OS</description>
          <long-description></long-description>
          <tag line="41" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="54" package="Default">
        <name>guess</name>
        <full_name>guess</full_name>
        <docblock line="51">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="54">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/File/MimeType/FileBinaryMimeTypeGuesser.php</error>
      <error line="24" code="50018">No DocBlock was found for property $cmd</error>
      <error line="51" code="50015">Argument $path is missing from the Docblock of guess()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/File/MimeType/ExtensionGuesserInterface.php" hash="e31499266705a919578afa4507252a2c" package="Default">
    <interface namespace="Symfony\Component\HttpFoundation\File\MimeType" line="17" package="Default">
      <name>ExtensionGuesserInterface</name>
      <full_name>\Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface</full_name>
      <docblock line="14">
        <description>Guesses the file extension corresponding to a given mime type</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="25" package="Default">
        <name>guess</name>
        <full_name>guess</full_name>
        <docblock line="19">
          <description>Makes a best guess for a file extension, given a mime type</description>
          <long-description></long-description>
          <tag line="19" name="param" description="The mime type" type="string" variable="$mimeType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="return" description="The guessed extension or NULL, if none could be guessed" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$mimeType</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/File/MimeType/ExtensionGuesserInterface.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/File/MimeType/MimeTypeGuesser.php" hash="80b55b50ba2d4146ee984d0751141970" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="34" package="Default">
      <extends/>
      <implements>\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface</implements>
      <name>MimeTypeGuesser</name>
      <full_name>\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser</full_name>
      <docblock line="18">
        <description>A singleton mime type guesser.</description>
        <long-description>&lt;p&gt;By default, all mime type guessers provided by the framework are installed
(if available on the current OS/PHP setup). You can register custom
guessers by calling the register() method on the singleton instance.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$guesser = MimeTypeGuesser::getInstance();
$guesser-&gt;register(new MyCustomMimeTypeGuesser());
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The last registered guesser is preferred over previously registered ones.&lt;/p&gt;</long-description>
        <tag line="18" name="author" description="Bernhard Schussek &lt;bschussek@gmail.com&gt;"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="41" namespace="Symfony\Component\HttpFoundation\File\MimeType" package="Default">
        <name>$instance</name>
        <default>null</default>
        <docblock line="36">
          <description>The singleton instance</description>
          <long-description></long-description>
          <tag line="36" name="var" description="" type="\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="Symfony\Component\HttpFoundation\File\MimeType" package="Default">
        <name>$guessers</name>
        <default>array()</default>
        <docblock line="43">
          <description>All registered MimeTypeGuesserInterface instances</description>
          <long-description></long-description>
          <tag line="43" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="55" package="Default">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="50">
          <description>Returns the singleton instance</description>
          <long-description></long-description>
          <tag line="50" name="return" description="" type="\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="67" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="64">
          <description>Registers all natively provided mime type guessers</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="85" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="78">
          <description>Registers a new mime type guesser</description>
          <long-description>&lt;p&gt;When guessing, this guesser is preferred over previously registered ones.&lt;/p&gt;</long-description>
          <tag line="78" name="param" description="" type="\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface" variable="$guesser">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$guesser</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="104" package="Default">
        <name>guess</name>
        <full_name>guess</full_name>
        <docblock line="90">
          <description>Tries to guess the mime type of the given file</description>
          <long-description>&lt;p&gt;The file is passed to each registered mime type guesser in reverse order
of their registration (last registered is queried first). Once a guesser
returns a value that is not NULL, this method terminates and returns the
value.&lt;/p&gt;</long-description>
          <tag line="90" name="param" description="The path to the file" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="return" description="The mime type or NULL, if none could be guessed" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="throws" description="If the file does not exist" type="\Symfony\Component\HttpFoundation\File\Exception\FileException">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\Exception\FileException</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/File/MimeType/MimeTypeGuesser.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/File/MimeType/MimeTypeExtensionGuesser.php" hash="e4bec4833357830a3a1296774ee6f4e5" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="17" package="Default">
      <extends/>
      <implements>\Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface</implements>
      <name>MimeTypeExtensionGuesser</name>
      <full_name>\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeExtensionGuesser</full_name>
      <docblock line="14">
        <description>Provides a best-guess mapping of mime type to file extension.</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="28" namespace="Symfony\Component\HttpFoundation\File\MimeType" package="Default">
        <name>$defaultExtensions</name>
        <default>array('application/andrew-inset' =&gt; 'ez', 'application/applixware' =&gt; 'aw', 'application/atom+xml' =&gt; 'atom', 'application/atomcat+xml' =&gt; 'atomcat', 'application/atomsvc+xml' =&gt; 'atomsvc', 'application/ccxml+xml' =&gt; 'ccxml', 'application/cdmi-capability' =&gt; 'cdmia', 'application/cdmi-container' =&gt; 'cdmic', 'application/cdmi-domain' =&gt; 'cdmid', 'application/cdmi-object' =&gt; 'cdmio', 'application/cdmi-queue' =&gt; 'cdmiq', 'application/cu-seeme' =&gt; 'cu', 'application/davmount+xml' =&gt; 'davmount', 'application/dssc+der' =&gt; 'dssc', 'application/dssc+xml' =&gt; 'xdssc', 'application/ecmascript' =&gt; 'ecma', 'application/emma+xml' =&gt; 'emma', 'application/epub+zip' =&gt; 'epub', 'application/exi' =&gt; 'exi', 'application/font-tdpfr' =&gt; 'pfr', 'application/hyperstudio' =&gt; 'stk', 'application/inkml+xml' =&gt; 'ink', 'application/ipfix' =&gt; 'ipfix', 'application/java-archive' =&gt; 'jar', 'application/java-serialized-object' =&gt; 'ser', 'application/java-vm' =&gt; 'class', 'application/javascript' =&gt; 'js', 'application/json' =&gt; 'json', 'application/lost+xml' =&gt; 'lostxml', 'application/mac-binhex40' =&gt; 'hqx', 'application/mac-compactpro' =&gt; 'cpt', 'application/mads+xml' =&gt; 'mads', 'application/marc' =&gt; 'mrc', 'application/marcxml+xml' =&gt; 'mrcx', 'application/mathematica' =&gt; 'ma', 'application/mathml+xml' =&gt; 'mathml', 'application/mbox' =&gt; 'mbox', 'application/mediaservercontrol+xml' =&gt; 'mscml', 'application/metalink4+xml' =&gt; 'meta4', 'application/mets+xml' =&gt; 'mets', 'application/mods+xml' =&gt; 'mods', 'application/mp21' =&gt; 'm21', 'application/mp4' =&gt; 'mp4s', 'application/msword' =&gt; 'doc', 'application/mxf' =&gt; 'mxf', 'application/octet-stream' =&gt; 'bin', 'application/oda' =&gt; 'oda', 'application/oebps-package+xml' =&gt; 'opf', 'application/ogg' =&gt; 'ogx', 'application/onenote' =&gt; 'onetoc', 'application/oxps' =&gt; 'oxps', 'application/patch-ops-error+xml' =&gt; 'xer', 'application/pdf' =&gt; 'pdf', 'application/pgp-encrypted' =&gt; 'pgp', 'application/pgp-signature' =&gt; 'asc', 'application/pics-rules' =&gt; 'prf', 'application/pkcs10' =&gt; 'p10', 'application/pkcs7-mime' =&gt; 'p7m', 'application/pkcs7-signature' =&gt; 'p7s', 'application/pkcs8' =&gt; 'p8', 'application/pkix-attr-cert' =&gt; 'ac', 'application/pkix-cert' =&gt; 'cer', 'application/pkix-crl' =&gt; 'crl', 'application/pkix-pkipath' =&gt; 'pkipath', 'application/pkixcmp' =&gt; 'pki', 'application/pls+xml' =&gt; 'pls', 'application/postscript' =&gt; 'ai', 'application/prs.cww' =&gt; 'cww', 'application/pskc+xml' =&gt; 'pskcxml', 'application/rdf+xml' =&gt; 'rdf', 'application/reginfo+xml' =&gt; 'rif', 'application/relax-ng-compact-syntax' =&gt; 'rnc', 'application/resource-lists+xml' =&gt; 'rl', 'application/resource-lists-diff+xml' =&gt; 'rld', 'application/rls-services+xml' =&gt; 'rs', 'application/rpki-ghostbusters' =&gt; 'gbr', 'application/rpki-manifest' =&gt; 'mft', 'application/rpki-roa' =&gt; 'roa', 'application/rsd+xml' =&gt; 'rsd', 'application/rss+xml' =&gt; 'rss', 'application/rtf' =&gt; 'rtf', 'application/sbml+xml' =&gt; 'sbml', 'application/scvp-cv-request' =&gt; 'scq', 'application/scvp-cv-response' =&gt; 'scs', 'application/scvp-vp-request' =&gt; 'spq', 'application/scvp-vp-response' =&gt; 'spp', 'application/sdp' =&gt; 'sdp', 'application/set-payment-initiation' =&gt; 'setpay', 'application/set-registration-initiation' =&gt; 'setreg', 'application/shf+xml' =&gt; 'shf', 'application/smil+xml' =&gt; 'smi', 'application/sparql-query' =&gt; 'rq', 'application/sparql-results+xml' =&gt; 'srx', 'application/srgs' =&gt; 'gram', 'application/srgs+xml' =&gt; 'grxml', 'application/sru+xml' =&gt; 'sru', 'application/ssml+xml' =&gt; 'ssml', 'application/tei+xml' =&gt; 'tei', 'application/thraud+xml' =&gt; 'tfi', 'application/timestamped-data' =&gt; 'tsd', 'application/vnd.3gpp.pic-bw-large' =&gt; 'plb', 'application/vnd.3gpp.pic-bw-small' =&gt; 'psb', 'application/vnd.3gpp.pic-bw-var' =&gt; 'pvb', 'application/vnd.3gpp2.tcap' =&gt; 'tcap', 'application/vnd.3m.post-it-notes' =&gt; 'pwn', 'application/vnd.accpac.simply.aso' =&gt; 'aso', 'application/vnd.accpac.simply.imp' =&gt; 'imp', 'application/vnd.acucobol' =&gt; 'acu', 'application/vnd.acucorp' =&gt; 'atc', 'application/vnd.adobe.air-application-installer-package+zip' =&gt; 'air', 'application/vnd.adobe.fxp' =&gt; 'fxp', 'application/vnd.adobe.xdp+xml' =&gt; 'xdp', 'application/vnd.adobe.xfdf' =&gt; 'xfdf', 'application/vnd.ahead.space' =&gt; 'ahead', 'application/vnd.airzip.filesecure.azf' =&gt; 'azf', 'application/vnd.airzip.filesecure.azs' =&gt; 'azs', 'application/vnd.amazon.ebook' =&gt; 'azw', 'application/vnd.americandynamics.acc' =&gt; 'acc', 'application/vnd.amiga.ami' =&gt; 'ami', 'application/vnd.android.package-archive' =&gt; 'apk', 'application/vnd.anser-web-certificate-issue-initiation' =&gt; 'cii', 'application/vnd.anser-web-funds-transfer-initiation' =&gt; 'fti', 'application/vnd.antix.game-component' =&gt; 'atx', 'application/vnd.apple.installer+xml' =&gt; 'mpkg', 'application/vnd.apple.mpegurl' =&gt; 'm3u8', 'application/vnd.aristanetworks.swi' =&gt; 'swi', 'application/vnd.astraea-software.iota' =&gt; 'iota', 'application/vnd.audiograph' =&gt; 'aep', 'application/vnd.blueice.multipass' =&gt; 'mpm', 'application/vnd.bmi' =&gt; 'bmi', 'application/vnd.businessobjects' =&gt; 'rep', 'application/vnd.chemdraw+xml' =&gt; 'cdxml', 'application/vnd.chipnuts.karaoke-mmd' =&gt; 'mmd', 'application/vnd.cinderella' =&gt; 'cdy', 'application/vnd.claymore' =&gt; 'cla', 'application/vnd.cloanto.rp9' =&gt; 'rp9', 'application/vnd.clonk.c4group' =&gt; 'c4g', 'application/vnd.cluetrust.cartomobile-config' =&gt; 'c11amc', 'application/vnd.cluetrust.cartomobile-config-pkg' =&gt; 'c11amz', 'application/vnd.commonspace' =&gt; 'csp', 'application/vnd.contact.cmsg' =&gt; 'cdbcmsg', 'application/vnd.cosmocaller' =&gt; 'cmc', 'application/vnd.crick.clicker' =&gt; 'clkx', 'application/vnd.crick.clicker.keyboard' =&gt; 'clkk', 'application/vnd.crick.clicker.palette' =&gt; 'clkp', 'application/vnd.crick.clicker.template' =&gt; 'clkt', 'application/vnd.crick.clicker.wordbank' =&gt; 'clkw', 'application/vnd.criticaltools.wbs+xml' =&gt; 'wbs', 'application/vnd.ctc-posml' =&gt; 'pml', 'application/vnd.cups-ppd' =&gt; 'ppd', 'application/vnd.curl.car' =&gt; 'car', 'application/vnd.curl.pcurl' =&gt; 'pcurl', 'application/vnd.data-vision.rdz' =&gt; 'rdz', 'application/vnd.dece.data' =&gt; 'uvf', 'application/vnd.dece.ttml+xml' =&gt; 'uvt', 'application/vnd.dece.unspecified' =&gt; 'uvx', 'application/vnd.dece.zip' =&gt; 'uvz', 'application/vnd.denovo.fcselayout-link' =&gt; 'fe_launch', 'application/vnd.dna' =&gt; 'dna', 'application/vnd.dolby.mlp' =&gt; 'mlp', 'application/vnd.dpgraph' =&gt; 'dpg', 'application/vnd.dreamfactory' =&gt; 'dfac', 'application/vnd.dvb.ait' =&gt; 'ait', 'application/vnd.dvb.service' =&gt; 'svc', 'application/vnd.dynageo' =&gt; 'geo', 'application/vnd.ecowin.chart' =&gt; 'mag', 'application/vnd.enliven' =&gt; 'nml', 'application/vnd.epson.esf' =&gt; 'esf', 'application/vnd.epson.msf' =&gt; 'msf', 'application/vnd.epson.quickanime' =&gt; 'qam', 'application/vnd.epson.salt' =&gt; 'slt', 'application/vnd.epson.ssf' =&gt; 'ssf', 'application/vnd.eszigno3+xml' =&gt; 'es3', 'application/vnd.ezpix-album' =&gt; 'ez2', 'application/vnd.ezpix-package' =&gt; 'ez3', 'application/vnd.fdf' =&gt; 'fdf', 'application/vnd.fdsn.mseed' =&gt; 'mseed', 'application/vnd.fdsn.seed' =&gt; 'seed', 'application/vnd.flographit' =&gt; 'gph', 'application/vnd.fluxtime.clip' =&gt; 'ftc', 'application/vnd.framemaker' =&gt; 'fm', 'application/vnd.frogans.fnc' =&gt; 'fnc', 'application/vnd.frogans.ltf' =&gt; 'ltf', 'application/vnd.fsc.weblaunch' =&gt; 'fsc', 'application/vnd.fujitsu.oasys' =&gt; 'oas', 'application/vnd.fujitsu.oasys2' =&gt; 'oa2', 'application/vnd.fujitsu.oasys3' =&gt; 'oa3', 'application/vnd.fujitsu.oasysgp' =&gt; 'fg5', 'application/vnd.fujitsu.oasysprs' =&gt; 'bh2', 'application/vnd.fujixerox.ddd' =&gt; 'ddd', 'application/vnd.fujixerox.docuworks' =&gt; 'xdw', 'application/vnd.fujixerox.docuworks.binder' =&gt; 'xbd', 'application/vnd.fuzzysheet' =&gt; 'fzs', 'application/vnd.genomatix.tuxedo' =&gt; 'txd', 'application/vnd.geogebra.file' =&gt; 'ggb', 'application/vnd.geogebra.tool' =&gt; 'ggt', 'application/vnd.geometry-explorer' =&gt; 'gex', 'application/vnd.geonext' =&gt; 'gxt', 'application/vnd.geoplan' =&gt; 'g2w', 'application/vnd.geospace' =&gt; 'g3w', 'application/vnd.gmx' =&gt; 'gmx', 'application/vnd.google-earth.kml+xml' =&gt; 'kml', 'application/vnd.google-earth.kmz' =&gt; 'kmz', 'application/vnd.grafeq' =&gt; 'gqf', 'application/vnd.groove-account' =&gt; 'gac', 'application/vnd.groove-help' =&gt; 'ghf', 'application/vnd.groove-identity-message' =&gt; 'gim', 'application/vnd.groove-injector' =&gt; 'grv', 'application/vnd.groove-tool-message' =&gt; 'gtm', 'application/vnd.groove-tool-template' =&gt; 'tpl', 'application/vnd.groove-vcard' =&gt; 'vcg', 'application/vnd.hal+xml' =&gt; 'hal', 'application/vnd.handheld-entertainment+xml' =&gt; 'zmm', 'application/vnd.hbci' =&gt; 'hbci', 'application/vnd.hhe.lesson-player' =&gt; 'les', 'application/vnd.hp-hpgl' =&gt; 'hpgl', 'application/vnd.hp-hpid' =&gt; 'hpid', 'application/vnd.hp-hps' =&gt; 'hps', 'application/vnd.hp-jlyt' =&gt; 'jlt', 'application/vnd.hp-pcl' =&gt; 'pcl', 'application/vnd.hp-pclxl' =&gt; 'pclxl', 'application/vnd.hydrostatix.sof-data' =&gt; 'sfd-hdstx', 'application/vnd.hzn-3d-crossword' =&gt; 'x3d', 'application/vnd.ibm.minipay' =&gt; 'mpy', 'application/vnd.ibm.modcap' =&gt; 'afp', 'application/vnd.ibm.rights-management' =&gt; 'irm', 'application/vnd.ibm.secure-container' =&gt; 'sc', 'application/vnd.iccprofile' =&gt; 'icc', 'application/vnd.igloader' =&gt; 'igl', 'application/vnd.immervision-ivp' =&gt; 'ivp', 'application/vnd.immervision-ivu' =&gt; 'ivu', 'application/vnd.insors.igm' =&gt; 'igm', 'application/vnd.intercon.formnet' =&gt; 'xpw', 'application/vnd.intergeo' =&gt; 'i2g', 'application/vnd.intu.qbo' =&gt; 'qbo', 'application/vnd.intu.qfx' =&gt; 'qfx', 'application/vnd.ipunplugged.rcprofile' =&gt; 'rcprofile', 'application/vnd.irepository.package+xml' =&gt; 'irp', 'application/vnd.is-xpr' =&gt; 'xpr', 'application/vnd.isac.fcs' =&gt; 'fcs', 'application/vnd.jam' =&gt; 'jam', 'application/vnd.jcp.javame.midlet-rms' =&gt; 'rms', 'application/vnd.jisp' =&gt; 'jisp', 'application/vnd.joost.joda-archive' =&gt; 'joda', 'application/vnd.kahootz' =&gt; 'ktz', 'application/vnd.kde.karbon' =&gt; 'karbon', 'application/vnd.kde.kchart' =&gt; 'chrt', 'application/vnd.kde.kformula' =&gt; 'kfo', 'application/vnd.kde.kivio' =&gt; 'flw', 'application/vnd.kde.kontour' =&gt; 'kon', 'application/vnd.kde.kpresenter' =&gt; 'kpr', 'application/vnd.kde.kspread' =&gt; 'ksp', 'application/vnd.kde.kword' =&gt; 'kwd', 'application/vnd.kenameaapp' =&gt; 'htke', 'application/vnd.kidspiration' =&gt; 'kia', 'application/vnd.kinar' =&gt; 'kne', 'application/vnd.koan' =&gt; 'skp', 'application/vnd.kodak-descriptor' =&gt; 'sse', 'application/vnd.las.las+xml' =&gt; 'lasxml', 'application/vnd.llamagraphics.life-balance.desktop' =&gt; 'lbd', 'application/vnd.llamagraphics.life-balance.exchange+xml' =&gt; 'lbe', 'application/vnd.lotus-1-2-3' =&gt; '123', 'application/vnd.lotus-approach' =&gt; 'apr', 'application/vnd.lotus-freelance' =&gt; 'pre', 'application/vnd.lotus-notes' =&gt; 'nsf', 'application/vnd.lotus-organizer' =&gt; 'org', 'application/vnd.lotus-screencam' =&gt; 'scm', 'application/vnd.lotus-wordpro' =&gt; 'lwp', 'application/vnd.macports.portpkg' =&gt; 'portpkg', 'application/vnd.mcd' =&gt; 'mcd', 'application/vnd.medcalcdata' =&gt; 'mc1', 'application/vnd.mediastation.cdkey' =&gt; 'cdkey', 'application/vnd.mfer' =&gt; 'mwf', 'application/vnd.mfmp' =&gt; 'mfm', 'application/vnd.micrografx.flo' =&gt; 'flo', 'application/vnd.micrografx.igx' =&gt; 'igx', 'application/vnd.mif' =&gt; 'mif', 'application/vnd.mobius.daf' =&gt; 'daf', 'application/vnd.mobius.dis' =&gt; 'dis', 'application/vnd.mobius.mbk' =&gt; 'mbk', 'application/vnd.mobius.mqy' =&gt; 'mqy', 'application/vnd.mobius.msl' =&gt; 'msl', 'application/vnd.mobius.plc' =&gt; 'plc', 'application/vnd.mobius.txf' =&gt; 'txf', 'application/vnd.mophun.application' =&gt; 'mpn', 'application/vnd.mophun.certificate' =&gt; 'mpc', 'application/vnd.mozilla.xul+xml' =&gt; 'xul', 'application/vnd.ms-artgalry' =&gt; 'cil', 'application/vnd.ms-cab-compressed' =&gt; 'cab', 'application/vnd.ms-excel' =&gt; 'xls', 'application/vnd.ms-excel.addin.macroenabled.12' =&gt; 'xlam', 'application/vnd.ms-excel.sheet.binary.macroenabled.12' =&gt; 'xlsb', 'application/vnd.ms-excel.sheet.macroenabled.12' =&gt; 'xlsm', 'application/vnd.ms-excel.template.macroenabled.12' =&gt; 'xltm', 'application/vnd.ms-fontobject' =&gt; 'eot', 'application/vnd.ms-htmlhelp' =&gt; 'chm', 'application/vnd.ms-ims' =&gt; 'ims', 'application/vnd.ms-lrm' =&gt; 'lrm', 'application/vnd.ms-officetheme' =&gt; 'thmx', 'application/vnd.ms-pki.seccat' =&gt; 'cat', 'application/vnd.ms-pki.stl' =&gt; 'stl', 'application/vnd.ms-powerpoint' =&gt; 'ppt', 'application/vnd.ms-powerpoint.addin.macroenabled.12' =&gt; 'ppam', 'application/vnd.ms-powerpoint.presentation.macroenabled.12' =&gt; 'pptm', 'application/vnd.ms-powerpoint.slide.macroenabled.12' =&gt; 'sldm', 'application/vnd.ms-powerpoint.slideshow.macroenabled.12' =&gt; 'ppsm', 'application/vnd.ms-powerpoint.template.macroenabled.12' =&gt; 'potm', 'application/vnd.ms-project' =&gt; 'mpp', 'application/vnd.ms-word.document.macroenabled.12' =&gt; 'docm', 'application/vnd.ms-word.template.macroenabled.12' =&gt; 'dotm', 'application/vnd.ms-works' =&gt; 'wps', 'application/vnd.ms-wpl' =&gt; 'wpl', 'application/vnd.ms-xpsdocument' =&gt; 'xps', 'application/vnd.mseq' =&gt; 'mseq', 'application/vnd.musician' =&gt; 'mus', 'application/vnd.muvee.style' =&gt; 'msty', 'application/vnd.mynfc' =&gt; 'taglet', 'application/vnd.neurolanguage.nlu' =&gt; 'nlu', 'application/vnd.noblenet-directory' =&gt; 'nnd', 'application/vnd.noblenet-sealer' =&gt; 'nns', 'application/vnd.noblenet-web' =&gt; 'nnw', 'application/vnd.nokia.n-gage.data' =&gt; 'ngdat', 'application/vnd.nokia.n-gage.symbian.install' =&gt; 'n-gage', 'application/vnd.nokia.radio-preset' =&gt; 'rpst', 'application/vnd.nokia.radio-presets' =&gt; 'rpss', 'application/vnd.novadigm.edm' =&gt; 'edm', 'application/vnd.novadigm.edx' =&gt; 'edx', 'application/vnd.novadigm.ext' =&gt; 'ext', 'application/vnd.oasis.opendocument.chart' =&gt; 'odc', 'application/vnd.oasis.opendocument.chart-template' =&gt; 'otc', 'application/vnd.oasis.opendocument.database' =&gt; 'odb', 'application/vnd.oasis.opendocument.formula' =&gt; 'odf', 'application/vnd.oasis.opendocument.formula-template' =&gt; 'odft', 'application/vnd.oasis.opendocument.graphics' =&gt; 'odg', 'application/vnd.oasis.opendocument.graphics-template' =&gt; 'otg', 'application/vnd.oasis.opendocument.image' =&gt; 'odi', 'application/vnd.oasis.opendocument.image-template' =&gt; 'oti', 'application/vnd.oasis.opendocument.presentation' =&gt; 'odp', 'application/vnd.oasis.opendocument.presentation-template' =&gt; 'otp', 'application/vnd.oasis.opendocument.spreadsheet' =&gt; 'ods', 'application/vnd.oasis.opendocument.spreadsheet-template' =&gt; 'ots', 'application/vnd.oasis.opendocument.text' =&gt; 'odt', 'application/vnd.oasis.opendocument.text-master' =&gt; 'odm', 'application/vnd.oasis.opendocument.text-template' =&gt; 'ott', 'application/vnd.oasis.opendocument.text-web' =&gt; 'oth', 'application/vnd.olpc-sugar' =&gt; 'xo', 'application/vnd.oma.dd2+xml' =&gt; 'dd2', 'application/vnd.openofficeorg.extension' =&gt; 'oxt', 'application/vnd.openxmlformats-officedocument.presentationml.presentation' =&gt; 'pptx', 'application/vnd.openxmlformats-officedocument.presentationml.slide' =&gt; 'sldx', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow' =&gt; 'ppsx', 'application/vnd.openxmlformats-officedocument.presentationml.template' =&gt; 'potx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' =&gt; 'xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template' =&gt; 'xltx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' =&gt; 'docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template' =&gt; 'dotx', 'application/vnd.osgeo.mapguide.package' =&gt; 'mgp', 'application/vnd.osgi.dp' =&gt; 'dp', 'application/vnd.palm' =&gt; 'pdb', 'application/vnd.pawaafile' =&gt; 'paw', 'application/vnd.pg.format' =&gt; 'str', 'application/vnd.pg.osasli' =&gt; 'ei6', 'application/vnd.picsel' =&gt; 'efif', 'application/vnd.pmi.widget' =&gt; 'wg', 'application/vnd.pocketlearn' =&gt; 'plf', 'application/vnd.powerbuilder6' =&gt; 'pbd', 'application/vnd.previewsystems.box' =&gt; 'box', 'application/vnd.proteus.magazine' =&gt; 'mgz', 'application/vnd.publishare-delta-tree' =&gt; 'qps', 'application/vnd.pvi.ptid1' =&gt; 'ptid', 'application/vnd.quark.quarkxpress' =&gt; 'qxd', 'application/vnd.realvnc.bed' =&gt; 'bed', 'application/vnd.recordare.musicxml' =&gt; 'mxl', 'application/vnd.recordare.musicxml+xml' =&gt; 'musicxml', 'application/vnd.rig.cryptonote' =&gt; 'cryptonote', 'application/vnd.rim.cod' =&gt; 'cod', 'application/vnd.rn-realmedia' =&gt; 'rm', 'application/vnd.route66.link66+xml' =&gt; 'link66', 'application/vnd.sailingtracker.track' =&gt; 'st', 'application/vnd.seemail' =&gt; 'see', 'application/vnd.sema' =&gt; 'sema', 'application/vnd.semd' =&gt; 'semd', 'application/vnd.semf' =&gt; 'semf', 'application/vnd.shana.informed.formdata' =&gt; 'ifm', 'application/vnd.shana.informed.formtemplate' =&gt; 'itp', 'application/vnd.shana.informed.interchange' =&gt; 'iif', 'application/vnd.shana.informed.package' =&gt; 'ipk', 'application/vnd.simtech-mindmapper' =&gt; 'twd', 'application/vnd.smaf' =&gt; 'mmf', 'application/vnd.smart.teacher' =&gt; 'teacher', 'application/vnd.solent.sdkm+xml' =&gt; 'sdkm', 'application/vnd.spotfire.dxp' =&gt; 'dxp', 'application/vnd.spotfire.sfs' =&gt; 'sfs', 'application/vnd.stardivision.calc' =&gt; 'sdc', 'application/vnd.stardivision.draw' =&gt; 'sda', 'application/vnd.stardivision.impress' =&gt; 'sdd', 'application/vnd.stardivision.math' =&gt; 'smf', 'application/vnd.stardivision.writer' =&gt; 'sdw', 'application/vnd.stardivision.writer-global' =&gt; 'sgl', 'application/vnd.stepmania.package' =&gt; 'smzip', 'application/vnd.stepmania.stepchart' =&gt; 'sm', 'application/vnd.sun.xml.calc' =&gt; 'sxc', 'application/vnd.sun.xml.calc.template' =&gt; 'stc', 'application/vnd.sun.xml.draw' =&gt; 'sxd', 'application/vnd.sun.xml.draw.template' =&gt; 'std', 'application/vnd.sun.xml.impress' =&gt; 'sxi', 'application/vnd.sun.xml.impress.template' =&gt; 'sti', 'application/vnd.sun.xml.math' =&gt; 'sxm', 'application/vnd.sun.xml.writer' =&gt; 'sxw', 'application/vnd.sun.xml.writer.global' =&gt; 'sxg', 'application/vnd.sun.xml.writer.template' =&gt; 'stw', 'application/vnd.sus-calendar' =&gt; 'sus', 'application/vnd.svd' =&gt; 'svd', 'application/vnd.symbian.install' =&gt; 'sis', 'application/vnd.syncml+xml' =&gt; 'xsm', 'application/vnd.syncml.dm+wbxml' =&gt; 'bdm', 'application/vnd.syncml.dm+xml' =&gt; 'xdm', 'application/vnd.tao.intent-module-archive' =&gt; 'tao', 'application/vnd.tcpdump.pcap' =&gt; 'pcap', 'application/vnd.tmobile-livetv' =&gt; 'tmo', 'application/vnd.trid.tpt' =&gt; 'tpt', 'application/vnd.triscape.mxs' =&gt; 'mxs', 'application/vnd.trueapp' =&gt; 'tra', 'application/vnd.ufdl' =&gt; 'ufd', 'application/vnd.uiq.theme' =&gt; 'utz', 'application/vnd.umajin' =&gt; 'umj', 'application/vnd.unity' =&gt; 'unityweb', 'application/vnd.uoml+xml' =&gt; 'uoml', 'application/vnd.vcx' =&gt; 'vcx', 'application/vnd.visio' =&gt; 'vsd', 'application/vnd.visionary' =&gt; 'vis', 'application/vnd.vsf' =&gt; 'vsf', 'application/vnd.wap.wbxml' =&gt; 'wbxml', 'application/vnd.wap.wmlc' =&gt; 'wmlc', 'application/vnd.wap.wmlscriptc' =&gt; 'wmlsc', 'application/vnd.webturbo' =&gt; 'wtb', 'application/vnd.wolfram.player' =&gt; 'nbp', 'application/vnd.wordperfect' =&gt; 'wpd', 'application/vnd.wqd' =&gt; 'wqd', 'application/vnd.wt.stf' =&gt; 'stf', 'application/vnd.xara' =&gt; 'xar', 'application/vnd.xfdl' =&gt; 'xfdl', 'application/vnd.yamaha.hv-dic' =&gt; 'hvd', 'application/vnd.yamaha.hv-script' =&gt; 'hvs', 'application/vnd.yamaha.hv-voice' =&gt; 'hvp', 'application/vnd.yamaha.openscoreformat' =&gt; 'osf', 'application/vnd.yamaha.openscoreformat.osfpvg+xml' =&gt; 'osfpvg', 'application/vnd.yamaha.smaf-audio' =&gt; 'saf', 'application/vnd.yamaha.smaf-phrase' =&gt; 'spf', 'application/vnd.yellowriver-custom-menu' =&gt; 'cmp', 'application/vnd.zul' =&gt; 'zir', 'application/vnd.zzazz.deck+xml' =&gt; 'zaz', 'application/voicexml+xml' =&gt; 'vxml', 'application/widget' =&gt; 'wgt', 'application/winhlp' =&gt; 'hlp', 'application/wsdl+xml' =&gt; 'wsdl', 'application/wspolicy+xml' =&gt; 'wspolicy', 'application/x-7z-compressed' =&gt; '7z', 'application/x-abiword' =&gt; 'abw', 'application/x-ace-compressed' =&gt; 'ace', 'application/x-authorware-bin' =&gt; 'aab', 'application/x-authorware-map' =&gt; 'aam', 'application/x-authorware-seg' =&gt; 'aas', 'application/x-bcpio' =&gt; 'bcpio', 'application/x-bittorrent' =&gt; 'torrent', 'application/x-bzip' =&gt; 'bz', 'application/x-bzip2' =&gt; 'bz2', 'application/x-cdlink' =&gt; 'vcd', 'application/x-chat' =&gt; 'chat', 'application/x-chess-pgn' =&gt; 'pgn', 'application/x-cpio' =&gt; 'cpio', 'application/x-csh' =&gt; 'csh', 'application/x-debian-package' =&gt; 'deb', 'application/x-director' =&gt; 'dir', 'application/x-doom' =&gt; 'wad', 'application/x-dtbncx+xml' =&gt; 'ncx', 'application/x-dtbook+xml' =&gt; 'dtb', 'application/x-dtbresource+xml' =&gt; 'res', 'application/x-dvi' =&gt; 'dvi', 'application/x-font-bdf' =&gt; 'bdf', 'application/x-font-ghostscript' =&gt; 'gsf', 'application/x-font-linux-psf' =&gt; 'psf', 'application/x-font-otf' =&gt; 'otf', 'application/x-font-pcf' =&gt; 'pcf', 'application/x-font-snf' =&gt; 'snf', 'application/x-font-ttf' =&gt; 'ttf', 'application/x-font-type1' =&gt; 'pfa', 'application/x-font-woff' =&gt; 'woff', 'application/x-futuresplash' =&gt; 'spl', 'application/x-gnumeric' =&gt; 'gnumeric', 'application/x-gtar' =&gt; 'gtar', 'application/x-hdf' =&gt; 'hdf', 'application/x-java-jnlp-file' =&gt; 'jnlp', 'application/x-latex' =&gt; 'latex', 'application/x-mobipocket-ebook' =&gt; 'prc', 'application/x-ms-application' =&gt; 'application', 'application/x-ms-wmd' =&gt; 'wmd', 'application/x-ms-wmz' =&gt; 'wmz', 'application/x-ms-xbap' =&gt; 'xbap', 'application/x-msaccess' =&gt; 'mdb', 'application/x-msbinder' =&gt; 'obd', 'application/x-mscardfile' =&gt; 'crd', 'application/x-msclip' =&gt; 'clp', 'application/x-msdownload' =&gt; 'exe', 'application/x-msmediaview' =&gt; 'mvb', 'application/x-msmetafile' =&gt; 'wmf', 'application/x-msmoney' =&gt; 'mny', 'application/x-mspublisher' =&gt; 'pub', 'application/x-msschedule' =&gt; 'scd', 'application/x-msterminal' =&gt; 'trm', 'application/x-mswrite' =&gt; 'wri', 'application/x-netcdf' =&gt; 'nc', 'application/x-pkcs12' =&gt; 'p12', 'application/x-pkcs7-certificates' =&gt; 'p7b', 'application/x-pkcs7-certreqresp' =&gt; 'p7r', 'application/x-rar-compressed' =&gt; 'rar', 'application/x-rar' =&gt; 'rar', 'application/x-sh' =&gt; 'sh', 'application/x-shar' =&gt; 'shar', 'application/x-shockwave-flash' =&gt; 'swf', 'application/x-silverlight-app' =&gt; 'xap', 'application/x-stuffit' =&gt; 'sit', 'application/x-stuffitx' =&gt; 'sitx', 'application/x-sv4cpio' =&gt; 'sv4cpio', 'application/x-sv4crc' =&gt; 'sv4crc', 'application/x-tar' =&gt; 'tar', 'application/x-tcl' =&gt; 'tcl', 'application/x-tex' =&gt; 'tex', 'application/x-tex-tfm' =&gt; 'tfm', 'application/x-texinfo' =&gt; 'texinfo', 'application/x-ustar' =&gt; 'ustar', 'application/x-wais-source' =&gt; 'src', 'application/x-x509-ca-cert' =&gt; 'der', 'application/x-xfig' =&gt; 'fig', 'application/x-xpinstall' =&gt; 'xpi', 'application/xcap-diff+xml' =&gt; 'xdf', 'application/xenc+xml' =&gt; 'xenc', 'application/xhtml+xml' =&gt; 'xhtml', 'application/xml' =&gt; 'xml', 'application/xml-dtd' =&gt; 'dtd', 'application/xop+xml' =&gt; 'xop', 'application/xslt+xml' =&gt; 'xslt', 'application/xspf+xml' =&gt; 'xspf', 'application/xv+xml' =&gt; 'mxml', 'application/yang' =&gt; 'yang', 'application/yin+xml' =&gt; 'yin', 'application/zip' =&gt; 'zip', 'audio/adpcm' =&gt; 'adp', 'audio/basic' =&gt; 'au', 'audio/midi' =&gt; 'mid', 'audio/mp4' =&gt; 'mp4a', 'audio/mpeg' =&gt; 'mpga', 'audio/ogg' =&gt; 'oga', 'audio/vnd.dece.audio' =&gt; 'uva', 'audio/vnd.digital-winds' =&gt; 'eol', 'audio/vnd.dra' =&gt; 'dra', 'audio/vnd.dts' =&gt; 'dts', 'audio/vnd.dts.hd' =&gt; 'dtshd', 'audio/vnd.lucent.voice' =&gt; 'lvp', 'audio/vnd.ms-playready.media.pya' =&gt; 'pya', 'audio/vnd.nuera.ecelp4800' =&gt; 'ecelp4800', 'audio/vnd.nuera.ecelp7470' =&gt; 'ecelp7470', 'audio/vnd.nuera.ecelp9600' =&gt; 'ecelp9600', 'audio/vnd.rip' =&gt; 'rip', 'audio/webm' =&gt; 'weba', 'audio/x-aac' =&gt; 'aac', 'audio/x-aiff' =&gt; 'aif', 'audio/x-mpegurl' =&gt; 'm3u', 'audio/x-ms-wax' =&gt; 'wax', 'audio/x-ms-wma' =&gt; 'wma', 'audio/x-pn-realaudio' =&gt; 'ram', 'audio/x-pn-realaudio-plugin' =&gt; 'rmp', 'audio/x-wav' =&gt; 'wav', 'chemical/x-cdx' =&gt; 'cdx', 'chemical/x-cif' =&gt; 'cif', 'chemical/x-cmdf' =&gt; 'cmdf', 'chemical/x-cml' =&gt; 'cml', 'chemical/x-csml' =&gt; 'csml', 'chemical/x-xyz' =&gt; 'xyz', 'image/bmp' =&gt; 'bmp', 'image/cgm' =&gt; 'cgm', 'image/g3fax' =&gt; 'g3', 'image/gif' =&gt; 'gif', 'image/ief' =&gt; 'ief', 'image/jpeg' =&gt; 'jpeg', 'image/ktx' =&gt; 'ktx', 'image/png' =&gt; 'png', 'image/prs.btif' =&gt; 'btif', 'image/svg+xml' =&gt; 'svg', 'image/tiff' =&gt; 'tiff', 'image/vnd.adobe.photoshop' =&gt; 'psd', 'image/vnd.dece.graphic' =&gt; 'uvi', 'image/vnd.dvb.subtitle' =&gt; 'sub', 'image/vnd.djvu' =&gt; 'djvu', 'image/vnd.dwg' =&gt; 'dwg', 'image/vnd.dxf' =&gt; 'dxf', 'image/vnd.fastbidsheet' =&gt; 'fbs', 'image/vnd.fpx' =&gt; 'fpx', 'image/vnd.fst' =&gt; 'fst', 'image/vnd.fujixerox.edmics-mmr' =&gt; 'mmr', 'image/vnd.fujixerox.edmics-rlc' =&gt; 'rlc', 'image/vnd.ms-modi' =&gt; 'mdi', 'image/vnd.net-fpx' =&gt; 'npx', 'image/vnd.wap.wbmp' =&gt; 'wbmp', 'image/vnd.xiff' =&gt; 'xif', 'image/webp' =&gt; 'webp', 'image/x-cmu-raster' =&gt; 'ras', 'image/x-cmx' =&gt; 'cmx', 'image/x-freehand' =&gt; 'fh', 'image/x-icon' =&gt; 'ico', 'image/x-pcx' =&gt; 'pcx', 'image/x-pict' =&gt; 'pic', 'image/x-portable-anymap' =&gt; 'pnm', 'image/x-portable-bitmap' =&gt; 'pbm', 'image/x-portable-graymap' =&gt; 'pgm', 'image/x-portable-pixmap' =&gt; 'ppm', 'image/x-rgb' =&gt; 'rgb', 'image/x-xbitmap' =&gt; 'xbm', 'image/x-xpixmap' =&gt; 'xpm', 'image/x-xwindowdump' =&gt; 'xwd', 'message/rfc822' =&gt; 'eml', 'model/iges' =&gt; 'igs', 'model/mesh' =&gt; 'msh', 'model/vnd.collada+xml' =&gt; 'dae', 'model/vnd.dwf' =&gt; 'dwf', 'model/vnd.gdl' =&gt; 'gdl', 'model/vnd.gtw' =&gt; 'gtw', 'model/vnd.mts' =&gt; 'mts', 'model/vnd.vtu' =&gt; 'vtu', 'model/vrml' =&gt; 'wrl', 'text/calendar' =&gt; 'ics', 'text/css' =&gt; 'css', 'text/csv' =&gt; 'csv', 'text/html' =&gt; 'html', 'text/n3' =&gt; 'n3', 'text/plain' =&gt; 'txt', 'text/prs.lines.tag' =&gt; 'dsc', 'text/richtext' =&gt; 'rtx', 'text/sgml' =&gt; 'sgml', 'text/tab-separated-values' =&gt; 'tsv', 'text/troff' =&gt; 't', 'text/turtle' =&gt; 'ttl', 'text/uri-list' =&gt; 'uri', 'text/vcard' =&gt; 'vcard', 'text/vnd.curl' =&gt; 'curl', 'text/vnd.curl.dcurl' =&gt; 'dcurl', 'text/vnd.curl.scurl' =&gt; 'scurl', 'text/vnd.curl.mcurl' =&gt; 'mcurl', 'text/vnd.dvb.subtitle' =&gt; 'sub', 'text/vnd.fly' =&gt; 'fly', 'text/vnd.fmi.flexstor' =&gt; 'flx', 'text/vnd.graphviz' =&gt; 'gv', 'text/vnd.in3d.3dml' =&gt; '3dml', 'text/vnd.in3d.spot' =&gt; 'spot', 'text/vnd.sun.j2me.app-descriptor' =&gt; 'jad', 'text/vnd.wap.wml' =&gt; 'wml', 'text/vnd.wap.wmlscript' =&gt; 'wmls', 'text/x-asm' =&gt; 's', 'text/x-c' =&gt; 'c', 'text/x-fortran' =&gt; 'f', 'text/x-pascal' =&gt; 'p', 'text/x-java-source' =&gt; 'java', 'text/x-setext' =&gt; 'etx', 'text/x-uuencode' =&gt; 'uu', 'text/x-vcalendar' =&gt; 'vcs', 'text/x-vcard' =&gt; 'vcf', 'video/3gpp' =&gt; '3gp', 'video/3gpp2' =&gt; '3g2', 'video/h261' =&gt; 'h261', 'video/h263' =&gt; 'h263', 'video/h264' =&gt; 'h264', 'video/jpeg' =&gt; 'jpgv', 'video/jpm' =&gt; 'jpm', 'video/mj2' =&gt; 'mj2', 'video/mp4' =&gt; 'mp4', 'video/mpeg' =&gt; 'mpeg', 'video/ogg' =&gt; 'ogv', 'video/quicktime' =&gt; 'qt', 'video/vnd.dece.hd' =&gt; 'uvh', 'video/vnd.dece.mobile' =&gt; 'uvm', 'video/vnd.dece.pd' =&gt; 'uvp', 'video/vnd.dece.sd' =&gt; 'uvs', 'video/vnd.dece.video' =&gt; 'uvv', 'video/vnd.dvb.file' =&gt; 'dvb', 'video/vnd.fvt' =&gt; 'fvt', 'video/vnd.mpegurl' =&gt; 'mxu', 'video/vnd.ms-playready.media.pyv' =&gt; 'pyv', 'video/vnd.uvvu.mp4' =&gt; 'uvu', 'video/vnd.vivo' =&gt; 'viv', 'video/webm' =&gt; 'webm', 'video/x-f4v' =&gt; 'f4v', 'video/x-fli' =&gt; 'fli', 'video/x-flv' =&gt; 'flv', 'video/x-m4v' =&gt; 'm4v', 'video/x-ms-asf' =&gt; 'asf', 'video/x-ms-wm' =&gt; 'wm', 'video/x-ms-wmv' =&gt; 'wmv', 'video/x-ms-wmx' =&gt; 'wmx', 'video/x-ms-wvx' =&gt; 'wvx', 'video/x-msvideo' =&gt; 'avi', 'video/x-sgi-movie' =&gt; 'movie', 'x-conference/x-cooltalk' =&gt; 'ice')</default>
        <docblock line="19">
          <description>A map of mime types and their default extensions.</description>
          <long-description>&lt;p&gt;This list has been placed under the public domain by the Apache HTTPD project.&lt;/p&gt;</long-description>
          <tag line="19" name="see" description="\Symfony\Component\HttpFoundation\File\MimeType\http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types" refers="\Symfony\Component\HttpFoundation\File\MimeType\http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types"/>
          <tag line="19" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File\MimeType" line="736" package="Default">
        <name>guess</name>
        <full_name>guess</full_name>
        <docblock line="733">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="736">
          <name>$mimeType</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/File/MimeType/MimeTypeExtensionGuesser.php</error>
      <error line="733" code="50015">Argument $mimeType is missing from the Docblock of guess()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/File/Exception/UploadException.php" hash="823d7273c56d64a9941a5e27aa734603" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\File\Exception" line="19" package="Default">
      <extends>\Symfony\Component\HttpFoundation\File\Exception\FileException</extends>
      <name>UploadException</name>
      <full_name>\Symfony\Component\HttpFoundation\File\Exception\UploadException</full_name>
      <docblock line="14">
        <description>Thrown when an error occurred during file upload</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Bernhard Schussek &lt;bschussek@gmail.com&gt;"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/File/Exception/UploadException.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/File/Exception/FileException.php" hash="c27b8267539837aa73b41b9db69320fe" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\File\Exception" line="19" package="Default">
      <extends>\RuntimeException</extends>
      <name>FileException</name>
      <full_name>\Symfony\Component\HttpFoundation\File\Exception\FileException</full_name>
      <docblock line="14">
        <description>Thrown when an error occurred in the component File</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Bernhard Schussek &lt;bschussek@gmail.com&gt;"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/File/Exception/FileException.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/File/Exception/AccessDeniedException.php" hash="c110fdfbfa247b94b60dc67b1b82b56b" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\File\Exception" line="19" package="Default">
      <extends>\Symfony\Component\HttpFoundation\File\Exception\FileException</extends>
      <name>AccessDeniedException</name>
      <full_name>\Symfony\Component\HttpFoundation\File\Exception\AccessDeniedException</full_name>
      <docblock line="14">
        <description>Thrown when the access on a file was denied.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Bernhard Schussek &lt;bschussek@gmail.com&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File\Exception" line="26" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="21">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="21" name="param" description="The path to the accessed file" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/File/Exception/AccessDeniedException.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/File/Exception/FileNotFoundException.php" hash="61ea5e5b2353557762db91a4ceeab31d" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\File\Exception" line="19" package="Default">
      <extends>\Symfony\Component\HttpFoundation\File\Exception\FileException</extends>
      <name>FileNotFoundException</name>
      <full_name>\Symfony\Component\HttpFoundation\File\Exception\FileNotFoundException</full_name>
      <docblock line="14">
        <description>Thrown when a file was not found</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Bernhard Schussek &lt;bschussek@gmail.com&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File\Exception" line="26" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="21">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="21" name="param" description="The path to the file that was not found" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/File/Exception/FileNotFoundException.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/File/Exception/UnexpectedTypeException.php" hash="64c667944f291622d6717c42addf75b2" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\File\Exception" line="14" package="Default">
      <extends>\Symfony\Component\HttpFoundation\File\Exception\FileException</extends>
      <name>UnexpectedTypeException</name>
      <full_name>\Symfony\Component\HttpFoundation\File\Exception\UnexpectedTypeException</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File\Exception" line="16" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="16">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="16">
          <name>$expectedType</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/File/Exception/UnexpectedTypeException.php</error>
      <error line="14" code="50000">No DocBlock was found for \Symfony\Component\HttpFoundation\File\Exception\UnexpectedTypeException</error>
      <error line="16" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/File/UploadedFile.php" hash="d1a2052e5f1058580b7ba656c8b757a0" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\File" line="26" package="Default">
      <extends>\Symfony\Component\HttpFoundation\File\File</extends>
      <name>UploadedFile</name>
      <full_name>\Symfony\Component\HttpFoundation\File\UploadedFile</full_name>
      <docblock line="17">
        <description>A file uploaded through a form.</description>
        <long-description></long-description>
        <tag line="17" name="author" description="Bernhard Schussek &lt;bschussek@gmail.com&gt;"/>
        <tag line="17" name="author" description="Florian Eckerstorfer &lt;florian@eckerstorfer.org&gt;"/>
        <tag line="17" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="17" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="private" line="35" namespace="Symfony\Component\HttpFoundation\File" package="Default">
        <name>$test</name>
        <default>false</default>
        <docblock line="28">
          <description>Whether the test mode is activated.</description>
          <long-description>&lt;p&gt;Local files are used in test mode hence the code should not enforce HTTP uploads.&lt;/p&gt;</long-description>
          <tag line="28" name="var" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="Symfony\Component\HttpFoundation\File" package="Default">
        <name>$originalName</name>
        <default></default>
        <docblock line="37">
          <description>The original name of the uploaded file.</description>
          <long-description></long-description>
          <tag line="37" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="49" namespace="Symfony\Component\HttpFoundation\File" package="Default">
        <name>$mimeType</name>
        <default></default>
        <docblock line="44">
          <description>The mime type provided by the uploader.</description>
          <long-description></long-description>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="56" namespace="Symfony\Component\HttpFoundation\File" package="Default">
        <name>$size</name>
        <default></default>
        <docblock line="51">
          <description>The file size provided by the uploader.</description>
          <long-description></long-description>
          <tag line="51" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="63" namespace="Symfony\Component\HttpFoundation\File" package="Default">
        <name>$error</name>
        <default></default>
        <docblock line="58">
          <description>The UPLOAD_ERR_XXX constant provided by the uploader.</description>
          <long-description></long-description>
          <tag line="58" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File" line="91" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="65">
          <description>Accepts the information of the uploaded file as provided by the PHP global $_FILES.</description>
          <long-description>&lt;p&gt;The file object is only created when the uploaded file is valid (i.e. when the
isValid() method returns true). Otherwise the only methods that could be called
on an UploadedFile instance are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;getClientOriginalName,&lt;/li&gt;
&lt;li&gt;getClientMimeType,&lt;/li&gt;
&lt;li&gt;isValid,&lt;/li&gt;
&lt;li&gt;getError.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Calling any other method on an non-valid instance will cause an unpredictable result.&lt;/p&gt;</long-description>
          <tag line="65" name="param" description="The full temporary path to the file" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="param" description="The original file name" type="string" variable="$originalName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="param" description="The type of the file as provided by PHP" type="string" variable="$mimeType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="param" description="The file size" type="integer" variable="$size">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="65" name="param" description="The error constant of the upload (one of PHP's UPLOAD_ERR_XXX constants)" type="integer" variable="$error">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="65" name="param" description="Whether the test mode is active" type="Boolean" variable="$test">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="65" name="throws" description="If file_uploads is disabled" type="\Symfony\Component\HttpFoundation\File\Exception\FileException">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\Exception\FileException</type>
          </tag>
          <tag line="65" name="throws" description="If the file does not exist" type="\Symfony\Component\HttpFoundation\File\Exception\FileNotFoundException">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\Exception\FileNotFoundException</type>
          </tag>
          <tag line="65" name="api" description=""/>
        </docblock>
        <argument line="91">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$originalName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$mimeType</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="91">
          <name>$size</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="91">
          <name>$error</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="91">
          <name>$test</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File" line="116" package="Default">
        <name>getClientOriginalName</name>
        <full_name>getClientOriginalName</full_name>
        <docblock line="106">
          <description>Returns the original file name.</description>
          <long-description>&lt;p&gt;It is extracted from the request from which the file has been uploaded.
Then is should not be considered as a safe value.&lt;/p&gt;</long-description>
          <tag line="106" name="return" description="The original name" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="106" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File" line="131" package="Default">
        <name>getClientMimeType</name>
        <full_name>getClientMimeType</full_name>
        <docblock line="121">
          <description>Returns the file mime type.</description>
          <long-description>&lt;p&gt;It is extracted from the request from which the file has been uploaded.
Then is should not be considered as a safe value.&lt;/p&gt;</long-description>
          <tag line="121" name="return" description="The mime type" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="121" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File" line="146" package="Default">
        <name>getClientSize</name>
        <full_name>getClientSize</full_name>
        <docblock line="136">
          <description>Returns the file size.</description>
          <long-description>&lt;p&gt;It is extracted from the request from which the file has been uploaded.
Then is should not be considered as a safe value.&lt;/p&gt;</long-description>
          <tag line="136" name="return" description="The file size" type="integer|null">
            <type by_reference="false">integer</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="136" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File" line="161" package="Default">
        <name>getError</name>
        <full_name>getError</full_name>
        <docblock line="151">
          <description>Returns the upload error.</description>
          <long-description>&lt;p&gt;If the upload was successful, the constant UPLOAD_ERR_OK is returned.
Otherwise one of the other UPLOAD_ERR_XXX constants is returned.&lt;/p&gt;</long-description>
          <tag line="151" name="return" description="The upload error" type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="151" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File" line="173" package="Default">
        <name>isValid</name>
        <full_name>isValid</full_name>
        <docblock line="166">
          <description>Returns whether the file was uploaded successfully.</description>
          <long-description></long-description>
          <tag line="166" name="return" description="True if no error occurred during uploading" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="166" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File" line="190" package="Default">
        <name>move</name>
        <full_name>move</full_name>
        <docblock line="178">
          <description>Moves the file to a new location.</description>
          <long-description></long-description>
          <tag line="178" name="param" description="The destination folder" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="param" description="The new file name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="return" description="A File object representing the new file" type="\Symfony\Component\HttpFoundation\File\File">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\File</type>
          </tag>
          <tag line="178" name="throws" description="if the file has not been uploaded via Http" type="\Symfony\Component\HttpFoundation\File\Exception\FileException">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\Exception\FileException</type>
          </tag>
          <tag line="178" name="api" description=""/>
        </docblock>
        <argument line="190">
          <name>$directory</name>
          <default></default>
          <type/>
        </argument>
        <argument line="190">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation\File" line="217" package="Default">
        <name>getMaxFilesize</name>
        <full_name>getMaxFilesize</full_name>
        <docblock line="212">
          <description>Returns the maximum size of an uploaded file as configured in php.ini</description>
          <long-description></long-description>
          <tag line="212" name="return" description="The maximum size of an uploaded file in bytes" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/File/UploadedFile.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/File/File.php" hash="18c5f1ce94f5ae0733f9b5b73239d336" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation\File" line="26" package="Default">
      <extends>\SplFileInfo</extends>
      <name>File</name>
      <full_name>\Symfony\Component\HttpFoundation\File\File</full_name>
      <docblock line="19">
        <description>A file in the file system.</description>
        <long-description></long-description>
        <tag line="19" name="author" description="Bernhard Schussek &lt;bschussek@gmail.com&gt;"/>
        <tag line="19" name="api" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File" line="38" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="28">
          <description>Constructs a new file from the given path.</description>
          <long-description></long-description>
          <tag line="28" name="param" description="The path to the file" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="param" description="Whether to check the path or not" type="Boolean" variable="$checkPath">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="28" name="throws" description="If the given path is not a file" type="\Symfony\Component\HttpFoundation\File\Exception\FileNotFoundException">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\Exception\FileNotFoundException</type>
          </tag>
          <tag line="28" name="api" description=""/>
        </docblock>
        <argument line="38">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="38">
          <name>$checkPath</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File" line="56" package="Default">
        <name>guessExtension</name>
        <full_name>guessExtension</full_name>
        <docblock line="47">
          <description>Returns the extension based on the mime type.</description>
          <long-description>&lt;p&gt;If the mime type is unknown, returns null.&lt;/p&gt;</long-description>
          <tag line="47" name="return" description="The guessed extension or null if it cannot be guessed" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="47" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File" line="75" package="Default">
        <name>getMimeType</name>
        <full_name>getMimeType</full_name>
        <docblock line="64">
          <description>Returns the mime type of the file.</description>
          <long-description>&lt;p&gt;The mime type is guessed using the functions finfo(), mime_content_type()
and the system binary "file" (in this order), depending on which of those
is available on the current operating system.&lt;/p&gt;</long-description>
          <tag line="64" name="return" description="The guessed mime type (i.e. &quot;application/pdf&quot;)" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="64" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File" line="91" package="Default">
        <name>getExtension</name>
        <full_name>getExtension</full_name>
        <docblock line="82">
          <description>Returns the extension of the file.</description>
          <long-description>&lt;p&gt;\SplFileInfo::getExtension() is not available before PHP 5.3.6&lt;/p&gt;</long-description>
          <tag line="82" name="return" description="The extension" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation\File" line="108" package="Default">
        <name>move</name>
        <full_name>move</full_name>
        <docblock line="96">
          <description>Moves the file to a new location.</description>
          <long-description></long-description>
          <tag line="96" name="param" description="The destination folder" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="param" description="The new file name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="return" description="A File object representing the new file" type="\Symfony\Component\HttpFoundation\File\File">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\File</type>
          </tag>
          <tag line="96" name="throws" description="if the target file could not be created" type="\Symfony\Component\HttpFoundation\File\Exception\FileException">
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\Exception\FileException</type>
          </tag>
          <tag line="96" name="api" description=""/>
        </docblock>
        <argument line="108">
          <name>$directory</name>
          <default></default>
          <type/>
        </argument>
        <argument line="108">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation\File" line="122" package="Default">
        <name>getTargetFile</name>
        <full_name>getTargetFile</full_name>
        <argument line="122">
          <name>$directory</name>
          <default></default>
          <type/>
        </argument>
        <argument line="122">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation\File" line="144" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="137">
          <description>Returns locale independent base name of the given path.</description>
          <long-description></long-description>
          <tag line="137" name="param" description="The new file name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="return" description="containing" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="144">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/File/File.php</error>
      <error line="122" code="50010">No DocBlock was found for method getTargetFile()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Request.php" hash="b158bcc51a43981fd1adca57f0f0b0d0" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation" line="31" package="Default">
      <extends/>
      <name>Request</name>
      <full_name>\Symfony\Component\HttpFoundation\Request</full_name>
      <docblock line="16">
        <description>Request represents an HTTP request.</description>
        <long-description>&lt;p&gt;The methods dealing with URL accept / return a raw path (% encoded):
  * getBasePath
  * getBaseUrl
  * getPathInfo
  * getRequestUri
  * getUri
  * getUriForPath&lt;/p&gt;</long-description>
        <tag line="16" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="16" name="api" description=""/>
      </docblock>
      <constant namespace="Symfony\Component\HttpFoundation" line="33" package="Default">
        <name>HEADER_CLIENT_IP</name>
        <full_name>HEADER_CLIENT_IP</full_name>
        <value>'client_ip'</value>
      </constant>
      <constant namespace="Symfony\Component\HttpFoundation" line="34" package="Default">
        <name>HEADER_CLIENT_HOST</name>
        <full_name>HEADER_CLIENT_HOST</full_name>
        <value>'client_host'</value>
      </constant>
      <constant namespace="Symfony\Component\HttpFoundation" line="35" package="Default">
        <name>HEADER_CLIENT_PROTO</name>
        <full_name>HEADER_CLIENT_PROTO</full_name>
        <value>'client_proto'</value>
      </constant>
      <constant namespace="Symfony\Component\HttpFoundation" line="36" package="Default">
        <name>HEADER_CLIENT_PORT</name>
        <full_name>HEADER_CLIENT_PORT</full_name>
        <value>'client_port'</value>
      </constant>
      <property final="false" static="true" visibility="protected" line="38" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$trustProxy</name>
        <default>false</default>
      </property>
      <property final="false" static="true" visibility="protected" line="40" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$trustedProxies</name>
        <default>array()</default>
      </property>
      <property final="false" static="true" visibility="protected" line="49" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$trustedHeaders</name>
        <default>array(self::HEADER_CLIENT_IP =&gt; 'X_FORWARDED_FOR', self::HEADER_CLIENT_HOST =&gt; 'X_FORWARDED_HOST', self::HEADER_CLIENT_PROTO =&gt; 'X_FORWARDED_PROTO', self::HEADER_CLIENT_PORT =&gt; 'X_FORWARDED_PORT')</default>
        <docblock line="42">
          <description>Names for headers that can be trusted when
using trusted proxies.</description>
          <long-description>&lt;p&gt;The default names are non-standard, but widely used
by popular reverse proxies (like Apache mod_proxy or Amazon EC2).&lt;/p&gt;</long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="61" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$attributes</name>
        <default></default>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
          <tag line="56" name="var" description="" type="\Symfony\Component\HttpFoundation\ParameterBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\ParameterBag</type>
          </tag>
          <tag line="56" name="api" description=""/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="68" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$request</name>
        <default></default>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
          <tag line="63" name="var" description="" type="\Symfony\Component\HttpFoundation\ParameterBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\ParameterBag</type>
          </tag>
          <tag line="63" name="api" description=""/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="75" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$query</name>
        <default></default>
        <docblock line="70">
          <description></description>
          <long-description></long-description>
          <tag line="70" name="var" description="" type="\Symfony\Component\HttpFoundation\ParameterBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\ParameterBag</type>
          </tag>
          <tag line="70" name="api" description=""/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="82" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$server</name>
        <default></default>
        <docblock line="77">
          <description></description>
          <long-description></long-description>
          <tag line="77" name="var" description="" type="\Symfony\Component\HttpFoundation\ServerBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\ServerBag</type>
          </tag>
          <tag line="77" name="api" description=""/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="89" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$files</name>
        <default></default>
        <docblock line="84">
          <description></description>
          <long-description></long-description>
          <tag line="84" name="var" description="" type="\Symfony\Component\HttpFoundation\FileBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\FileBag</type>
          </tag>
          <tag line="84" name="api" description=""/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="96" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$cookies</name>
        <default></default>
        <docblock line="91">
          <description></description>
          <long-description></long-description>
          <tag line="91" name="var" description="" type="\Symfony\Component\HttpFoundation\ParameterBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\ParameterBag</type>
          </tag>
          <tag line="91" name="api" description=""/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="103" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$headers</name>
        <default></default>
        <docblock line="98">
          <description></description>
          <long-description></long-description>
          <tag line="98" name="var" description="" type="\Symfony\Component\HttpFoundation\HeaderBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\HeaderBag</type>
          </tag>
          <tag line="98" name="api" description=""/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="108" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$content</name>
        <default></default>
        <docblock line="105">
          <description></description>
          <long-description></long-description>
          <tag line="105" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="113" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$languages</name>
        <default></default>
        <docblock line="110">
          <description></description>
          <long-description></long-description>
          <tag line="110" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="118" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$charsets</name>
        <default></default>
        <docblock line="115">
          <description></description>
          <long-description></long-description>
          <tag line="115" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="123" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$acceptableContentTypes</name>
        <default></default>
        <docblock line="120">
          <description></description>
          <long-description></long-description>
          <tag line="120" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="128" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$pathInfo</name>
        <default></default>
        <docblock line="125">
          <description></description>
          <long-description></long-description>
          <tag line="125" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="133" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$requestUri</name>
        <default></default>
        <docblock line="130">
          <description></description>
          <long-description></long-description>
          <tag line="130" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="138" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$baseUrl</name>
        <default></default>
        <docblock line="135">
          <description></description>
          <long-description></long-description>
          <tag line="135" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="143" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$basePath</name>
        <default></default>
        <docblock line="140">
          <description></description>
          <long-description></long-description>
          <tag line="140" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="148" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$method</name>
        <default></default>
        <docblock line="145">
          <description></description>
          <long-description></long-description>
          <tag line="145" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="153" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$format</name>
        <default></default>
        <docblock line="150">
          <description></description>
          <long-description></long-description>
          <tag line="150" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="158" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$session</name>
        <default></default>
        <docblock line="155">
          <description></description>
          <long-description></long-description>
          <tag line="155" name="var" description="" type="\Symfony\Component\HttpFoundation\Session\SessionInterface">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\SessionInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="163" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$locale</name>
        <default></default>
        <docblock line="160">
          <description></description>
          <long-description></long-description>
          <tag line="160" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="168" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$defaultLocale</name>
        <default>'en'</default>
        <docblock line="165">
          <description></description>
          <long-description></long-description>
          <tag line="165" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="173" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$formats</name>
        <default></default>
        <docblock line="170">
          <description></description>
          <long-description></long-description>
          <tag line="170" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="188" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="175">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="175" name="param" description="The GET parameters" type="array" variable="$query">
            <type by_reference="false">array</type>
          </tag>
          <tag line="175" name="param" description="The POST parameters" type="array" variable="$request">
            <type by_reference="false">array</type>
          </tag>
          <tag line="175" name="param" description="The request attributes (parameters parsed from the PATH_INFO, ...)" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="175" name="param" description="The COOKIE parameters" type="array" variable="$cookies">
            <type by_reference="false">array</type>
          </tag>
          <tag line="175" name="param" description="The FILES parameters" type="array" variable="$files">
            <type by_reference="false">array</type>
          </tag>
          <tag line="175" name="param" description="The SERVER parameters" type="array" variable="$server">
            <type by_reference="false">array</type>
          </tag>
          <tag line="175" name="param" description="The raw body data" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="175" name="api" description=""/>
        </docblock>
        <argument line="188">
          <name>$query</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="188">
          <name>$request</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="188">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="188">
          <name>$cookies</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="188">
          <name>$files</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="188">
          <name>$server</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="188">
          <name>$content</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="208" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="193">
          <description>Sets the parameters for this request.</description>
          <long-description>&lt;p&gt;This method also re-initializes all properties.&lt;/p&gt;</long-description>
          <tag line="193" name="param" description="The GET parameters" type="array" variable="$query">
            <type by_reference="false">array</type>
          </tag>
          <tag line="193" name="param" description="The POST parameters" type="array" variable="$request">
            <type by_reference="false">array</type>
          </tag>
          <tag line="193" name="param" description="The request attributes (parameters parsed from the PATH_INFO, ...)" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="193" name="param" description="The COOKIE parameters" type="array" variable="$cookies">
            <type by_reference="false">array</type>
          </tag>
          <tag line="193" name="param" description="The FILES parameters" type="array" variable="$files">
            <type by_reference="false">array</type>
          </tag>
          <tag line="193" name="param" description="The SERVER parameters" type="array" variable="$server">
            <type by_reference="false">array</type>
          </tag>
          <tag line="193" name="param" description="The raw body data" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="193" name="api" description=""/>
        </docblock>
        <argument line="208">
          <name>$query</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="208">
          <name>$request</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="208">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="208">
          <name>$cookies</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="208">
          <name>$files</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="208">
          <name>$server</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="208">
          <name>$content</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation" line="237" package="Default">
        <name>createFromGlobals</name>
        <full_name>createFromGlobals</full_name>
        <docblock line="230">
          <description>Creates a new request with values from PHP's super globals.</description>
          <long-description></long-description>
          <tag line="230" name="return" description="A new request" type="\Symfony\Component\HttpFoundation\Request">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Request</type>
          </tag>
          <tag line="230" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation" line="266" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="251">
          <description>Creates a Request based on a given URI and configuration.</description>
          <long-description></long-description>
          <tag line="251" name="param" description="The URI" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="251" name="param" description="The HTTP method" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="251" name="param" description="The query (GET) or request (POST) parameters" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="251" name="param" description="The request cookies ($_COOKIE)" type="array" variable="$cookies">
            <type by_reference="false">array</type>
          </tag>
          <tag line="251" name="param" description="The request files ($_FILES)" type="array" variable="$files">
            <type by_reference="false">array</type>
          </tag>
          <tag line="251" name="param" description="The server parameters ($_SERVER)" type="array" variable="$server">
            <type by_reference="false">array</type>
          </tag>
          <tag line="251" name="param" description="The raw body data" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="251" name="return" description="A Request instance" type="\Symfony\Component\HttpFoundation\Request">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Request</type>
          </tag>
          <tag line="251" name="api" description=""/>
        </docblock>
        <argument line="266">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="266">
          <name>$method</name>
          <default>'GET'</default>
          <type/>
        </argument>
        <argument line="266">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="266">
          <name>$cookies</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="266">
          <name>$files</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="266">
          <name>$server</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="266">
          <name>$content</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="360" package="Default">
        <name>duplicate</name>
        <full_name>duplicate</full_name>
        <docblock line="346">
          <description>Clones a request and overrides some of its parameters.</description>
          <long-description></long-description>
          <tag line="346" name="param" description="The GET parameters" type="array" variable="$query">
            <type by_reference="false">array</type>
          </tag>
          <tag line="346" name="param" description="The POST parameters" type="array" variable="$request">
            <type by_reference="false">array</type>
          </tag>
          <tag line="346" name="param" description="The request attributes (parameters parsed from the PATH_INFO, ...)" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="346" name="param" description="The COOKIE parameters" type="array" variable="$cookies">
            <type by_reference="false">array</type>
          </tag>
          <tag line="346" name="param" description="The FILES parameters" type="array" variable="$files">
            <type by_reference="false">array</type>
          </tag>
          <tag line="346" name="param" description="The SERVER parameters" type="array" variable="$server">
            <type by_reference="false">array</type>
          </tag>
          <tag line="346" name="return" description="The duplicated request" type="\Symfony\Component\HttpFoundation\Request">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Request</type>
          </tag>
          <tag line="346" name="api" description=""/>
        </docblock>
        <argument line="360">
          <name>$query</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="360">
          <name>$request</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="360">
          <name>$attributes</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="360">
          <name>$cookies</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="360">
          <name>$files</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="360">
          <name>$server</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="401" package="Default">
        <name>__clone</name>
        <full_name>__clone</full_name>
        <docblock line="395">
          <description>Clones the current request.</description>
          <long-description>&lt;p&gt;Note that the session is not cloned as duplicated requests
are most of the time sub-requests of the main one.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="417" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="412">
          <description>Returns the request as a string.</description>
          <long-description></long-description>
          <tag line="412" name="return" description="The request" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="433" package="Default">
        <name>overrideGlobals</name>
        <full_name>overrideGlobals</full_name>
        <docblock line="425">
          <description>Overrides the PHP global variables according to this request instance.</description>
          <long-description>&lt;p&gt;It overrides $_GET, $_POST, $_REQUEST, $_SERVER, $_COOKIE.
$_FILES is never override, see rfc1867&lt;/p&gt;</long-description>
          <tag line="425" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation" line="465" package="Default">
        <name>trustProxyData</name>
        <full_name>trustProxyData</full_name>
        <docblock line="460">
          <description>Trusts $_SERVER entries coming from proxies.</description>
          <long-description></long-description>
          <tag line="460" name="deprecated" description="Deprecated since version 2.0, to be removed in 2.3. Use setTrustedProxies instead."/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation" line="479" package="Default">
        <name>setTrustedProxies</name>
        <full_name>setTrustedProxies</full_name>
        <docblock line="470">
          <description>Sets a list of trusted proxies.</description>
          <long-description>&lt;p&gt;You should only list the reverse proxies that you manage directly.&lt;/p&gt;</long-description>
          <tag line="470" name="param" description="A list of trusted proxies" type="array" variable="$proxies">
            <type by_reference="false">array</type>
          </tag>
          <tag line="470" name="api" description=""/>
        </docblock>
        <argument line="479">
          <name>$proxies</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation" line="500" package="Default">
        <name>setTrustedHeaderName</name>
        <full_name>setTrustedHeaderName</full_name>
        <docblock line="485">
          <description>Sets the name for trusted headers.</description>
          <long-description>&lt;p&gt;The following header keys are supported:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Request::HEADER_CLIENT_IP:    defaults to X-Forwarded-For   (see getClientIp())&lt;/li&gt;
&lt;li&gt;Request::HEADER_CLIENT_HOST:  defaults to X-Forwarded-Host  (see getClientHost())&lt;/li&gt;
&lt;li&gt;Request::HEADER_CLIENT_PORT:  defaults to X-Forwarded-Port  (see getClientPort())&lt;/li&gt;
&lt;li&gt;Request::HEADER_CLIENT_PROTO: defaults to X-Forwarded-Proto (see getScheme() and isSecure())&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Setting an empty value allows to disable the trusted header for the given key.&lt;/p&gt;</long-description>
          <tag line="485" name="param" description="The header key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="485" name="param" description="The header name" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="500">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="500">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation" line="515" package="Default">
        <name>isProxyTrusted</name>
        <full_name>isProxyTrusted</full_name>
        <docblock line="509">
          <description>Returns true if $_SERVER entries coming from proxies are trusted,
false otherwise.</description>
          <long-description></long-description>
          <tag line="509" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation" line="530" package="Default">
        <name>normalizeQueryString</name>
        <full_name>normalizeQueryString</full_name>
        <docblock line="520">
          <description>Normalizes a query string.</description>
          <long-description>&lt;p&gt;It builds a normalized query string, where keys/value pairs are alphabetized,
have consistent escaping and unneeded delimiters are removed.&lt;/p&gt;</long-description>
          <tag line="520" name="param" description="Query string" type="string" variable="$qs">
            <type by_reference="false">string</type>
          </tag>
          <tag line="520" name="return" description="A normalized query string for the Request" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="530">
          <name>$qs</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="584" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="563">
          <description>Gets a "parameter" value.</description>
          <long-description>&lt;p&gt;This method is mainly useful for libraries that want to provide some flexibility.&lt;/p&gt;

&lt;p&gt;Order of precedence: GET, PATH, POST&lt;/p&gt;

&lt;p&gt;Avoid using this method in controllers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;slow&lt;/li&gt;
&lt;li&gt;prefer to get from a "named" source&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is better to explicitly get request parameters from the appropriate
public property instead (query, attributes, request).&lt;/p&gt;</long-description>
          <tag line="563" name="param" description="the key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="563" name="param" description="the default value" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="563" name="param" description="is parameter deep in multidimensional array" type="Boolean" variable="$deep">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="563" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="584">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="584">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="584">
          <name>$deep</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="596" package="Default">
        <name>getSession</name>
        <full_name>getSession</full_name>
        <docblock line="589">
          <description>Gets the Session.</description>
          <long-description></long-description>
          <tag line="589" name="return" description="The session" type="\Symfony\Component\HttpFoundation\Session\SessionInterface|null">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\SessionInterface</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="589" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="609" package="Default">
        <name>hasPreviousSession</name>
        <full_name>hasPreviousSession</full_name>
        <docblock line="601">
          <description>Whether the request contains a Session which was started in one of the
previous requests.</description>
          <long-description></long-description>
          <tag line="601" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="601" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="626" package="Default">
        <name>hasSession</name>
        <full_name>hasSession</full_name>
        <docblock line="615">
          <description>Whether the request contains a Session object.</description>
          <long-description>&lt;p&gt;This method does not give any information about the state of the session object,
like whether the session is started or not. It is just a way to check if this Request
is associated with a Session instance.&lt;/p&gt;</long-description>
          <tag line="615" name="return" description="true when the Request contains a Session object, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="615" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="638" package="Default">
        <name>setSession</name>
        <full_name>setSession</full_name>
        <docblock line="631">
          <description>Sets the Session.</description>
          <long-description></long-description>
          <tag line="631" name="param" description="The Session" type="\Symfony\Component\HttpFoundation\Session\SessionInterface" variable="$session">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Session\SessionInterface</type>
          </tag>
          <tag line="631" name="api" description=""/>
        </docblock>
        <argument line="638">
          <name>$session</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Session\SessionInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="664" package="Default">
        <name>getClientIp</name>
        <full_name>getClientIp</full_name>
        <docblock line="643">
          <description>Returns the client IP address.</description>
          <long-description>&lt;p&gt;This method can read the client IP address from the "X-Forwarded-For" header
when trusted proxies were set via "setTrustedProxies()". The "X-Forwarded-For"
header value is a comma+space separated list of IP addresses, the left-most
being the original client, and each successive proxy that passed the request
adding the IP address where it received the request from.&lt;/p&gt;

&lt;p&gt;If your reverse proxy uses a different header name than "X-Forwarded-For",
("Client-Ip" for instance), configure it via "setTrustedHeaderName()" with
the "client-ip" key.&lt;/p&gt;</long-description>
          <tag line="643" name="return" description="The client IP address" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="643" name="see" description="\Symfony\Component\HttpFoundation\http://en.wikipedia.org/wiki/X-Forwarded-For" refers="\Symfony\Component\HttpFoundation\http://en.wikipedia.org/wiki/X-Forwarded-For"/>
          <tag line="643" name="deprecated" description="The proxy argument is deprecated since version 2.0 and will be removed in 2.3. Use setTrustedProxies instead."/>
          <tag line="643" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="692" package="Default">
        <name>getScriptName</name>
        <full_name>getScriptName</full_name>
        <docblock line="685">
          <description>Returns current script name.</description>
          <long-description></long-description>
          <tag line="685" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="685" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="713" package="Default">
        <name>getPathInfo</name>
        <full_name>getPathInfo</full_name>
        <docblock line="697">
          <description>Returns the path being requested relative to the executed script.</description>
          <long-description>&lt;p&gt;The path info always starts with a /.&lt;/p&gt;

&lt;p&gt;Suppose this request is instantiated from /mysite on localhost:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;http://localhost/mysite              returns an empty string&lt;/li&gt;
&lt;li&gt;http://localhost/mysite/about        returns '/about'&lt;/li&gt;
&lt;li&gt;htpp://localhost/mysite/enco%20ded   returns '/enco%20ded'&lt;/li&gt;
&lt;li&gt;http://localhost/mysite/about?var=1  returns '/about'&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="697" name="return" description="The raw path (i.e. not urldecoded)" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="697" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="736" package="Default">
        <name>getBasePath</name>
        <full_name>getBasePath</full_name>
        <docblock line="722">
          <description>Returns the root path from which this request is executed.</description>
          <long-description>&lt;p&gt;Suppose that an index.php file instantiates this request object:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;http://localhost/index.php         returns an empty string&lt;/li&gt;
&lt;li&gt;http://localhost/index.php/page    returns an empty string&lt;/li&gt;
&lt;li&gt;http://localhost/web/index.php     returns '/web'&lt;/li&gt;
&lt;li&gt;http://localhost/we%20b/index.php  returns '/we%20b'&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="722" name="return" description="The raw path (i.e. not urldecoded)" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="722" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="757" package="Default">
        <name>getBaseUrl</name>
        <full_name>getBaseUrl</full_name>
        <docblock line="745">
          <description>Returns the root url from which this request is executed.</description>
          <long-description>&lt;p&gt;The base URL never ends with a /.&lt;/p&gt;

&lt;p&gt;This is similar to getBasePath(), except that it also includes the
script filename (e.g. index.php) if one exists.&lt;/p&gt;</long-description>
          <tag line="745" name="return" description="The raw url (i.e. not urldecoded)" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="745" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="773" package="Default">
        <name>getScheme</name>
        <full_name>getScheme</full_name>
        <docblock line="766">
          <description>Gets the request's scheme.</description>
          <long-description></long-description>
          <tag line="766" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="766" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="793" package="Default">
        <name>getPort</name>
        <full_name>getPort</full_name>
        <docblock line="778">
          <description>Returns the port on which the request is made.</description>
          <long-description>&lt;p&gt;This method can read the client port from the "X-Forwarded-Port" header
when trusted proxies were set via "setTrustedProxies()".&lt;/p&gt;

&lt;p&gt;The "X-Forwarded-Port" header must contain the client port.&lt;/p&gt;

&lt;p&gt;If your reverse proxy uses a different header name than "X-Forwarded-Port",
configure it via "setTrustedHeaderName()" with the "client-port" key.&lt;/p&gt;</long-description>
          <tag line="778" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="778" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="807" package="Default">
        <name>getUser</name>
        <full_name>getUser</full_name>
        <docblock line="802">
          <description>Returns the user.</description>
          <long-description></long-description>
          <tag line="802" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="817" package="Default">
        <name>getPassword</name>
        <full_name>getPassword</full_name>
        <docblock line="812">
          <description>Returns the password.</description>
          <long-description></long-description>
          <tag line="812" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="827" package="Default">
        <name>getUserInfo</name>
        <full_name>getUserInfo</full_name>
        <docblock line="822">
          <description>Gets the user info.</description>
          <long-description></long-description>
          <tag line="822" name="return" description="A user name and, optionally, scheme-specific information about how to gain authorization to access the server" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="848" package="Default">
        <name>getHttpHost</name>
        <full_name>getHttpHost</full_name>
        <docblock line="839">
          <description>Returns the HTTP host being requested.</description>
          <long-description>&lt;p&gt;The port name will be appended to the host if it's non-standard.&lt;/p&gt;</long-description>
          <tag line="839" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="839" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="867" package="Default">
        <name>getRequestUri</name>
        <full_name>getRequestUri</full_name>
        <docblock line="860">
          <description>Returns the requested URI.</description>
          <long-description></long-description>
          <tag line="860" name="return" description="The raw URI (i.e. not urldecoded)" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="860" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="884" package="Default">
        <name>getSchemeAndHttpHost</name>
        <full_name>getSchemeAndHttpHost</full_name>
        <docblock line="876">
          <description>Gets the scheme and HTTP host.</description>
          <long-description>&lt;p&gt;If the URL was called with basic authentication, the user
and the password are not added to the generated string.&lt;/p&gt;</long-description>
          <tag line="876" name="return" description="The scheme and HTTP host" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="898" package="Default">
        <name>getUri</name>
        <full_name>getUri</full_name>
        <docblock line="889">
          <description>Generates a normalized URI for the Request.</description>
          <long-description></long-description>
          <tag line="889" name="return" description="A normalized URI for the Request" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="889" name="see" description="\Symfony\Component\HttpFoundation\getQueryString()" refers="\Symfony\Component\HttpFoundation\getQueryString()"/>
          <tag line="889" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="917" package="Default">
        <name>getUriForPath</name>
        <full_name>getUriForPath</full_name>
        <docblock line="908">
          <description>Generates a normalized URI for the given path.</description>
          <long-description></long-description>
          <tag line="908" name="param" description="A path to use instead of the current one" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="908" name="return" description="The normalized URI for the path" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="908" name="api" description=""/>
        </docblock>
        <argument line="917">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="932" package="Default">
        <name>getQueryString</name>
        <full_name>getQueryString</full_name>
        <docblock line="922">
          <description>Generates the normalized query string for the Request.</description>
          <long-description>&lt;p&gt;It builds a normalized query string, where keys/value pairs are alphabetized
and have consistent escaping.&lt;/p&gt;</long-description>
          <tag line="922" name="return" description="A normalized query string for the Request" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="922" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="955" package="Default">
        <name>isSecure</name>
        <full_name>isSecure</full_name>
        <docblock line="939">
          <description>Checks whether the request is secure or not.</description>
          <long-description>&lt;p&gt;This method can read the client port from the "X-Forwarded-Proto" header
when trusted proxies were set via "setTrustedProxies()".&lt;/p&gt;

&lt;p&gt;The "X-Forwarded-Proto" header must contain the protocol: "https" or "http".&lt;/p&gt;

&lt;p&gt;If your reverse proxy uses a different header name than "X-Forwarded-Proto"
("SSL_HTTPS" for instance), configure it via "setTrustedHeaderName()" with
the "client-proto" key.&lt;/p&gt;</long-description>
          <tag line="939" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="939" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="981" package="Default">
        <name>getHost</name>
        <full_name>getHost</full_name>
        <docblock line="964">
          <description>Returns the host name.</description>
          <long-description>&lt;p&gt;This method can read the client port from the "X-Forwarded-Host" header
when trusted proxies were set via "setTrustedProxies()".&lt;/p&gt;

&lt;p&gt;The "X-Forwarded-Host" header must contain the client host name.&lt;/p&gt;

&lt;p&gt;If your reverse proxy uses a different header name than "X-Forwarded-Host",
configure it via "setTrustedHeaderName()" with the "client-host" key.&lt;/p&gt;</long-description>
          <tag line="964" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="964" name="throws" description="when the host name is invalid" type="\UnexpectedValueException">
            <type by_reference="false">\UnexpectedValueException</type>
          </tag>
          <tag line="964" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1013" package="Default">
        <name>setMethod</name>
        <full_name>setMethod</full_name>
        <docblock line="1006">
          <description>Sets the request method.</description>
          <long-description></long-description>
          <tag line="1006" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1006" name="api" description=""/>
        </docblock>
        <argument line="1013">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1028" package="Default">
        <name>getMethod</name>
        <full_name>getMethod</full_name>
        <docblock line="1019">
          <description>Gets the request method.</description>
          <long-description>&lt;p&gt;The method is always an uppercased string.&lt;/p&gt;</long-description>
          <tag line="1019" name="return" description="The request method" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1019" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1049" package="Default">
        <name>getMimeType</name>
        <full_name>getMimeType</full_name>
        <docblock line="1040">
          <description>Gets the mime type associated with the format.</description>
          <long-description></long-description>
          <tag line="1040" name="param" description="The format" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1040" name="return" description="The associated mime type (null if not found)" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1040" name="api" description=""/>
        </docblock>
        <argument line="1049">
          <name>$format</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1067" package="Default">
        <name>getFormat</name>
        <full_name>getFormat</full_name>
        <docblock line="1058">
          <description>Gets the format associated with the mime type.</description>
          <long-description></long-description>
          <tag line="1058" name="param" description="The associated mime type" type="string" variable="$mimeType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1058" name="return" description="The format (null if not found)" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="1058" name="api" description=""/>
        </docblock>
        <argument line="1067">
          <name>$mimeType</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1094" package="Default">
        <name>setFormat</name>
        <full_name>setFormat</full_name>
        <docblock line="1086">
          <description>Associates a format with mime types.</description>
          <long-description></long-description>
          <tag line="1086" name="param" description="The format" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1086" name="param" description="The associated mime types (the preferred one must be the first as it will be used as the content type)" type="string|array" variable="$mimeTypes">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="1086" name="api" description=""/>
        </docblock>
        <argument line="1094">
          <name>$format</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1094">
          <name>$mimeTypes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1118" package="Default">
        <name>getRequestFormat</name>
        <full_name>getRequestFormat</full_name>
        <docblock line="1103">
          <description>Gets the request format.</description>
          <long-description>&lt;p&gt;Here is the process to determine the format:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;format defined by the user (with setRequestFormat())&lt;/li&gt;
&lt;li&gt;_format request parameter&lt;/li&gt;
&lt;li&gt;$default&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="1103" name="param" description="The default format" type="string" variable="$default">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1103" name="return" description="The request format" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1103" name="api" description=""/>
        </docblock>
        <argument line="1118">
          <name>$default</name>
          <default>'html'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1134" package="Default">
        <name>setRequestFormat</name>
        <full_name>setRequestFormat</full_name>
        <docblock line="1127">
          <description>Sets the request format.</description>
          <long-description></long-description>
          <tag line="1127" name="param" description="The request format." type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1127" name="api" description=""/>
        </docblock>
        <argument line="1134">
          <name>$format</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1146" package="Default">
        <name>getContentType</name>
        <full_name>getContentType</full_name>
        <docblock line="1139">
          <description>Gets the format associated with the request.</description>
          <long-description></long-description>
          <tag line="1139" name="return" description="The format (null if no content type is present)" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="1139" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1158" package="Default">
        <name>setDefaultLocale</name>
        <full_name>setDefaultLocale</full_name>
        <docblock line="1151">
          <description>Sets the default locale.</description>
          <long-description></long-description>
          <tag line="1151" name="param" description="" type="string" variable="$locale">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1151" name="api" description=""/>
        </docblock>
        <argument line="1158">
          <name>$locale</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1174" package="Default">
        <name>setLocale</name>
        <full_name>setLocale</full_name>
        <docblock line="1167">
          <description>Sets the locale.</description>
          <long-description></long-description>
          <tag line="1167" name="param" description="" type="string" variable="$locale">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1167" name="api" description=""/>
        </docblock>
        <argument line="1174">
          <name>$locale</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1184" package="Default">
        <name>getLocale</name>
        <full_name>getLocale</full_name>
        <docblock line="1179">
          <description>Get the locale.</description>
          <long-description></long-description>
          <tag line="1179" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1196" package="Default">
        <name>isMethod</name>
        <full_name>isMethod</full_name>
        <docblock line="1189">
          <description>Checks if the request method is of specified type.</description>
          <long-description></long-description>
          <tag line="1189" name="param" description="Uppercase request method (GET, POST etc)." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1189" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="1196">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1208" package="Default">
        <name>isMethodSafe</name>
        <full_name>isMethodSafe</full_name>
        <docblock line="1201">
          <description>Checks whether the method is safe or not.</description>
          <long-description></long-description>
          <tag line="1201" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="1201" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1220" package="Default">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="1213">
          <description>Returns the request body content.</description>
          <long-description></long-description>
          <tag line="1213" name="param" description="If true, a resource will be returned" type="Boolean" variable="$asResource">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="1213" name="return" description="The request body content or a resource to read the body stream." type="string|resource">
            <type by_reference="false">string</type>
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="1220">
          <name>$asResource</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1244" package="Default">
        <name>getETags</name>
        <full_name>getETags</full_name>
        <docblock line="1239">
          <description>Gets the Etags.</description>
          <long-description></long-description>
          <tag line="1239" name="return" description="The entity tags" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1252" package="Default">
        <name>isNoCache</name>
        <full_name>isNoCache</full_name>
        <docblock line="1249">
          <description></description>
          <long-description></long-description>
          <tag line="1249" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1266" package="Default">
        <name>getPreferredLanguage</name>
        <full_name>getPreferredLanguage</full_name>
        <docblock line="1257">
          <description>Returns the preferred language.</description>
          <long-description></long-description>
          <tag line="1257" name="param" description="An array of ordered available locales" type="array" variable="$locales">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1257" name="return" description="The preferred locale" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="1257" name="api" description=""/>
        </docblock>
        <argument line="1266">
          <name>$locales</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1290" package="Default">
        <name>getLanguages</name>
        <full_name>getLanguages</full_name>
        <docblock line="1283">
          <description>Gets a list of languages acceptable by the client browser.</description>
          <long-description></long-description>
          <tag line="1283" name="return" description="Languages ordered in the user browser preferences" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1283" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1332" package="Default">
        <name>getCharsets</name>
        <full_name>getCharsets</full_name>
        <docblock line="1325">
          <description>Gets a list of charsets acceptable by the client browser.</description>
          <long-description></long-description>
          <tag line="1325" name="return" description="List of charsets in preferable order" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1325" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1348" package="Default">
        <name>getAcceptableContentTypes</name>
        <full_name>getAcceptableContentTypes</full_name>
        <docblock line="1341">
          <description>Gets a list of content types acceptable by the client browser</description>
          <long-description></long-description>
          <tag line="1341" name="return" description="List of content types in preferable order" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1341" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1367" package="Default">
        <name>isXmlHttpRequest</name>
        <full_name>isXmlHttpRequest</full_name>
        <docblock line="1357">
          <description>Returns true if the request is a XMLHttpRequest.</description>
          <long-description>&lt;p&gt;It works if your JavaScript library set an X-Requested-With HTTP header.
It is known to work with Prototype, Mootools, jQuery.&lt;/p&gt;</long-description>
          <tag line="1357" name="return" description="true if the request is an XMLHttpRequest, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="1357" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1379" package="Default">
        <name>splitHttpAcceptHeader</name>
        <full_name>splitHttpAcceptHeader</full_name>
        <docblock line="1372">
          <description>Splits an Accept-* HTTP header.</description>
          <long-description></long-description>
          <tag line="1372" name="param" description="Header to split" type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1372" name="return" description="Array indexed by the values of the Accept-* header in preferred order" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1379">
          <name>$header</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="1422" package="Default">
        <name>prepareRequestUri</name>
        <full_name>prepareRequestUri</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="1458" package="Default">
        <name>prepareBaseUrl</name>
        <full_name>prepareBaseUrl</full_name>
        <docblock line="1453">
          <description>Prepares the base URL.</description>
          <long-description></long-description>
          <tag line="1453" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="1524" package="Default">
        <name>prepareBasePath</name>
        <full_name>prepareBasePath</full_name>
        <docblock line="1519">
          <description>Prepares the base path.</description>
          <long-description></long-description>
          <tag line="1519" name="return" description="base path" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="1550" package="Default">
        <name>preparePathInfo</name>
        <full_name>preparePathInfo</full_name>
        <docblock line="1545">
          <description>Prepares the path info.</description>
          <long-description></long-description>
          <tag line="1545" name="return" description="path info" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="1578" package="Default">
        <name>initializeFormats</name>
        <full_name>initializeFormats</full_name>
        <docblock line="1575">
          <description>Initializes HTTP request formats.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\HttpFoundation" line="1598" package="Default">
        <name>setPhpDefaultLocale</name>
        <full_name>setPhpDefaultLocale</full_name>
        <docblock line="1593">
          <description>Sets the default PHP locale.</description>
          <long-description></long-description>
          <tag line="1593" name="param" description="" type="string" variable="$locale">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1598">
          <name>$locale</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Symfony\Component\HttpFoundation" line="1620" package="Default">
        <name>getUrlencodedPrefix</name>
        <full_name>getUrlencodedPrefix</full_name>
        <argument line="1620">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1620">
          <name>$prefix</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Request.php</error>
      <error line="38" code="50018">No DocBlock was found for property $trustProxy</error>
      <error line="40" code="50018">No DocBlock was found for property $trustedProxies</error>
      <critical line="56" code="50019">No short description for property $attributes</critical>
      <critical line="63" code="50019">No short description for property $request</critical>
      <critical line="70" code="50019">No short description for property $query</critical>
      <critical line="77" code="50019">No short description for property $server</critical>
      <critical line="84" code="50019">No short description for property $files</critical>
      <critical line="91" code="50019">No short description for property $cookies</critical>
      <critical line="98" code="50019">No short description for property $headers</critical>
      <critical line="105" code="50019">No short description for property $content</critical>
      <critical line="110" code="50019">No short description for property $languages</critical>
      <critical line="115" code="50019">No short description for property $charsets</critical>
      <critical line="120" code="50019">No short description for property $acceptableContentTypes</critical>
      <critical line="125" code="50019">No short description for property $pathInfo</critical>
      <critical line="130" code="50019">No short description for property $requestUri</critical>
      <critical line="135" code="50019">No short description for property $baseUrl</critical>
      <critical line="140" code="50019">No short description for property $basePath</critical>
      <critical line="145" code="50019">No short description for property $method</critical>
      <critical line="150" code="50019">No short description for property $format</critical>
      <critical line="155" code="50019">No short description for property $session</critical>
      <critical line="160" code="50019">No short description for property $locale</critical>
      <critical line="165" code="50019">No short description for property $defaultLocale</critical>
      <critical line="170" code="50019">No short description for property $formats</critical>
      <error line="1249" code="50012">No short description for method isNoCache()</error>
      <error line="1422" code="50010">No DocBlock was found for method prepareRequestUri()</error>
      <error line="1620" code="50010">No DocBlock was found for method getUrlencodedPrefix()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Resources/stubs/SessionHandlerInterface.php" hash="f26f1e22834f18306beccd26d44cb2f9" package="Default">
    <interface namespace="global" line="25" package="Default">
      <name>SessionHandlerInterface</name>
      <full_name>\SessionHandlerInterface</full_name>
      <docblock line="12">
        <description>SessionHandlerInterface</description>
        <long-description>&lt;p&gt;Provides forward compatibility with PHP 5.4&lt;/p&gt;

&lt;p&gt;Extensive documentation can be found at php.net, see links:&lt;/p&gt;</long-description>
        <tag line="12" name="see" description="\global\http://php.net/sessionhandlerinterface" refers="\global\http://php.net/sessionhandlerinterface"/>
        <tag line="12" name="see" description="\global\http://php.net/session.customhandler" refers="\global\http://php.net/session.customhandler"/>
        <tag line="12" name="see" description="\global\http://php.net/session-set-save-handler" refers="\global\http://php.net/session-set-save-handler"/>
        <tag line="12" name="author" description="Drak &lt;drak@zikula.org&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Default">
        <name>open</name>
        <full_name>open</full_name>
        <docblock line="27">
          <description>Open session.</description>
          <long-description></long-description>
          <tag line="27" name="see" description="\http://php.net/sessionhandlerinterface.open" refers="\http://php.net/sessionhandlerinterface.open"/>
          <tag line="27" name="param" description="Save path." type="string" variable="$savePath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="param" description="Session Name." type="string" variable="$sessionName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="throws" description="If something goes wrong starting the session." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
          <tag line="27" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$savePath</name>
          <default></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$sessionName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="48" package="Default">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="41">
          <description>Close session.</description>
          <long-description></long-description>
          <tag line="41" name="see" description="\http://php.net/sessionhandlerinterface.close" refers="\http://php.net/sessionhandlerinterface.close"/>
          <tag line="41" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="50">
          <description>Read session.</description>
          <long-description></long-description>
          <tag line="50" name="param" description="" type="string" variable="$sessionId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="see" description="\http://php.net/sessionhandlerinterface.read" refers="\http://php.net/sessionhandlerinterface.read"/>
          <tag line="50" name="throws" description="On fatal error but not &quot;record not found&quot;." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
          <tag line="50" name="return" description="String as stored in persistent storage or empty string in all other cases." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$sessionId</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="63">
          <description>Commit session to storage.</description>
          <long-description></long-description>
          <tag line="63" name="see" description="\http://php.net/sessionhandlerinterface.write" refers="\http://php.net/sessionhandlerinterface.write"/>
          <tag line="63" name="param" description="Session ID." type="string" variable="$sessionId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="param" description="Session serialized data to save." type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$sessionId</name>
          <default></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="86" package="Default">
        <name>destroy</name>
        <full_name>destroy</full_name>
        <docblock line="75">
          <description>Destroys this session.</description>
          <long-description></long-description>
          <tag line="75" name="see" description="\http://php.net/sessionhandlerinterface.destroy" refers="\http://php.net/sessionhandlerinterface.destroy"/>
          <tag line="75" name="param" description="Session ID." type="string" variable="$sessionId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="75" name="throws" description="On fatal error." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
          <tag line="75" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$sessionId</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="Default">
        <name>gc</name>
        <full_name>gc</full_name>
        <docblock line="88">
          <description>Garbage collection for storage.</description>
          <long-description></long-description>
          <tag line="88" name="see" description="\http://php.net/sessionhandlerinterface.gc" refers="\http://php.net/sessionhandlerinterface.gc"/>
          <tag line="88" name="param" description="Max lifetime in seconds to keep sessions stored." type="integer" variable="$lifetime">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="88" name="throws" description="On fatal error." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
          <tag line="88" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="99">
          <name>$lifetime</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Resources/stubs/SessionHandlerInterface.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/ParameterBag.php" hash="144c1b879cbd5c078a8a3ea9ca8a6e23" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation" line="21" package="Default">
      <extends/>
      <implements>\IteratorAggregate</implements>
      <implements>\Countable</implements>
      <name>ParameterBag</name>
      <full_name>\Symfony\Component\HttpFoundation\ParameterBag</full_name>
      <docblock line="14">
        <description>ParameterBag is a container for key/value pairs.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="28" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$parameters</name>
        <default></default>
        <docblock line="23">
          <description>Parameter storage.</description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="37" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="30">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="30" name="param" description="An array of parameters" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="30" name="api" description=""/>
        </docblock>
        <argument line="37">
          <name>$parameters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="49" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="42">
          <description>Returns the parameters.</description>
          <long-description></long-description>
          <tag line="42" name="return" description="An array of parameters" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="61" package="Default">
        <name>keys</name>
        <full_name>keys</full_name>
        <docblock line="54">
          <description>Returns the parameter keys.</description>
          <long-description></long-description>
          <tag line="54" name="return" description="An array of parameter keys" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="54" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="73" package="Default">
        <name>replace</name>
        <full_name>replace</full_name>
        <docblock line="66">
          <description>Replaces the current parameters by a new set.</description>
          <long-description></long-description>
          <tag line="66" name="param" description="An array of parameters" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="66" name="api" description=""/>
        </docblock>
        <argument line="73">
          <name>$parameters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="85" package="Default">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="78">
          <description>Adds parameters.</description>
          <long-description></long-description>
          <tag line="78" name="param" description="An array of parameters" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="78" name="api" description=""/>
        </docblock>
        <argument line="85">
          <name>$parameters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="101" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="90">
          <description>Returns a parameter by name.</description>
          <long-description></long-description>
          <tag line="90" name="param" description="The key" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="param" description="The default value if the parameter key does not exist" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="90" name="param" description="If true, a path like foo[bar] will find deeper items" type="boolean" variable="$deep">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="90" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="90" name="api" description=""/>
        </docblock>
        <argument line="101">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="101">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="101">
          <name>$deep</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="158" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="150">
          <description>Sets a parameter by name.</description>
          <long-description></long-description>
          <tag line="150" name="param" description="The key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="150" name="param" description="The value" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="150" name="api" description=""/>
        </docblock>
        <argument line="158">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="158">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="172" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="163">
          <description>Returns true if the parameter is defined.</description>
          <long-description></long-description>
          <tag line="163" name="param" description="The key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="163" name="return" description="true if the parameter exists, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="163" name="api" description=""/>
        </docblock>
        <argument line="172">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="184" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="177">
          <description>Removes a parameter.</description>
          <long-description></long-description>
          <tag line="177" name="param" description="The key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="177" name="api" description=""/>
        </docblock>
        <argument line="184">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="200" package="Default">
        <name>getAlpha</name>
        <full_name>getAlpha</full_name>
        <docblock line="189">
          <description>Returns the alphabetic characters of the parameter value.</description>
          <long-description></long-description>
          <tag line="189" name="param" description="The parameter key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="189" name="param" description="The default value if the parameter key does not exist" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="189" name="param" description="If true, a path like foo[bar] will find deeper items" type="boolean" variable="$deep">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="189" name="return" description="The filtered value" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="189" name="api" description=""/>
        </docblock>
        <argument line="200">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="200">
          <name>$default</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="200">
          <name>$deep</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="216" package="Default">
        <name>getAlnum</name>
        <full_name>getAlnum</full_name>
        <docblock line="205">
          <description>Returns the alphabetic characters and digits of the parameter value.</description>
          <long-description></long-description>
          <tag line="205" name="param" description="The parameter key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="205" name="param" description="The default value if the parameter key does not exist" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="205" name="param" description="If true, a path like foo[bar] will find deeper items" type="boolean" variable="$deep">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="205" name="return" description="The filtered value" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="205" name="api" description=""/>
        </docblock>
        <argument line="216">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="216">
          <name>$default</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="216">
          <name>$deep</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="232" package="Default">
        <name>getDigits</name>
        <full_name>getDigits</full_name>
        <docblock line="221">
          <description>Returns the digits of the parameter value.</description>
          <long-description></long-description>
          <tag line="221" name="param" description="The parameter key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="param" description="The default value if the parameter key does not exist" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="221" name="param" description="If true, a path like foo[bar] will find deeper items" type="boolean" variable="$deep">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="221" name="return" description="The filtered value" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="api" description=""/>
        </docblock>
        <argument line="232">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="232">
          <name>$default</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="232">
          <name>$deep</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="249" package="Default">
        <name>getInt</name>
        <full_name>getInt</full_name>
        <docblock line="238">
          <description>Returns the parameter value converted to integer.</description>
          <long-description></long-description>
          <tag line="238" name="param" description="The parameter key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="238" name="param" description="The default value if the parameter key does not exist" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="238" name="param" description="If true, a path like foo[bar] will find deeper items" type="boolean" variable="$deep">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="238" name="return" description="The filtered value" type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="238" name="api" description=""/>
        </docblock>
        <argument line="249">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="249">
          <name>$default</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="249">
          <name>$deep</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="267" package="Default">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="254">
          <description>Filter key.</description>
          <long-description></long-description>
          <tag line="254" name="param" description="Key." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="254" name="param" description="Default = null." type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="254" name="param" description="Default = false." type="boolean" variable="$deep">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="254" name="param" description="FILTER_* constant." type="integer" variable="$filter">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="254" name="param" description="Filter options." type="mixed" variable="$options">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="254" name="see" description="\Symfony\Component\HttpFoundation\http://php.net/manual/en/function.filter-var.php" refers="\Symfony\Component\HttpFoundation\http://php.net/manual/en/function.filter-var.php"/>
          <tag line="254" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="267">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="267">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="267">
          <name>$deep</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="267">
          <name>$filter</name>
          <default>FILTER_DEFAULT</default>
          <type/>
        </argument>
        <argument line="267">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="289" package="Default">
        <name>getIterator</name>
        <full_name>getIterator</full_name>
        <docblock line="284">
          <description>Returns an iterator for parameters.</description>
          <long-description></long-description>
          <tag line="284" name="return" description="An \ArrayIterator instance" type="\ArrayIterator">
            <type by_reference="false">\ArrayIterator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="299" package="Default">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="294">
          <description>Returns the number of parameters.</description>
          <long-description></long-description>
          <tag line="294" name="return" description="The number of parameters" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/ParameterBag.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Response.php" hash="efe91db731e749bb169d9cc109b976a4" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation" line="21" package="Default">
      <extends/>
      <name>Response</name>
      <full_name>\Symfony\Component\HttpFoundation\Response</full_name>
      <docblock line="14">
        <description>Response represents an HTTP response.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$headers</name>
        <default></default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="\Symfony\Component\HttpFoundation\ResponseHeaderBag">
            <type by_reference="false">\Symfony\Component\HttpFoundation\ResponseHeaderBag</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$content</name>
        <default></default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
          <tag line="28" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$version</name>
        <default></default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="41" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$statusCode</name>
        <default></default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag line="38" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="46" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$statusText</name>
        <default></default>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag line="43" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="51" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$charset</name>
        <default></default>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
          <tag line="48" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="64" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$statusTexts</name>
        <default>array(100 =&gt; 'Continue', 101 =&gt; 'Switching Protocols', 102 =&gt; 'Processing', 200 =&gt; 'OK', 201 =&gt; 'Created', 202 =&gt; 'Accepted', 203 =&gt; 'Non-Authoritative Information', 204 =&gt; 'No Content', 205 =&gt; 'Reset Content', 206 =&gt; 'Partial Content', 207 =&gt; 'Multi-Status', 208 =&gt; 'Already Reported', 226 =&gt; 'IM Used', 300 =&gt; 'Multiple Choices', 301 =&gt; 'Moved Permanently', 302 =&gt; 'Found', 303 =&gt; 'See Other', 304 =&gt; 'Not Modified', 305 =&gt; 'Use Proxy', 306 =&gt; 'Reserved', 307 =&gt; 'Temporary Redirect', 308 =&gt; 'Permanent Redirect', 400 =&gt; 'Bad Request', 401 =&gt; 'Unauthorized', 402 =&gt; 'Payment Required', 403 =&gt; 'Forbidden', 404 =&gt; 'Not Found', 405 =&gt; 'Method Not Allowed', 406 =&gt; 'Not Acceptable', 407 =&gt; 'Proxy Authentication Required', 408 =&gt; 'Request Timeout', 409 =&gt; 'Conflict', 410 =&gt; 'Gone', 411 =&gt; 'Length Required', 412 =&gt; 'Precondition Failed', 413 =&gt; 'Request Entity Too Large', 414 =&gt; 'Request-URI Too Long', 415 =&gt; 'Unsupported Media Type', 416 =&gt; 'Requested Range Not Satisfiable', 417 =&gt; 'Expectation Failed', 418 =&gt; 'I\'m a teapot', 422 =&gt; 'Unprocessable Entity', 423 =&gt; 'Locked', 424 =&gt; 'Failed Dependency', 425 =&gt; 'Reserved for WebDAV advanced collections expired proposal', 426 =&gt; 'Upgrade Required', 428 =&gt; 'Precondition Required', 429 =&gt; 'Too Many Requests', 431 =&gt; 'Request Header Fields Too Large', 500 =&gt; 'Internal Server Error', 501 =&gt; 'Not Implemented', 502 =&gt; 'Bad Gateway', 503 =&gt; 'Service Unavailable', 504 =&gt; 'Gateway Timeout', 505 =&gt; 'HTTP Version Not Supported', 506 =&gt; 'Variant Also Negotiates (Experimental)', 507 =&gt; 'Insufficient Storage', 508 =&gt; 'Loop Detected', 510 =&gt; 'Not Extended', 511 =&gt; 'Network Authentication Required')</default>
        <docblock line="53">
          <description>Status codes translation table.</description>
          <long-description>&lt;p&gt;The list of codes is complete according to the
{@link http://www.iana.org/assignments/http-status-codes/ Hypertext Transfer Protocol (HTTP) Status Code Registry}
(last updated 2012-02-13).&lt;/p&gt;

&lt;p&gt;Unless otherwise noted, the status code is defined in RFC2616.&lt;/p&gt;</long-description>
          <tag line="53" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="136" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="127">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="127" name="param" description="The response content" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="param" description="The response status code" type="integer" variable="$status">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="127" name="param" description="An array of response headers" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="127" name="api" description=""/>
        </docblock>
        <argument line="136">
          <name>$content</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="136">
          <name>$status</name>
          <default>200</default>
          <type/>
        </argument>
        <argument line="136">
          <name>$headers</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation" line="161" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="147">
          <description>Factory method for chainability</description>
          <long-description>&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;return Response::create($body, 200)
    -&amp;gt;setSharedMaxAge(300);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="147" name="param" description="The response content" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="147" name="param" description="The response status code" type="integer" variable="$status">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="147" name="param" description="An array of response headers" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="147" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
        </docblock>
        <argument line="161">
          <name>$content</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="161">
          <name>$status</name>
          <default>200</default>
          <type/>
        </argument>
        <argument line="161">
          <name>$headers</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="177" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="166">
          <description>Returns the Response as an HTTP string.</description>
          <long-description>&lt;p&gt;The string representation of the Response is the same as the
one that will be sent to the client only if the prepare() method
has been called before.&lt;/p&gt;</long-description>
          <tag line="166" name="return" description="The Response as an HTTP string" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="166" name="see" description="\Symfony\Component\HttpFoundation\prepare()" refers="\Symfony\Component\HttpFoundation\prepare()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="188" package="Default">
        <name>__clone</name>
        <full_name>__clone</full_name>
        <docblock line="185">
          <description>Clones the current Response instance.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="204" package="Default">
        <name>prepare</name>
        <full_name>prepare</full_name>
        <docblock line="193">
          <description>Prepares the Response before it is sent to the client.</description>
          <long-description>&lt;p&gt;This method tweaks the Response to ensure that it is
compliant with RFC 2616. Most of the changes are based on
the Request that is "associated" with this Response.&lt;/p&gt;</long-description>
          <tag line="193" name="param" description="A Request instance" type="\Symfony\Component\HttpFoundation\Request" variable="$request">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Request</type>
          </tag>
          <tag line="193" name="return" description="The current response." type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
        </docblock>
        <argument line="204">
          <name>$request</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="262" package="Default">
        <name>sendHeaders</name>
        <full_name>sendHeaders</full_name>
        <docblock line="257">
          <description>Sends HTTP headers.</description>
          <long-description></long-description>
          <tag line="257" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="292" package="Default">
        <name>sendContent</name>
        <full_name>sendContent</full_name>
        <docblock line="287">
          <description>Sends content for the current web response.</description>
          <long-description></long-description>
          <tag line="287" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="306" package="Default">
        <name>send</name>
        <full_name>send</full_name>
        <docblock line="299">
          <description>Sends HTTP headers and content.</description>
          <long-description></long-description>
          <tag line="299" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="299" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="341" package="Default">
        <name>setContent</name>
        <full_name>setContent</full_name>
        <docblock line="330">
          <description>Sets the response content.</description>
          <long-description>&lt;p&gt;Valid types are strings, numbers, and objects that implement a __toString() method.&lt;/p&gt;</long-description>
          <tag line="330" name="param" description="" type="mixed" variable="$content">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="330" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="330" name="api" description=""/>
        </docblock>
        <argument line="341">
          <name>$content</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="359" package="Default">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="352">
          <description>Gets the current response content.</description>
          <long-description></long-description>
          <tag line="352" name="return" description="Content" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="352" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="373" package="Default">
        <name>setProtocolVersion</name>
        <full_name>setProtocolVersion</full_name>
        <docblock line="364">
          <description>Sets the HTTP protocol version (1.0 or 1.1).</description>
          <long-description></long-description>
          <tag line="364" name="param" description="The HTTP protocol version" type="string" variable="$version">
            <type by_reference="false">string</type>
          </tag>
          <tag line="364" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="364" name="api" description=""/>
        </docblock>
        <argument line="373">
          <name>$version</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="387" package="Default">
        <name>getProtocolVersion</name>
        <full_name>getProtocolVersion</full_name>
        <docblock line="380">
          <description>Gets the HTTP protocol version.</description>
          <long-description></long-description>
          <tag line="380" name="return" description="The HTTP protocol version" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="380" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="407" package="Default">
        <name>setStatusCode</name>
        <full_name>setStatusCode</full_name>
        <docblock line="392">
          <description>Sets the response status code.</description>
          <long-description></long-description>
          <tag line="392" name="param" description="HTTP status code" type="integer" variable="$code">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="392" name="param" description="HTTP status text&#10;If the status text is null it will be automatically populated for the known&#10;status codes and left empty otherwise." type="mixed" variable="$text">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="392" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="392" name="throws" description="When the HTTP status code is not valid" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="392" name="api" description=""/>
        </docblock>
        <argument line="407">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
        <argument line="407">
          <name>$text</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="438" package="Default">
        <name>getStatusCode</name>
        <full_name>getStatusCode</full_name>
        <docblock line="431">
          <description>Retrieves the status code for the current web response.</description>
          <long-description></long-description>
          <tag line="431" name="return" description="Status code" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="431" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="452" package="Default">
        <name>setCharset</name>
        <full_name>setCharset</full_name>
        <docblock line="443">
          <description>Sets the response charset.</description>
          <long-description></long-description>
          <tag line="443" name="param" description="Character set" type="string" variable="$charset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="443" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="443" name="api" description=""/>
        </docblock>
        <argument line="452">
          <name>$charset</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="466" package="Default">
        <name>getCharset</name>
        <full_name>getCharset</full_name>
        <docblock line="459">
          <description>Retrieves the response charset.</description>
          <long-description></long-description>
          <tag line="459" name="return" description="Character set" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="459" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="484" package="Default">
        <name>isCacheable</name>
        <full_name>isCacheable</full_name>
        <docblock line="471">
          <description>Returns true if the response is worth caching under any circumstance.</description>
          <long-description>&lt;p&gt;Responses marked "private" with an explicit Cache-Control directive are
considered uncacheable.&lt;/p&gt;

&lt;p&gt;Responses with neither a freshness lifetime (Expires, max-age) nor cache
validator (Last-Modified, ETag) are considered uncacheable.&lt;/p&gt;</long-description>
          <tag line="471" name="return" description="true if the response is worth caching, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="471" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="508" package="Default">
        <name>isFresh</name>
        <full_name>isFresh</full_name>
        <docblock line="497">
          <description>Returns true if the response is "fresh".</description>
          <long-description>&lt;p&gt;Fresh responses may be served from cache without any interaction with the
origin. A response is considered fresh when it includes a Cache-Control/max-age
indicator or Expiration header and the calculated age is less than the freshness lifetime.&lt;/p&gt;</long-description>
          <tag line="497" name="return" description="true if the response is fresh, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="497" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="521" package="Default">
        <name>isValidateable</name>
        <full_name>isValidateable</full_name>
        <docblock line="513">
          <description>Returns true if the response includes headers that can be used to validate
the response with the origin server using a conditional GET request.</description>
          <long-description></long-description>
          <tag line="513" name="return" description="true if the response is validateable, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="513" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="535" package="Default">
        <name>setPrivate</name>
        <full_name>setPrivate</full_name>
        <docblock line="526">
          <description>Marks the response as "private".</description>
          <long-description>&lt;p&gt;It makes the response ineligible for serving other clients.&lt;/p&gt;</long-description>
          <tag line="526" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="526" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="552" package="Default">
        <name>setPublic</name>
        <full_name>setPublic</full_name>
        <docblock line="543">
          <description>Marks the response as "public".</description>
          <long-description>&lt;p&gt;It makes the response eligible for serving other clients.&lt;/p&gt;</long-description>
          <tag line="543" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="543" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="572" package="Default">
        <name>mustRevalidate</name>
        <full_name>mustRevalidate</full_name>
        <docblock line="560">
          <description>Returns true if the response must be revalidated by caches.</description>
          <long-description>&lt;p&gt;This method indicates that the response must not be served stale by a
cache in any circumstance without first revalidating with the origin.
When present, the TTL of the response should not be overridden to be
greater than the value provided by the origin.&lt;/p&gt;</long-description>
          <tag line="560" name="return" description="true if the response must be revalidated by a cache, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="560" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="586" package="Default">
        <name>getDate</name>
        <full_name>getDate</full_name>
        <docblock line="577">
          <description>Returns the Date header as a DateTime instance.</description>
          <long-description></long-description>
          <tag line="577" name="return" description="A \DateTime instance" type="\DateTime">
            <type by_reference="false">\DateTime</type>
          </tag>
          <tag line="577" name="throws" description="When the header is not parseable" type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
          <tag line="577" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="600" package="Default">
        <name>setDate</name>
        <full_name>setDate</full_name>
        <docblock line="591">
          <description>Sets the Date header.</description>
          <long-description></long-description>
          <tag line="591" name="param" description="A \DateTime instance" type="\DateTime" variable="$date">
            <type by_reference="false">\DateTime</type>
          </tag>
          <tag line="591" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="591" name="api" description=""/>
        </docblock>
        <argument line="600">
          <name>$date</name>
          <default></default>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="613" package="Default">
        <name>getAge</name>
        <full_name>getAge</full_name>
        <docblock line="608">
          <description>Returns the age of the response.</description>
          <long-description></long-description>
          <tag line="608" name="return" description="The age of the response in seconds" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="629" package="Default">
        <name>expire</name>
        <full_name>expire</full_name>
        <docblock line="622">
          <description>Marks the response stale by setting the Age header to be equal to the maximum age of the response.</description>
          <long-description></long-description>
          <tag line="622" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="622" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="645" package="Default">
        <name>getExpires</name>
        <full_name>getExpires</full_name>
        <docblock line="638">
          <description>Returns the value of the Expires header as a DateTime instance.</description>
          <long-description></long-description>
          <tag line="638" name="return" description="A DateTime instance" type="\DateTime">
            <type by_reference="false">\DateTime</type>
          </tag>
          <tag line="638" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="661" package="Default">
        <name>setExpires</name>
        <full_name>setExpires</full_name>
        <docblock line="650">
          <description>Sets the Expires HTTP header with a DateTime instance.</description>
          <long-description>&lt;p&gt;If passed a null value, it removes the header.&lt;/p&gt;</long-description>
          <tag line="650" name="param" description="A \DateTime instance" type="\DateTime" variable="$date">
            <type by_reference="false">\DateTime</type>
          </tag>
          <tag line="650" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="650" name="api" description=""/>
        </docblock>
        <argument line="661">
          <name>$date</name>
          <default>null</default>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="685" package="Default">
        <name>getMaxAge</name>
        <full_name>getMaxAge</full_name>
        <docblock line="674">
          <description>Sets the number of seconds after the time specified in the response's Date
header when the the response should no longer be considered fresh.</description>
          <long-description>&lt;p&gt;First, it checks for a s-maxage directive, then a max-age directive, and then it falls
back on an expires header. It returns null when no maximum age can be established.&lt;/p&gt;</long-description>
          <tag line="674" name="return" description="Number of seconds" type="integer|null">
            <type by_reference="false">integer</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="674" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="713" package="Default">
        <name>setMaxAge</name>
        <full_name>setMaxAge</full_name>
        <docblock line="702">
          <description>Sets the number of seconds after which the response should no longer be considered fresh.</description>
          <long-description>&lt;p&gt;This methods sets the Cache-Control max-age directive.&lt;/p&gt;</long-description>
          <tag line="702" name="param" description="Number of seconds" type="integer" variable="$value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="702" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="702" name="api" description=""/>
        </docblock>
        <argument line="713">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="731" package="Default">
        <name>setSharedMaxAge</name>
        <full_name>setSharedMaxAge</full_name>
        <docblock line="720">
          <description>Sets the number of seconds after which the response should no longer be considered fresh by shared caches.</description>
          <long-description>&lt;p&gt;This methods sets the Cache-Control s-maxage directive.&lt;/p&gt;</long-description>
          <tag line="720" name="param" description="Number of seconds" type="integer" variable="$value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="720" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="720" name="api" description=""/>
        </docblock>
        <argument line="731">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="751" package="Default">
        <name>getTtl</name>
        <full_name>getTtl</full_name>
        <docblock line="739">
          <description>Returns the response's time-to-live in seconds.</description>
          <long-description>&lt;p&gt;It returns null when no freshness information is present in the response.&lt;/p&gt;

&lt;p&gt;When the responses TTL is &amp;lt;= 0, the response may not be served from cache without first
revalidating with the origin.&lt;/p&gt;</long-description>
          <tag line="739" name="return" description="The TTL in seconds" type="integer|null">
            <type by_reference="false">integer</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="739" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="771" package="Default">
        <name>setTtl</name>
        <full_name>setTtl</full_name>
        <docblock line="760">
          <description>Sets the response's time-to-live for shared caches.</description>
          <long-description>&lt;p&gt;This method adjusts the Cache-Control/s-maxage directive.&lt;/p&gt;</long-description>
          <tag line="760" name="param" description="Number of seconds" type="integer" variable="$seconds">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="760" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="760" name="api" description=""/>
        </docblock>
        <argument line="771">
          <name>$seconds</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="789" package="Default">
        <name>setClientTtl</name>
        <full_name>setClientTtl</full_name>
        <docblock line="778">
          <description>Sets the response's time-to-live for private/client caches.</description>
          <long-description>&lt;p&gt;This method adjusts the Cache-Control/max-age directive.&lt;/p&gt;</long-description>
          <tag line="778" name="param" description="Number of seconds" type="integer" variable="$seconds">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="778" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="778" name="api" description=""/>
        </docblock>
        <argument line="789">
          <name>$seconds</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="803" package="Default">
        <name>getLastModified</name>
        <full_name>getLastModified</full_name>
        <docblock line="796">
          <description>Returns the Last-Modified HTTP header as a DateTime instance.</description>
          <long-description></long-description>
          <tag line="796" name="return" description="A DateTime instance" type="\DateTime">
            <type by_reference="false">\DateTime</type>
          </tag>
          <tag line="796" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="819" package="Default">
        <name>setLastModified</name>
        <full_name>setLastModified</full_name>
        <docblock line="808">
          <description>Sets the Last-Modified HTTP header with a DateTime instance.</description>
          <long-description>&lt;p&gt;If passed a null value, it removes the header.&lt;/p&gt;</long-description>
          <tag line="808" name="param" description="A \DateTime instance" type="\DateTime" variable="$date">
            <type by_reference="false">\DateTime</type>
          </tag>
          <tag line="808" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="808" name="api" description=""/>
        </docblock>
        <argument line="819">
          <name>$date</name>
          <default>null</default>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="839" package="Default">
        <name>getEtag</name>
        <full_name>getEtag</full_name>
        <docblock line="832">
          <description>Returns the literal value of the ETag HTTP header.</description>
          <long-description></long-description>
          <tag line="832" name="return" description="The ETag HTTP header" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="832" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="854" package="Default">
        <name>setEtag</name>
        <full_name>setEtag</full_name>
        <docblock line="844">
          <description>Sets the ETag value.</description>
          <long-description></long-description>
          <tag line="844" name="param" description="The ETag unique identifier" type="string" variable="$etag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="844" name="param" description="Whether you want a weak ETag or not" type="Boolean" variable="$weak">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="844" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="844" name="api" description=""/>
        </docblock>
        <argument line="854">
          <name>$etag</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="854">
          <name>$weak</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="880" package="Default">
        <name>setCache</name>
        <full_name>setCache</full_name>
        <docblock line="869">
          <description>Sets the response's cache headers (validation and/or expiration).</description>
          <long-description>&lt;p&gt;Available options are: etag, last_modified, max_age, s_maxage, private, and public.&lt;/p&gt;</long-description>
          <tag line="869" name="param" description="An array of cache options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="869" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="869" name="api" description=""/>
        </docblock>
        <argument line="880">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="933" package="Default">
        <name>setNotModified</name>
        <full_name>setNotModified</full_name>
        <docblock line="921">
          <description>Modifies the response so that it conforms to the rules defined for a 304 status code.</description>
          <long-description>&lt;p&gt;This sets the status, removes the body, and discards any headers
that MUST NOT be included in 304 responses.&lt;/p&gt;</long-description>
          <tag line="921" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="921" name="see" description="\Symfony\Component\HttpFoundation\http://tools.ietf.org/html/rfc2616#section-10.3.5" refers="\Symfony\Component\HttpFoundation\http://tools.ietf.org/html/rfc2616#section-10.3.5"/>
          <tag line="921" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="953" package="Default">
        <name>hasVary</name>
        <full_name>hasVary</full_name>
        <docblock line="946">
          <description>Returns true if the response includes a Vary header.</description>
          <long-description></long-description>
          <tag line="946" name="return" description="true if the response includes a Vary header, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="946" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="965" package="Default">
        <name>getVary</name>
        <full_name>getVary</full_name>
        <docblock line="958">
          <description>Returns an array of header names given in the Vary header.</description>
          <long-description></long-description>
          <tag line="958" name="return" description="An array of Vary names" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="958" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="984" package="Default">
        <name>setVary</name>
        <full_name>setVary</full_name>
        <docblock line="974">
          <description>Sets the Vary header.</description>
          <long-description></long-description>
          <tag line="974" name="param" description="" type="string|array" variable="$headers">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="974" name="param" description="Whether to replace the actual value of not (true by default)" type="Boolean" variable="$replace">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="974" name="return" description="" type="\Symfony\Component\HttpFoundation\Response">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Response</type>
          </tag>
          <tag line="974" name="api" description=""/>
        </docblock>
        <argument line="984">
          <name>$headers</name>
          <default></default>
          <type/>
        </argument>
        <argument line="984">
          <name>$replace</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1004" package="Default">
        <name>isNotModified</name>
        <full_name>isNotModified</full_name>
        <docblock line="991">
          <description>Determines if the Response validators (ETag, Last-Modified) match
a conditional value specified in the Request.</description>
          <long-description>&lt;p&gt;If the Response is not modified, it sets the status code to 304 and
removes the actual content by calling the setNotModified() method.&lt;/p&gt;</long-description>
          <tag line="991" name="param" description="A Request instance" type="\Symfony\Component\HttpFoundation\Request" variable="$request">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Request</type>
          </tag>
          <tag line="991" name="return" description="true if the Response validators match the Request, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="991" name="api" description=""/>
        </docblock>
        <argument line="1004">
          <name>$request</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1033" package="Default">
        <name>isInvalid</name>
        <full_name>isInvalid</full_name>
        <docblock line="1026">
          <description>Is response invalid?</description>
          <long-description></long-description>
          <tag line="1026" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="1026" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1045" package="Default">
        <name>isInformational</name>
        <full_name>isInformational</full_name>
        <docblock line="1038">
          <description>Is response informative?</description>
          <long-description></long-description>
          <tag line="1038" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="1038" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1057" package="Default">
        <name>isSuccessful</name>
        <full_name>isSuccessful</full_name>
        <docblock line="1050">
          <description>Is response successful?</description>
          <long-description></long-description>
          <tag line="1050" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="1050" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1069" package="Default">
        <name>isRedirection</name>
        <full_name>isRedirection</full_name>
        <docblock line="1062">
          <description>Is the response a redirect?</description>
          <long-description></long-description>
          <tag line="1062" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="1062" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1081" package="Default">
        <name>isClientError</name>
        <full_name>isClientError</full_name>
        <docblock line="1074">
          <description>Is there a client error?</description>
          <long-description></long-description>
          <tag line="1074" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="1074" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1093" package="Default">
        <name>isServerError</name>
        <full_name>isServerError</full_name>
        <docblock line="1086">
          <description>Was there a server side error?</description>
          <long-description></long-description>
          <tag line="1086" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="1086" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1105" package="Default">
        <name>isOk</name>
        <full_name>isOk</full_name>
        <docblock line="1098">
          <description>Is the response OK?</description>
          <long-description></long-description>
          <tag line="1098" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="1098" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1117" package="Default">
        <name>isForbidden</name>
        <full_name>isForbidden</full_name>
        <docblock line="1110">
          <description>Is the reponse forbidden?</description>
          <long-description></long-description>
          <tag line="1110" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="1110" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1129" package="Default">
        <name>isNotFound</name>
        <full_name>isNotFound</full_name>
        <docblock line="1122">
          <description>Is the response a not found error?</description>
          <long-description></long-description>
          <tag line="1122" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="1122" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1143" package="Default">
        <name>isRedirect</name>
        <full_name>isRedirect</full_name>
        <docblock line="1134">
          <description>Is the response a redirect of some form?</description>
          <long-description></long-description>
          <tag line="1134" name="param" description="" type="string" variable="$location">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1134" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="1134" name="api" description=""/>
        </docblock>
        <argument line="1143">
          <name>$location</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="1155" package="Default">
        <name>isEmpty</name>
        <full_name>isEmpty</full_name>
        <docblock line="1148">
          <description>Is the response empty?</description>
          <long-description></long-description>
          <tag line="1148" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="1148" name="api" description=""/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Response.php</error>
      <critical line="23" code="50019">No short description for property $headers</critical>
      <critical line="28" code="50019">No short description for property $content</critical>
      <critical line="33" code="50019">No short description for property $version</critical>
      <critical line="38" code="50019">No short description for property $statusCode</critical>
      <critical line="43" code="50019">No short description for property $statusText</critical>
      <critical line="48" code="50019">No short description for property $charset</critical>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/RequestMatcherInterface.php" hash="cd64750400fdb373b9e0d515a201ff24" package="Default">
    <interface namespace="Symfony\Component\HttpFoundation" line="21" package="Default">
      <name>RequestMatcherInterface</name>
      <full_name>\Symfony\Component\HttpFoundation\RequestMatcherInterface</full_name>
      <docblock line="14">
        <description>RequestMatcherInterface is an interface for strategies to match a Request.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="32" package="Default">
        <name>matches</name>
        <full_name>matches</full_name>
        <docblock line="23">
          <description>Decides whether the rule(s) implemented by the strategy matches the supplied request.</description>
          <long-description></long-description>
          <tag line="23" name="param" description="The request to check for a match" type="\Symfony\Component\HttpFoundation\Request" variable="$request">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Request</type>
          </tag>
          <tag line="23" name="return" description="true if the request matches, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="23" name="api" description=""/>
        </docblock>
        <argument line="32">
          <name>$request</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Request</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/RequestMatcherInterface.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/Cookie.php" hash="0bc55826f8d270a887802693383abefb" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation" line="21" package="Default">
      <extends/>
      <name>Cookie</name>
      <full_name>\Symfony\Component\HttpFoundation\Cookie</full_name>
      <docblock line="14">
        <description>Represents a cookie</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Johannes M. Schmitt &lt;schmittjoh@gmail.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="23" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$name</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$value</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="25" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$domain</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$expire</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$path</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$secure</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$httpOnly</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="44" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="31">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="31" name="param" description="The name of the cookie" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="The value of the cookie" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="The time the cookie expires" type="integer|string|\DateTime" variable="$expire">
            <type by_reference="false">integer</type>
            <type by_reference="false">string</type>
            <type by_reference="false">\DateTime</type>
          </tag>
          <tag line="31" name="param" description="The path on the server in which the cookie will be available on" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="The domain that the cookie is available to" type="string" variable="$domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="Whether the cookie should only be transmitted over a secure HTTPS connection from the client" type="Boolean" variable="$secure">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="31" name="param" description="Whether the cookie will be made accessible only through the HTTP protocol" type="Boolean" variable="$httpOnly">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="31" name="api" description=""/>
        </docblock>
        <argument line="44">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="44">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="44">
          <name>$expire</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="44">
          <name>$path</name>
          <default>'/'</default>
          <type/>
        </argument>
        <argument line="44">
          <name>$domain</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="44">
          <name>$secure</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="44">
          <name>$httpOnly</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="80" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="75">
          <description>Returns the cookie as a string.</description>
          <long-description></long-description>
          <tag line="75" name="return" description="The cookie" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="120" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="113">
          <description>Gets the name of the cookie.</description>
          <long-description></long-description>
          <tag line="113" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="113" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="132" package="Default">
        <name>getValue</name>
        <full_name>getValue</full_name>
        <docblock line="125">
          <description>Gets the value of the cookie.</description>
          <long-description></long-description>
          <tag line="125" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="144" package="Default">
        <name>getDomain</name>
        <full_name>getDomain</full_name>
        <docblock line="137">
          <description>Gets the domain that the cookie is available to.</description>
          <long-description></long-description>
          <tag line="137" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="156" package="Default">
        <name>getExpiresTime</name>
        <full_name>getExpiresTime</full_name>
        <docblock line="149">
          <description>Gets the time the cookie expires.</description>
          <long-description></long-description>
          <tag line="149" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="149" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="168" package="Default">
        <name>getPath</name>
        <full_name>getPath</full_name>
        <docblock line="161">
          <description>Gets the path on the server in which the cookie will be available on.</description>
          <long-description></long-description>
          <tag line="161" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="161" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="180" package="Default">
        <name>isSecure</name>
        <full_name>isSecure</full_name>
        <docblock line="173">
          <description>Checks whether the cookie should only be transmitted over a secure HTTPS connection from the client.</description>
          <long-description></long-description>
          <tag line="173" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="173" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="192" package="Default">
        <name>isHttpOnly</name>
        <full_name>isHttpOnly</full_name>
        <docblock line="185">
          <description>Checks whether the cookie will be made accessible only through the HTTP protocol.</description>
          <long-description></long-description>
          <tag line="185" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="185" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="204" package="Default">
        <name>isCleared</name>
        <full_name>isCleared</full_name>
        <docblock line="197">
          <description>Whether this cookie is about to be cleared</description>
          <long-description></long-description>
          <tag line="197" name="return" description="" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="197" name="api" description=""/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/Cookie.php</error>
      <error line="23" code="50018">No DocBlock was found for property $name</error>
      <error line="24" code="50018">No DocBlock was found for property $value</error>
      <error line="25" code="50018">No DocBlock was found for property $domain</error>
      <error line="26" code="50018">No DocBlock was found for property $expire</error>
      <error line="27" code="50018">No DocBlock was found for property $path</error>
      <error line="28" code="50018">No DocBlock was found for property $secure</error>
      <error line="29" code="50018">No DocBlock was found for property $httpOnly</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/HeaderBag.php" hash="1d801b07dea77a3b806ce2827fc1fddb" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation" line="21" package="Default">
      <extends/>
      <implements>\IteratorAggregate</implements>
      <implements>\Countable</implements>
      <name>HeaderBag</name>
      <full_name>\Symfony\Component\HttpFoundation\HeaderBag</full_name>
      <docblock line="14">
        <description>HeaderBag is a container for HTTP headers.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="23" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$headers</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$cacheControl</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="33" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="26">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="26" name="param" description="An array of HTTP headers" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="26" name="api" description=""/>
        </docblock>
        <argument line="33">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="47" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="42">
          <description>Returns the headers as a string.</description>
          <long-description></long-description>
          <tag line="42" name="return" description="The headers" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="73" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="66">
          <description>Returns the headers.</description>
          <long-description></long-description>
          <tag line="66" name="return" description="An array of headers" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="66" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="85" package="Default">
        <name>keys</name>
        <full_name>keys</full_name>
        <docblock line="78">
          <description>Returns the parameter keys.</description>
          <long-description></long-description>
          <tag line="78" name="return" description="An array of parameter keys" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="78" name="api" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="97" package="Default">
        <name>replace</name>
        <full_name>replace</full_name>
        <docblock line="90">
          <description>Replaces the current HTTP headers by a new set.</description>
          <long-description></long-description>
          <tag line="90" name="param" description="An array of HTTP headers" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="90" name="api" description=""/>
        </docblock>
        <argument line="97">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="110" package="Default">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="103">
          <description>Adds new headers the current HTTP headers set.</description>
          <long-description></long-description>
          <tag line="103" name="param" description="An array of HTTP headers" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="103" name="api" description=""/>
        </docblock>
        <argument line="110">
          <name>$headers</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="128" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="117">
          <description>Returns a header value by name.</description>
          <long-description></long-description>
          <tag line="117" name="param" description="The header name" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="117" name="param" description="The default value" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="117" name="param" description="Whether to return the first value or all header values" type="Boolean" variable="$first">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="117" name="return" description="The first header value if $first is true, an array of values otherwise" type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="117" name="api" description=""/>
        </docblock>
        <argument line="128">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="128">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="128">
          <name>$first</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="156" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="147">
          <description>Sets a header by name.</description>
          <long-description></long-description>
          <tag line="147" name="param" description="The key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="147" name="param" description="The value or an array of values" type="string|array" variable="$values">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="147" name="param" description="Whether to replace the actual value of not (true by default)" type="Boolean" variable="$replace">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="147" name="api" description=""/>
        </docblock>
        <argument line="156">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="156">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
        <argument line="156">
          <name>$replace</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="182" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="173">
          <description>Returns true if the HTTP header is defined.</description>
          <long-description></long-description>
          <tag line="173" name="param" description="The HTTP header" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="173" name="return" description="true if the parameter exists, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="173" name="api" description=""/>
        </docblock>
        <argument line="182">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="197" package="Default">
        <name>contains</name>
        <full_name>contains</full_name>
        <docblock line="187">
          <description>Returns true if the given HTTP header contains the given value.</description>
          <long-description></long-description>
          <tag line="187" name="param" description="The HTTP header name" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="187" name="param" description="The HTTP value" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="187" name="return" description="true if the value is contained in the header, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="187" name="api" description=""/>
        </docblock>
        <argument line="197">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="197">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="209" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="202">
          <description>Removes a header.</description>
          <long-description></long-description>
          <tag line="202" name="param" description="The HTTP header name" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="202" name="api" description=""/>
        </docblock>
        <argument line="209">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="232" package="Default">
        <name>getDate</name>
        <full_name>getDate</full_name>
        <docblock line="220">
          <description>Returns the HTTP header value converted to a date.</description>
          <long-description></long-description>
          <tag line="220" name="param" description="The parameter key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="220" name="param" description="The default value" type="\DateTime" variable="$default">
            <type by_reference="false">\DateTime</type>
          </tag>
          <tag line="220" name="return" description="The filtered value" type="null|\DateTime">
            <type by_reference="false">null</type>
            <type by_reference="false">\DateTime</type>
          </tag>
          <tag line="220" name="throws" description="When the HTTP header is not parseable" type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
          <tag line="220" name="api" description=""/>
        </docblock>
        <argument line="232">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="232">
          <name>$default</name>
          <default>null</default>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="245" package="Default">
        <name>addCacheControlDirective</name>
        <full_name>addCacheControlDirective</full_name>
        <argument line="245">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="245">
          <name>$value</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="252" package="Default">
        <name>hasCacheControlDirective</name>
        <full_name>hasCacheControlDirective</full_name>
        <argument line="252">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="257" package="Default">
        <name>getCacheControlDirective</name>
        <full_name>getCacheControlDirective</full_name>
        <argument line="257">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="262" package="Default">
        <name>removeCacheControlDirective</name>
        <full_name>removeCacheControlDirective</full_name>
        <argument line="262">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="274" package="Default">
        <name>getIterator</name>
        <full_name>getIterator</full_name>
        <docblock line="269">
          <description>Returns an iterator for headers.</description>
          <long-description></long-description>
          <tag line="269" name="return" description="An \ArrayIterator instance" type="\ArrayIterator">
            <type by_reference="false">\ArrayIterator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="284" package="Default">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="279">
          <description>Returns the number of headers.</description>
          <long-description></long-description>
          <tag line="279" name="return" description="The number of headers" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="289" package="Default">
        <name>getCacheControlHeader</name>
        <full_name>getCacheControlHeader</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="315" package="Default">
        <name>parseCacheControl</name>
        <full_name>parseCacheControl</full_name>
        <docblock line="308">
          <description>Parses a Cache-Control HTTP header.</description>
          <long-description></long-description>
          <tag line="308" name="param" description="The value of the Cache-Control HTTP header" type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="308" name="return" description="An array representing the attribute values" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="315">
          <name>$header</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/HeaderBag.php</error>
      <error line="23" code="50018">No DocBlock was found for property $headers</error>
      <error line="24" code="50018">No DocBlock was found for property $cacheControl</error>
      <error line="245" code="50010">No DocBlock was found for method addCacheControlDirective()</error>
      <error line="252" code="50010">No DocBlock was found for method hasCacheControlDirective()</error>
      <error line="257" code="50010">No DocBlock was found for method getCacheControlDirective()</error>
      <error line="262" code="50010">No DocBlock was found for method removeCacheControlDirective()</error>
      <error line="289" code="50010">No DocBlock was found for method getCacheControlHeader()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/ServerBag.php" hash="270a568e6a67c4ea135b343800ff3a5a" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation" line="21" package="Default">
      <extends>\Symfony\Component\HttpFoundation\ParameterBag</extends>
      <name>ServerBag</name>
      <full_name>\Symfony\Component\HttpFoundation\ServerBag</full_name>
      <docblock line="14">
        <description>ServerBag is a container for HTTP headers from the $_SERVER variable.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="author" description="Bulat Shakirzyanov &lt;mallluhuct@gmail.com&gt;"/>
        <tag line="14" name="author" description="Robert Kiss &lt;kepten@gmail.com&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="28" package="Default">
        <name>getHeaders</name>
        <full_name>getHeaders</full_name>
        <docblock line="23">
          <description>Gets the HTTP headers.</description>
          <long-description></long-description>
          <tag line="23" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/ServerBag.php</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/ResponseHeaderBag.php" hash="cc5cdb794322549838ed2d1d2e8daa52" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation" line="21" package="Default">
      <extends>\Symfony\Component\HttpFoundation\HeaderBag</extends>
      <name>ResponseHeaderBag</name>
      <full_name>\Symfony\Component\HttpFoundation\ResponseHeaderBag</full_name>
      <docblock line="14">
        <description>ResponseHeaderBag is a container for Response HTTP headers.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <constant namespace="Symfony\Component\HttpFoundation" line="23" package="Default">
        <name>COOKIES_FLAT</name>
        <full_name>COOKIES_FLAT</full_name>
        <value>'flat'</value>
      </constant>
      <constant namespace="Symfony\Component\HttpFoundation" line="24" package="Default">
        <name>COOKIES_ARRAY</name>
        <full_name>COOKIES_ARRAY</full_name>
        <value>'array'</value>
      </constant>
      <constant namespace="Symfony\Component\HttpFoundation" line="26" package="Default">
        <name>DISPOSITION_ATTACHMENT</name>
        <full_name>DISPOSITION_ATTACHMENT</full_name>
        <value>'attachment'</value>
      </constant>
      <constant namespace="Symfony\Component\HttpFoundation" line="27" package="Default">
        <name>DISPOSITION_INLINE</name>
        <full_name>DISPOSITION_INLINE</full_name>
        <value>'inline'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="32" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$computedCacheControl</name>
        <default>array()</default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$cookies</name>
        <default>array()</default>
        <docblock line="34">
          <description></description>
          <long-description></long-description>
          <tag line="34" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="46" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="39">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="39" name="param" description="An array of HTTP headers" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="api" description=""/>
        </docblock>
        <argument line="46">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="58" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="55">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="73" package="Default">
        <name>replace</name>
        <full_name>replace</full_name>
        <docblock line="68">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
          <tag line="68" name="api" description=""/>
        </docblock>
        <argument line="73">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="87" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="82">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
          <tag line="82" name="api" description=""/>
        </docblock>
        <argument line="87">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="87">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
        <argument line="87">
          <name>$replace</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="104" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="99">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
          <tag line="99" name="api" description=""/>
        </docblock>
        <argument line="104">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="116" package="Default">
        <name>hasCacheControlDirective</name>
        <full_name>hasCacheControlDirective</full_name>
        <docblock line="113">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="116">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="124" package="Default">
        <name>getCacheControlDirective</name>
        <full_name>getCacheControlDirective</full_name>
        <docblock line="121">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="124">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="136" package="Default">
        <name>setCookie</name>
        <full_name>setCookie</full_name>
        <docblock line="129">
          <description>Sets a cookie.</description>
          <long-description></long-description>
          <tag line="129" name="param" description="" type="\Symfony\Component\HttpFoundation\Cookie" variable="$cookie">
            <type by_reference="false">\Symfony\Component\HttpFoundation\Cookie</type>
          </tag>
          <tag line="129" name="api" description=""/>
        </docblock>
        <argument line="136">
          <name>$cookie</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Cookie</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="150" package="Default">
        <name>removeCookie</name>
        <full_name>removeCookie</full_name>
        <docblock line="141">
          <description>Removes a cookie from the array, but does not unset it in the browser</description>
          <long-description></long-description>
          <tag line="141" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="141" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="141" name="param" description="" type="string" variable="$domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="141" name="api" description=""/>
        </docblock>
        <argument line="150">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="150">
          <name>$path</name>
          <default>'/'</default>
          <type/>
        </argument>
        <argument line="150">
          <name>$domain</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="178" package="Default">
        <name>getCookies</name>
        <full_name>getCookies</full_name>
        <docblock line="167">
          <description>Returns an array with all cookies</description>
          <long-description></long-description>
          <tag line="167" name="param" description="" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="throws" description="When the $format is invalid" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="167" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="167" name="api" description=""/>
        </docblock>
        <argument line="178">
          <name>$format</name>
          <default>self::COOKIES_FLAT</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="209" package="Default">
        <name>clearCookie</name>
        <full_name>clearCookie</full_name>
        <docblock line="200">
          <description>Clears a cookie in the browser</description>
          <long-description></long-description>
          <tag line="200" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="200" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="200" name="param" description="" type="string" variable="$domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="200" name="api" description=""/>
        </docblock>
        <argument line="209">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="209">
          <name>$path</name>
          <default>'/'</default>
          <type/>
        </argument>
        <argument line="209">
          <name>$domain</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="228" package="Default">
        <name>makeDisposition</name>
        <full_name>makeDisposition</full_name>
        <docblock line="214">
          <description>Generates a HTTP Content-Disposition field-value.</description>
          <long-description></long-description>
          <tag line="214" name="param" description="One of &quot;inline&quot; or &quot;attachment&quot;" type="string" variable="$disposition">
            <type by_reference="false">string</type>
          </tag>
          <tag line="214" name="param" description="A unicode string" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="214" name="param" description="A string containing only ASCII characters that&#10;                                is semantically equivalent to $filename. If the filename is already ASCII,&#10;                                it can be omitted, or just copied from $filename" type="string" variable="$filenameFallback">
            <type by_reference="false">string</type>
          </tag>
          <tag line="214" name="return" description="A string suitable for use as a Content-Disposition field-value." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="214" name="throws" description="" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="214" name="see" description="6266" refers="\Symfony\Component\HttpFoundation\RFC"/>
        </docblock>
        <argument line="228">
          <name>$disposition</name>
          <default></default>
          <type/>
        </argument>
        <argument line="228">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
        <argument line="228">
          <name>$filenameFallback</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="270" package="Default">
        <name>computeCacheControlValue</name>
        <full_name>computeCacheControlValue</full_name>
        <docblock line="262">
          <description>Returns the calculated value of the cache-control header.</description>
          <long-description>&lt;p&gt;This considers several other headers and calculates or modifies the
cache-control header to a sensible, conservative value.&lt;/p&gt;</long-description>
          <tag line="262" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/ResponseHeaderBag.php</error>
      <critical line="29" code="50019">No short description for property $computedCacheControl</critical>
      <critical line="34" code="50019">No short description for property $cookies</critical>
      <error line="68" code="50015">Argument $headers is missing from the Docblock of replace()</error>
      <error line="82" code="50015">Argument $key is missing from the Docblock of set()</error>
      <error line="82" code="50015">Argument $values is missing from the Docblock of set()</error>
      <error line="82" code="50015">Argument $replace is missing from the Docblock of set()</error>
      <error line="99" code="50015">Argument $key is missing from the Docblock of remove()</error>
      <error line="113" code="50015">Argument $key is missing from the Docblock of hasCacheControlDirective()</error>
      <error line="121" code="50015">Argument $key is missing from the Docblock of getCacheControlDirective()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/JsonResponse.php" hash="981a2efb1acae79261a43bb1a505d27e" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation" line="19" package="Default">
      <extends>\Symfony\Component\HttpFoundation\Response</extends>
      <name>JsonResponse</name>
      <full_name>\Symfony\Component\HttpFoundation\JsonResponse</full_name>
      <docblock line="14">
        <description>Response represents an HTTP response in JSON format.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Igor Wiedler &lt;igor@wiedler.ch&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="21" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$data</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="22" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$callback</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="31" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="24">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="24" name="param" description="The response data" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="24" name="param" description="The response status code" type="integer" variable="$status">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="24" name="param" description="An array of response headers" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="31">
          <name>$status</name>
          <default>200</default>
          <type/>
        </argument>
        <argument line="31">
          <name>$headers</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Symfony\Component\HttpFoundation" line="41" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="38">
          <description>{@inheritDoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="41">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="41">
          <name>$status</name>
          <default>200</default>
          <type/>
        </argument>
        <argument line="41">
          <name>$headers</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="53" package="Default">
        <name>setCallback</name>
        <full_name>setCallback</full_name>
        <docblock line="46">
          <description>Sets the JSONP callback.</description>
          <long-description></long-description>
          <tag line="46" name="param" description="" type="string" variable="$callback">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="return" description="" type="\Symfony\Component\HttpFoundation\JsonResponse">
            <type by_reference="false">\Symfony\Component\HttpFoundation\JsonResponse</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$callback</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="78" package="Default">
        <name>setData</name>
        <full_name>setData</full_name>
        <docblock line="71">
          <description>Sets the data to be sent as json.</description>
          <long-description></long-description>
          <tag line="71" name="param" description="" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="71" name="return" description="" type="\Symfony\Component\HttpFoundation\JsonResponse">
            <type by_reference="false">\Symfony\Component\HttpFoundation\JsonResponse</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="96" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="91">
          <description>Updates the content and headers according to the json data and callback.</description>
          <long-description></long-description>
          <tag line="91" name="return" description="" type="\Symfony\Component\HttpFoundation\JsonResponse">
            <type by_reference="false">\Symfony\Component\HttpFoundation\JsonResponse</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/JsonResponse.php</error>
      <error line="21" code="50018">No DocBlock was found for property $data</error>
      <error line="22" code="50018">No DocBlock was found for property $callback</error>
      <error line="38" code="50015">Argument $data is missing from the Docblock of create()</error>
      <error line="38" code="50015">Argument $status is missing from the Docblock of create()</error>
      <error line="38" code="50015">Argument $headers is missing from the Docblock of create()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/FileBag.php" hash="90e6559b1d62f75ba69b7c49840b4184" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation" line="24" package="Default">
      <extends>\Symfony\Component\HttpFoundation\ParameterBag</extends>
      <name>FileBag</name>
      <full_name>\Symfony\Component\HttpFoundation\FileBag</full_name>
      <docblock line="16">
        <description>FileBag is a container for HTTP headers.</description>
        <long-description></long-description>
        <tag line="16" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="16" name="author" description="Bulat Shakirzyanov &lt;mallluhuct@gmail.com&gt;"/>
        <tag line="16" name="api" description=""/>
      </docblock>
      <property final="false" static="true" visibility="private" line="26" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$fileKeys</name>
        <default>array('error', 'name', 'size', 'tmp_name', 'type')</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="35" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="28">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="28" name="param" description="An array of HTTP files" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="api" description=""/>
        </docblock>
        <argument line="35">
          <name>$parameters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="45" package="Default">
        <name>replace</name>
        <full_name>replace</full_name>
        <docblock line="40">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
          <tag line="40" name="api" description=""/>
        </docblock>
        <argument line="45">
          <name>$files</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="56" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="51">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
          <tag line="51" name="api" description=""/>
        </docblock>
        <argument line="56">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="70" package="Default">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="65">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
          <tag line="65" name="api" description=""/>
        </docblock>
        <argument line="70">
          <name>$files</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="84" package="Default">
        <name>convertFileInformation</name>
        <full_name>convertFileInformation</full_name>
        <docblock line="77">
          <description>Converts uploaded files to UploadedFile instances.</description>
          <long-description></long-description>
          <tag line="77" name="param" description="A (multi-dimensional) array of uploaded file information" type="array|\Symfony\Component\HttpFoundation\File\UploadedFile" variable="$file">
            <type by_reference="false">array</type>
            <type by_reference="false">\Symfony\Component\HttpFoundation\File\UploadedFile</type>
          </tag>
          <tag line="77" name="return" description="A (multi-dimensional) array of UploadedFile instances" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="125" package="Default">
        <name>fixPhpFilesArray</name>
        <full_name>fixPhpFilesArray</full_name>
        <docblock line="109">
          <description>Fixes a malformed PHP $_FILES array.</description>
          <long-description>&lt;p&gt;PHP has a bug that the format of the $_FILES array differs, depending on
whether the uploaded file fields had normal field names or array-like
field names ("normal" vs. "parent[child]").&lt;/p&gt;

&lt;p&gt;This method fixes the array to look like the "normal" $_FILES array.&lt;/p&gt;

&lt;p&gt;It's safe to pass an already converted array, in which case this method
just returns the original array unmodified.&lt;/p&gt;</long-description>
          <tag line="109" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="109" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/FileBag.php</error>
      <error line="26" code="50018">No DocBlock was found for property $fileKeys</error>
      <error line="40" code="50015">Argument $files is missing from the Docblock of replace()</error>
      <error line="51" code="50015">Argument $key is missing from the Docblock of set()</error>
      <error line="51" code="50015">Argument $value is missing from the Docblock of set()</error>
      <error line="65" code="50015">Argument $files is missing from the Docblock of add()</error>
    </parse_markers>
  </file>
  <file path="laravel/vendor/Symfony/Component/HttpFoundation/RequestMatcher.php" hash="5fafdace7bda9237ba101e0736838a25" package="Default">
    <class final="false" abstract="false" namespace="Symfony\Component\HttpFoundation" line="21" package="Default">
      <extends/>
      <implements>\Symfony\Component\HttpFoundation\RequestMatcherInterface</implements>
      <name>RequestMatcher</name>
      <full_name>\Symfony\Component\HttpFoundation\RequestMatcher</full_name>
      <docblock line="14">
        <description>RequestMatcher compares a pre-defined set of checks against a Request instance.</description>
        <long-description></long-description>
        <tag line="14" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="14" name="api" description=""/>
      </docblock>
      <property final="false" static="false" visibility="private" line="26" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$path</name>
        <default></default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$host</name>
        <default></default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
          <tag line="28" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="36" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$methods</name>
        <default>array()</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="41" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$ip</name>
        <default></default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag line="38" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="46" namespace="Symfony\Component\HttpFoundation" package="Default">
        <name>$attributes</name>
        <default>array()</default>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag line="43" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="55" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
          <tag line="48" name="param" description="" type="string|null" variable="$path">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="48" name="param" description="" type="string|null" variable="$host">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="48" name="param" description="" type="string|string[]|null" variable="$methods">
            <type by_reference="false">string</type>
            <type by_reference="false">string[]</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="48" name="param" description="" type="string|null" variable="$ip">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="48" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$path</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="55">
          <name>$host</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="55">
          <name>$methods</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="55">
          <name>$ip</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="55">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="71" package="Default">
        <name>matchHost</name>
        <full_name>matchHost</full_name>
        <docblock line="66">
          <description>Adds a check for the URL host name.</description>
          <long-description></long-description>
          <tag line="66" name="param" description="A Regexp" type="string" variable="$regexp">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$regexp</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="81" package="Default">
        <name>matchPath</name>
        <full_name>matchPath</full_name>
        <docblock line="76">
          <description>Adds a check for the URL path info.</description>
          <long-description></long-description>
          <tag line="76" name="param" description="A Regexp" type="string" variable="$regexp">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$regexp</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="91" package="Default">
        <name>matchIp</name>
        <full_name>matchIp</full_name>
        <docblock line="86">
          <description>Adds a check for the client IP.</description>
          <long-description></long-description>
          <tag line="86" name="param" description="A specific IP address or a range specified using IP/netmask like 192.168.1.0/24" type="string" variable="$ip">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$ip</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="101" package="Default">
        <name>matchMethod</name>
        <full_name>matchMethod</full_name>
        <docblock line="96">
          <description>Adds a check for the HTTP method.</description>
          <long-description></long-description>
          <tag line="96" name="param" description="An HTTP method or an array of HTTP methods" type="string|string[]|null" variable="$method">
            <type by_reference="false">string</type>
            <type by_reference="false">string[]</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="101">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="112" package="Default">
        <name>matchAttribute</name>
        <full_name>matchAttribute</full_name>
        <docblock line="106">
          <description>Adds a check for request attribute.</description>
          <long-description></long-description>
          <tag line="106" name="param" description="The request attribute name" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="param" description="A Regexp" type="string" variable="$regexp">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="112">
          <name>$regexp</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Symfony\Component\HttpFoundation" line="122" package="Default">
        <name>matches</name>
        <full_name>matches</full_name>
        <docblock line="117">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
          <tag line="117" name="api" description=""/>
        </docblock>
        <argument line="122">
          <name>$request</name>
          <default></default>
          <type>\Symfony\Component\HttpFoundation\Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="161" package="Default">
        <name>checkIp</name>
        <full_name>checkIp</full_name>
        <docblock line="153">
          <description>Validates an IP address.</description>
          <long-description></long-description>
          <tag line="153" name="param" description="" type="string" variable="$requestIp">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="param" description="" type="string" variable="$ip">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="return" description="True valid, false if not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="161">
          <name>$requestIp</name>
          <default></default>
          <type/>
        </argument>
        <argument line="161">
          <name>$ip</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="179" package="Default">
        <name>checkIp4</name>
        <full_name>checkIp4</full_name>
        <docblock line="171">
          <description>Validates an IPv4 address.</description>
          <long-description></long-description>
          <tag line="171" name="param" description="" type="string" variable="$requestIp">
            <type by_reference="false">string</type>
          </tag>
          <tag line="171" name="param" description="" type="string" variable="$ip">
            <type by_reference="false">string</type>
          </tag>
          <tag line="171" name="return" description="True valid, false if not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$requestIp</name>
          <default></default>
          <type/>
        </argument>
        <argument line="179">
          <name>$ip</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Symfony\Component\HttpFoundation" line="206" package="Default">
        <name>checkIp6</name>
        <full_name>checkIp6</full_name>
        <docblock line="195">
          <description>Validates an IPv6 address.</description>
          <long-description></long-description>
          <tag line="195" name="author" description="David Soria Parra &lt;dsp at php dot net&gt;"/>
          <tag line="195" name="see" description="\Symfony\Component\HttpFoundation\https://github.com/dsp/v6tools" refers="\Symfony\Component\HttpFoundation\https://github.com/dsp/v6tools"/>
          <tag line="195" name="param" description="" type="string" variable="$requestIp">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="param" description="" type="string" variable="$ip">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="return" description="True valid, false if not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="206">
          <name>$requestIp</name>
          <default></default>
          <type/>
        </argument>
        <argument line="206">
          <name>$ip</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/vendor/Symfony/Component/HttpFoundation/RequestMatcher.php</error>
      <critical line="23" code="50019">No short description for property $path</critical>
      <critical line="28" code="50019">No short description for property $host</critical>
      <critical line="33" code="50019">No short description for property $methods</critical>
      <critical line="38" code="50019">No short description for property $ip</critical>
      <critical line="43" code="50019">No short description for property $attributes</critical>
      <error line="48" code="50012">No short description for method __construct()</error>
      <error line="117" code="50015">Argument $request is missing from the Docblock of matches()</error>
    </parse_markers>
  </file>
  <file path="laravel/response.php" hash="96c96a8269cfa427f4bdf1385291026f" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="6" package="Default">
      <extends/>
      <name>Response</name>
      <full_name>\Laravel\Response</full_name>
      <property final="false" static="false" visibility="public" line="13" namespace="Laravel" package="Default">
        <name>$content</name>
        <default></default>
        <docblock line="8">
          <description>The content of the response.</description>
          <long-description></long-description>
          <tag line="8" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="20" namespace="Laravel" package="Default">
        <name>$foundation</name>
        <default></default>
        <docblock line="15">
          <description>The Symfony HttpFoundation Response instance.</description>
          <long-description></long-description>
          <tag line="15" name="var" description="" type="\Laravel\HttpFoundation\Response">
            <type by_reference="false">\Laravel\HttpFoundation\Response</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="30" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="22">
          <description>Create a new response instance.</description>
          <long-description></long-description>
          <tag line="22" name="param" description="" type="mixed" variable="$content">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="22" name="param" description="" type="int" variable="$status">
            <type by_reference="false">int</type>
          </tag>
          <tag line="22" name="param" description="" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="22" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$content</name>
          <default></default>
          <type/>
        </argument>
        <argument line="30">
          <name>$status</name>
          <default>200</default>
          <type/>
        </argument>
        <argument line="30">
          <name>$headers</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="56" package="Default">
        <name>make</name>
        <full_name>make</full_name>
        <docblock line="37">
          <description>Create a new response instance.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a response instance with string content
    return Response::make(json_encode($user));

    // Create a response instance with a given status
    return Response::make('Not Found', 404);

    // Create a response with some custom headers
    return Response::make(json_encode($user), 200, array('header' =&gt; 'value'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="37" name="param" description="" type="mixed" variable="$content">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="37" name="param" description="" type="int" variable="$status">
            <type by_reference="false">int</type>
          </tag>
          <tag line="37" name="param" description="" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="37" name="return" description="" type="\Laravel\Response">
            <type by_reference="false">\Laravel\Response</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$content</name>
          <default></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$status</name>
          <default>200</default>
          <type/>
        </argument>
        <argument line="56">
          <name>$headers</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="76" package="Default">
        <name>view</name>
        <full_name>view</full_name>
        <docblock line="61">
          <description>Create a new response instance containing a view.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a response instance with a view
    return Response::view('home.index');

    // Create a response instance with a view and data
    return Response::view('home.index', array('name' =&gt; 'Taylor'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="61" name="param" description="" type="string" variable="$view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="61" name="return" description="" type="\Laravel\Response">
            <type by_reference="false">\Laravel\Response</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$view</name>
          <default></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="95" package="Default">
        <name>json</name>
        <full_name>json</full_name>
        <docblock line="81">
          <description>Create a new JSON response.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a response instance with JSON
    return Response::json($data, 200, array('header' =&gt; 'value'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="81" name="param" description="" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="81" name="param" description="" type="int" variable="$status">
            <type by_reference="false">int</type>
          </tag>
          <tag line="81" name="param" description="" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="81" name="param" description="" type="int" variable="$json_options">
            <type by_reference="false">int</type>
          </tag>
          <tag line="81" name="return" description="" type="\Laravel\Response">
            <type by_reference="false">\Laravel\Response</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="95">
          <name>$status</name>
          <default>200</default>
          <type/>
        </argument>
        <argument line="95">
          <name>$headers</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="95">
          <name>$json_options</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="116" package="Default">
        <name>jsonp</name>
        <full_name>jsonp</full_name>
        <docblock line="103">
          <description>Create a new JSONP response.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a response instance with JSONP
    return Response::jsonp('myFunctionCall', $data, 200, array('header' =&gt; 'value'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="103" name="param" description="" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="103" name="param" description="" type="int" variable="$status">
            <type by_reference="false">int</type>
          </tag>
          <tag line="103" name="param" description="" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="103" name="return" description="" type="\Laravel\Response">
            <type by_reference="false">\Laravel\Response</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
        <argument line="116">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="116">
          <name>$status</name>
          <default>200</default>
          <type/>
        </argument>
        <argument line="116">
          <name>$headers</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="136" package="Default">
        <name>eloquent</name>
        <full_name>eloquent</full_name>
        <docblock line="123">
          <description>Create a new response of JSON'd Eloquent models.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a new response instance with Eloquent models
    return Response::eloquent($data, 200, array('header' =&gt; 'value'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="123" name="param" description="" type="\Laravel\Eloquent|array" variable="$data">
            <type by_reference="false">\Laravel\Eloquent</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="123" name="param" description="" type="int" variable="$status">
            <type by_reference="false">int</type>
          </tag>
          <tag line="123" name="param" description="" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="123" name="return" description="" type="\Laravel\Response">
            <type by_reference="false">\Laravel\Response</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="136">
          <name>$status</name>
          <default>200</default>
          <type/>
        </argument>
        <argument line="136">
          <name>$headers</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="162" package="Default">
        <name>error</name>
        <full_name>error</full_name>
        <docblock line="143">
          <description>Create a new error response instance.</description>
          <long-description>&lt;p&gt;The response status code will be set using the specified code.&lt;/p&gt;

&lt;p&gt;The specified error should match a view in your views/error directory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Create a 404 response
    return Response::error('404');

    // Create a 404 response with data
    return Response::error('404', array('message' =&gt; 'Not Found'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="143" name="param" description="" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="143" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="143" name="return" description="" type="\Laravel\Response">
            <type by_reference="false">\Laravel\Response</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
        <argument line="162">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="183" package="Default">
        <name>download</name>
        <full_name>download</full_name>
        <docblock line="167">
          <description>Create a new download response instance.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a download response to a given file
    return Response::download('path/to/file.jpg');

    // Create a download response with a given file name
    return Response::download('path/to/file.jpg', 'your_file.jpg');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="167" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="param" description="" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="167" name="return" description="" type="\Laravel\Response">
            <type by_reference="false">\Laravel\Response</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="183">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="183">
          <name>$headers</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="216" package="Default">
        <name>disposition</name>
        <full_name>disposition</full_name>
        <docblock line="210">
          <description>Create the proper Content-Disposition header.</description>
          <long-description></long-description>
          <tag line="210" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="210" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="216">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="229" package="Default">
        <name>prepare</name>
        <full_name>prepare</full_name>
        <docblock line="223">
          <description>Prepare a response from the given value.</description>
          <long-description></long-description>
          <tag line="223" name="param" description="" type="mixed" variable="$response">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="223" name="return" description="" type="\Laravel\Response">
            <type by_reference="false">\Laravel\Response</type>
          </tag>
        </docblock>
        <argument line="229">
          <name>$response</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="247" package="Default">
        <name>send</name>
        <full_name>send</full_name>
        <docblock line="242">
          <description>Send the headers and content of the response to the browser.</description>
          <long-description></long-description>
          <tag line="242" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="261" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="256">
          <description>Convert the content of the Response to a string and return it.</description>
          <long-description></long-description>
          <tag line="256" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="288" package="Default">
        <name>send_headers</name>
        <full_name>send_headers</full_name>
        <docblock line="283">
          <description>Send all of the response headers to the browser.</description>
          <long-description></long-description>
          <tag line="283" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="300" package="Default">
        <name>cookies</name>
        <full_name>cookies</full_name>
        <docblock line="295">
          <description>Set the cookies on the HttpFoundation Response.</description>
          <long-description></long-description>
          <tag line="295" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="322" package="Default">
        <name>header</name>
        <full_name>header</full_name>
        <docblock line="315">
          <description>Add a header to the array of response headers.</description>
          <long-description></long-description>
          <tag line="315" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="315" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="315" name="return" description="" type="\Laravel\Response">
            <type by_reference="false">\Laravel\Response</type>
          </tag>
        </docblock>
        <argument line="322">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="322">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="334" package="Default">
        <name>headers</name>
        <full_name>headers</full_name>
        <docblock line="329">
          <description>Get the HttpFoundation Response headers.</description>
          <long-description></long-description>
          <tag line="329" name="return" description="" type="\Laravel\ResponseParameterBag">
            <type by_reference="false">\Laravel\ResponseParameterBag</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="345" package="Default">
        <name>status</name>
        <full_name>status</full_name>
        <docblock line="339">
          <description>Get / set the response status code.</description>
          <long-description></long-description>
          <tag line="339" name="param" description="" type="int" variable="$status">
            <type by_reference="false">int</type>
          </tag>
          <tag line="339" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="345">
          <name>$status</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="364" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="359">
          <description>Render the response when cast to string</description>
          <long-description></long-description>
          <tag line="359" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/response.php</error>
      <error line="6" code="50000">No DocBlock was found for \Laravel\Response</error>
      <error line="103" code="50014">Name of argument $callback does not match with the DocBlock's name $data in jsonp()</error>
      <error line="103" code="50014">Name of argument $data does not match with the DocBlock's name $status in jsonp()</error>
      <error line="103" code="50014">Name of argument $status does not match with the DocBlock's name $headers in jsonp()</error>
      <error line="103" code="50015">Argument $headers is missing from the Docblock of jsonp()</error>
    </parse_markers>
  </file>
  <file path="laravel/event.php" hash="54517fdacb08cceb91455bacd2b71a13" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Event</name>
      <full_name>\Laravel\Event</full_name>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$events</name>
        <default>array()</default>
        <docblock line="5">
          <description>All of the registered events.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$queued</name>
        <default>array()</default>
        <docblock line="12">
          <description>The queued events waiting for flushing.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="24" namespace="Laravel" package="Default">
        <name>$flushers</name>
        <default>array()</default>
        <docblock line="19">
          <description>All of the registered queue flusher callbacks.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="32" package="Default">
        <name>listeners</name>
        <full_name>listeners</full_name>
        <docblock line="26">
          <description>Determine if an event has any registered listeners.</description>
          <long-description></long-description>
          <tag line="26" name="param" description="" type="string" variable="$event">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$event</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="52" package="Default">
        <name>listen</name>
        <full_name>listen</full_name>
        <docblock line="37">
          <description>Register a callback for a given event.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Register a callback for the "start" event
    Event::listen('start', function() {return 'Started!';});

    // Register an object instance callback for the given event
    Event::listen('event', array($object, 'method'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="37" name="param" description="" type="string" variable="$event">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="" type="mixed" variable="$callback">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="37" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$event</name>
          <default></default>
          <type/>
        </argument>
        <argument line="52">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="64" package="Default">
        <name>override</name>
        <full_name>override</full_name>
        <docblock line="57">
          <description>Override all callbacks for a given event with a new callback.</description>
          <long-description></long-description>
          <tag line="57" name="param" description="" type="string" variable="$event">
            <type by_reference="false">string</type>
          </tag>
          <tag line="57" name="param" description="" type="mixed" variable="$callback">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="57" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$event</name>
          <default></default>
          <type/>
        </argument>
        <argument line="64">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="79" package="Default">
        <name>queue</name>
        <full_name>queue</full_name>
        <docblock line="71">
          <description>Add an item to an event queue for processing.</description>
          <long-description></long-description>
          <tag line="71" name="param" description="" type="string" variable="$queue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description="" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="71" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$queue</name>
          <default></default>
          <type/>
        </argument>
        <argument line="79">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="79">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="91" package="Default">
        <name>flusher</name>
        <full_name>flusher</full_name>
        <docblock line="84">
          <description>Register a queue flusher callback.</description>
          <long-description></long-description>
          <tag line="84" name="param" description="" type="string" variable="$queue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="84" name="param" description="" type="mixed" variable="$callback">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="84" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$queue</name>
          <default></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="102" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="96">
          <description>Clear all event listeners for a given event.</description>
          <long-description></long-description>
          <tag line="96" name="param" description="" type="string" variable="$event">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$event</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="122" package="Default">
        <name>first</name>
        <full_name>first</full_name>
        <docblock line="107">
          <description>Fire an event and return the first response.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Fire the "start" event
    $response = Event::first('start');

    // Fire the "start" event passing an array of parameters
    $response = Event::first('start', array('Laravel', 'Framework'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="107" name="param" description="" type="string" variable="$event">
            <type by_reference="false">string</type>
          </tag>
          <tag line="107" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="107" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="122">
          <name>$event</name>
          <default></default>
          <type/>
        </argument>
        <argument line="122">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="136" package="Default">
        <name>until</name>
        <full_name>until</full_name>
        <docblock line="127">
          <description>Fire an event and return the first response.</description>
          <long-description>&lt;p&gt;Execution will be halted after the first valid response is found.&lt;/p&gt;</long-description>
          <tag line="127" name="param" description="" type="string" variable="$event">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="127" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$event</name>
          <default></default>
          <type/>
        </argument>
        <argument line="136">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="147" package="Default">
        <name>flush</name>
        <full_name>flush</full_name>
        <docblock line="141">
          <description>Flush an event queue, firing the flusher for each payload.</description>
          <long-description></long-description>
          <tag line="141" name="param" description="" type="string" variable="$queue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="141" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$queue</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="184" package="Default">
        <name>fire</name>
        <full_name>fire</full_name>
        <docblock line="165">
          <description>Fire an event so that all listeners are called.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Fire the "start" event
    $responses = Event::fire('start');

    // Fire the "start" event passing an array of parameters
    $responses = Event::fire('start', array('Laravel', 'Framework'));

    // Fire multiple events with the same parameters
    $responses = Event::fire(array('start', 'loading'), $parameters);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="165" name="param" description="" type="string|array" variable="$events">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="165" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="165" name="param" description="" type="bool" variable="$halt">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="165" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="184">
          <name>$events</name>
          <default></default>
          <type/>
        </argument>
        <argument line="184">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="184">
          <name>$halt</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/event.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Event</error>
    </parse_markers>
  </file>
  <file path="laravel/input.php" hash="c09fc99361330d07063f5470c9a8866c" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Input</name>
      <full_name>\Laravel\Input</full_name>
      <constant namespace="Laravel" line="17" package="Default">
        <name>old_input</name>
        <full_name>old_input</full_name>
        <value>'laravel_old_input'</value>
        <docblock line="12">
          <description>The key used to store old input in the session.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$json</name>
        <default></default>
        <docblock line="5">
          <description>The JSON payload for applications using Backbone.js or similar.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="24" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="19">
          <description>Get all of the input data for the request, including files.</description>
          <long-description></long-description>
          <tag line="19" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="41" package="Default">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="33">
          <description>Determine if the input data contains an item.</description>
          <long-description>&lt;p&gt;If the input item is an empty string, false will be returned.&lt;/p&gt;</long-description>
          <tag line="33" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="33" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="63" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="46">
          <description>Get an item from the input data.</description>
          <long-description>&lt;p&gt;This method is used for all request verbs (GET, POST, PUT, and DELETE).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Get the "email" item from the input array
    $email = Input::get('email');

    // Return a default value if the specified item doesn't exist
    $email = Input::get('name', 'Taylor');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="46" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="46" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="63">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="97" package="Default">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="82">
          <description>Get an item from the query string.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get the "email" item from the query string
    $email = Input::query('email');

    // Return a default value if the specified item doesn't exist
    $email = Input::query('name', 'Taylor');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="82" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="82" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="97">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="108" package="Default">
        <name>json</name>
        <full_name>json</full_name>
        <docblock line="102">
          <description>Get the JSON payload for the request.</description>
          <long-description></long-description>
          <tag line="102" name="param" description="" type="bool" variable="$as_array">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="102" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$as_array</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="129" package="Default">
        <name>only</name>
        <full_name>only</full_name>
        <docblock line="115">
          <description>Get a subset of the items from the input data.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get only the email from the input data
    $value = Input::only('email');

    // Get only the username and email from the input data
    $input = Input::only(array('username', 'email'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="115" name="param" description="" type="array" variable="$keys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="115" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="129">
          <name>$keys</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="148" package="Default">
        <name>except</name>
        <full_name>except</full_name>
        <docblock line="134">
          <description>Get all of the input data except for a specified array of items.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get all of the input data except for username
    $input = Input::except('username');

    // Get all of the input data except for username and email
    $input = Input::except(array('username', 'email'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="134" name="param" description="" type="array" variable="$keys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="134" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$keys</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="159" package="Default">
        <name>had</name>
        <full_name>had</full_name>
        <docblock line="153">
          <description>Determine if the old input data contains an item.</description>
          <long-description></long-description>
          <tag line="153" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="159">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="179" package="Default">
        <name>old</name>
        <full_name>old</full_name>
        <docblock line="164">
          <description>Get input data from the previous request.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get the "email" item from the old input
    $email = Input::old('email');

    // Return a default value if the specified item doesn't exist
    $email = Input::old('name', 'Taylor');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="164" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="164" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="164" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="179">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="196" package="Default">
        <name>file</name>
        <full_name>file</full_name>
        <docblock line="184">
          <description>Get an item from the uploaded file data.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get the array of information for the "picture" upload
    $picture = Input::file('picture');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="184" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="184" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="184" name="return" description="" type="\Laravel\UploadedFile">
            <type by_reference="false">\Laravel\UploadedFile</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="196">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="207" package="Default">
        <name>has_file</name>
        <full_name>has_file</full_name>
        <docblock line="201">
          <description>Determine if the uploaded data contains a file.</description>
          <long-description></long-description>
          <tag line="201" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="201" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="207">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="227" package="Default">
        <name>upload</name>
        <full_name>upload</full_name>
        <docblock line="212">
          <description>Move an uploaded file to permanent storage.</description>
          <long-description>&lt;p&gt;This method is simply a convenient wrapper around move_uploaded_file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Move the "picture" file to a new permanent location on disk
    Input::upload('picture', 'path/to/photos', 'picture.jpg');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="212" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="212" name="param" description="" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="212" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="212" name="return" description="" type="\Laravel\Symfony\Component\HttpFoundation\File\File">
            <type by_reference="false">\Laravel\Symfony\Component\HttpFoundation\File\File</type>
          </tag>
        </docblock>
        <argument line="227">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="227">
          <name>$directory</name>
          <default></default>
          <type/>
        </argument>
        <argument line="227">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="252" package="Default">
        <name>flash</name>
        <full_name>flash</full_name>
        <docblock line="234">
          <description>Flash the input for the current request to the session.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Flash all of the input to the session
    Input::flash();

    // Flash only a few input items to the session
    Input::flash('only', array('name', 'email'));

    // Flash all but a few input items to the session
    Input::flash('except', array('password', 'social_number'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="234" name="param" description="" type="string" variable="$filter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="234" name="param" description="" type="array" variable="$keys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="234" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="252">
          <name>$filter</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="252">
          <name>$keys</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="264" package="Default">
        <name>flush</name>
        <full_name>flush</full_name>
        <docblock line="259">
          <description>Flush all of the old input from the session.</description>
          <long-description></long-description>
          <tag line="259" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="275" package="Default">
        <name>merge</name>
        <full_name>merge</full_name>
        <docblock line="269">
          <description>Merge new input into the current request's input array.</description>
          <long-description></long-description>
          <tag line="269" name="param" description="" type="array" variable="$input">
            <type by_reference="false">array</type>
          </tag>
          <tag line="269" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="275">
          <name>$input</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="286" package="Default">
        <name>replace</name>
        <full_name>replace</full_name>
        <docblock line="280">
          <description>Replace the input for the current request.</description>
          <long-description></long-description>
          <tag line="280" name="param" description="" type="array" variable="$input">
            <type by_reference="false">array</type>
          </tag>
          <tag line="280" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="286">
          <name>$input</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="295" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="291">
          <description>Clear the input for the current request.</description>
          <long-description></long-description>
          <tag line="291" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/input.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Input</error>
    </parse_markers>
  </file>
  <file path="laravel/database/query/join.php" hash="6af405050eb3f901ec9616e62d018366" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Query" line="3" package="Default">
      <extends/>
      <name>Join</name>
      <full_name>\Laravel\Database\Query\Join</full_name>
      <property final="false" static="false" visibility="public" line="10" namespace="Laravel\Database\Query" package="Default">
        <name>$type</name>
        <default></default>
        <docblock line="5">
          <description>The type of join being performed.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="17" namespace="Laravel\Database\Query" package="Default">
        <name>$table</name>
        <default></default>
        <docblock line="12">
          <description>The table the join clause is joining to.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="Laravel\Database\Query" package="Default">
        <name>$clauses</name>
        <default>array()</default>
        <docblock line="19">
          <description>The ON clauses for the join.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Query" line="33" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="26">
          <description>Create a new query join instance.</description>
          <long-description></long-description>
          <tag line="26" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="33">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Query" line="48" package="Default">
        <name>on</name>
        <full_name>on</full_name>
        <docblock line="39">
          <description>Add an ON clause to the join.</description>
          <long-description></long-description>
          <tag line="39" name="param" description="" type="string" variable="$column1">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="param" description="" type="string" variable="$operator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="param" description="" type="string" variable="$column2">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="param" description="" type="string" variable="$connector">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="return" description="" type="\Laravel\Database\Query\Join">
            <type by_reference="false">\Laravel\Database\Query\Join</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$column1</name>
          <default></default>
          <type/>
        </argument>
        <argument line="48">
          <name>$operator</name>
          <default></default>
          <type/>
        </argument>
        <argument line="48">
          <name>$column2</name>
          <default></default>
          <type/>
        </argument>
        <argument line="48">
          <name>$connector</name>
          <default>'AND'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Query" line="63" package="Default">
        <name>or_on</name>
        <full_name>or_on</full_name>
        <docblock line="55">
          <description>Add an OR ON clause to the join.</description>
          <long-description></long-description>
          <tag line="55" name="param" description="" type="string" variable="$column1">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="param" description="" type="string" variable="$operator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="param" description="" type="string" variable="$column2">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="return" description="" type="\Laravel\Database\Query\Join">
            <type by_reference="false">\Laravel\Database\Query\Join</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$column1</name>
          <default></default>
          <type/>
        </argument>
        <argument line="63">
          <name>$operator</name>
          <default></default>
          <type/>
        </argument>
        <argument line="63">
          <name>$column2</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/query/join.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Database\Query\Join</error>
    </parse_markers>
  </file>
  <file path="laravel/database/query/grammars/sqlserver.php" hash="6ceca936d80b396d218723b3d5bdbce9" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Query\Grammars" line="5" package="Default">
      <extends>\Laravel\Database\Query\Grammars\Grammar</extends>
      <name>SQLServer</name>
      <full_name>\Laravel\Database\Query\Grammars\SQLServer</full_name>
      <property final="false" static="false" visibility="protected" line="12" namespace="Laravel\Database\Query\Grammars" package="Default">
        <name>$wrapper</name>
        <default>'[%s]'</default>
        <docblock line="7">
          <description>The keyword identifier for the database system.</description>
          <long-description></long-description>
          <tag line="7" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="19" namespace="Laravel\Database\Query\Grammars" package="Default">
        <name>$datetime</name>
        <default>'Y-m-d H:i:s.000'</default>
        <docblock line="14">
          <description>The format for properly saving a DateTime.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Query\Grammars" line="27" package="Default">
        <name>select</name>
        <full_name>select</full_name>
        <docblock line="21">
          <description>Compile a SQL SELECT statement from a Query instance.</description>
          <long-description></long-description>
          <tag line="21" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="21" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="51" package="Default">
        <name>selects</name>
        <full_name>selects</full_name>
        <docblock line="45">
          <description>Compile the SELECT clause for a query.</description>
          <long-description></long-description>
          <tag line="45" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="45" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="75" package="Default">
        <name>ansi_offset</name>
        <full_name>ansi_offset</full_name>
        <docblock line="68">
          <description>Generate the ANSI standard SQL for an offset clause.</description>
          <long-description></long-description>
          <tag line="68" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="68" name="param" description="" type="array" variable="$components">
            <type by_reference="false">array</type>
          </tag>
          <tag line="68" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
        <argument line="75">
          <name>$components</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="124" package="Default">
        <name>limit</name>
        <full_name>limit</full_name>
        <docblock line="118">
          <description>Compile the LIMIT clause for a query.</description>
          <long-description></long-description>
          <tag line="118" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="118" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="135" package="Default">
        <name>offset</name>
        <full_name>offset</full_name>
        <docblock line="129">
          <description>Compile the OFFSET clause for a query.</description>
          <long-description></long-description>
          <tag line="129" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="129" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="135">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/query/grammars/sqlserver.php</error>
      <error line="5" code="50000">No DocBlock was found for \Laravel\Database\Query\Grammars\SQLServer</error>
    </parse_markers>
  </file>
  <file path="laravel/database/query/grammars/postgres.php" hash="8fc7395ff9b4eb37d28577ab1616fb7a" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Query\Grammars" line="5" package="Default">
      <extends>\Laravel\Database\Query\Grammars\Grammar</extends>
      <name>Postgres</name>
      <full_name>\Laravel\Database\Query\Grammars\Postgres</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Query\Grammars" line="15" package="Default">
        <name>insert_get_id</name>
        <full_name>insert_get_id</full_name>
        <docblock line="7">
          <description>Compile a SQL INSERT and get ID statement from a Query instance.</description>
          <long-description></long-description>
          <tag line="7" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="7" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="7" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="7" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="15">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
        <argument line="15">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
        <argument line="15">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/query/grammars/postgres.php</error>
      <error line="5" code="50000">No DocBlock was found for \Laravel\Database\Query\Grammars\Postgres</error>
    </parse_markers>
  </file>
  <file path="laravel/database/query/grammars/sqlite.php" hash="8c50aa9355ebdcc2a316f95ae438aa6d" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Query\Grammars" line="5" package="Default">
      <extends>\Laravel\Database\Query\Grammars\Grammar</extends>
      <name>SQLite</name>
      <full_name>\Laravel\Database\Query\Grammars\SQLite</full_name>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="14" package="Default">
        <name>orderings</name>
        <full_name>orderings</full_name>
        <docblock line="8">
          <description>Compile the ORDER BY clause for a query.</description>
          <long-description></long-description>
          <tag line="8" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="8" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="14">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Query\Grammars" line="33" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="24">
          <description>Compile a SQL INSERT statement from a Query instance.</description>
          <long-description>&lt;p&gt;This method handles the compilation of single row inserts and batch inserts.&lt;/p&gt;</long-description>
          <tag line="24" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="24" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="24" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
        <argument line="33">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/query/grammars/sqlite.php</error>
      <error line="5" code="50000">No DocBlock was found for \Laravel\Database\Query\Grammars\SQLite</error>
    </parse_markers>
  </file>
  <file path="laravel/database/query/grammars/grammar.php" hash="96b591452ddb5599dcb7c881d3c4a8f0" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Query\Grammars" line="6" package="Default">
      <extends>\Laravel\Database\Grammar</extends>
      <name>Grammar</name>
      <full_name>\Laravel\Database\Query\Grammars\Grammar</full_name>
      <property final="false" static="false" visibility="public" line="13" namespace="Laravel\Database\Query\Grammars" package="Default">
        <name>$datetime</name>
        <default>'Y-m-d H:i:s'</default>
        <docblock line="8">
          <description>The format for properly saving a DateTime.</description>
          <long-description></long-description>
          <tag line="8" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="20" namespace="Laravel\Database\Query\Grammars" package="Default">
        <name>$components</name>
        <default>array('aggregate', 'selects', 'from', 'joins', 'wheres', 'groupings', 'havings', 'orderings', 'limit', 'offset')</default>
        <docblock line="15">
          <description>All of the query components in the order they should be built.</description>
          <long-description></long-description>
          <tag line="15" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Query\Grammars" line="31" package="Default">
        <name>select</name>
        <full_name>select</full_name>
        <docblock line="25">
          <description>Compile a SQL SELECT statement from a Query instance.</description>
          <long-description></long-description>
          <tag line="25" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="25" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="42" package="Default">
        <name>components</name>
        <full_name>components</full_name>
        <docblock line="36">
          <description>Generate the SQL for every component of the query.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="36" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="64" package="Default">
        <name>concatenate</name>
        <full_name>concatenate</full_name>
        <docblock line="58">
          <description>Concatenate an array of SQL segments, removing those that are empty.</description>
          <long-description></long-description>
          <tag line="58" name="param" description="" type="array" variable="$components">
            <type by_reference="false">array</type>
          </tag>
          <tag line="58" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$components</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="78" package="Default">
        <name>selects</name>
        <full_name>selects</full_name>
        <docblock line="72">
          <description>Compile the SELECT clause for a query.</description>
          <long-description></long-description>
          <tag line="72" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="72" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="93" package="Default">
        <name>aggregate</name>
        <full_name>aggregate</full_name>
        <docblock line="87">
          <description>Compile an aggregating SELECT clause for a query.</description>
          <long-description></long-description>
          <tag line="87" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="87" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="114" package="Default">
        <name>from</name>
        <full_name>from</full_name>
        <docblock line="108">
          <description>Compile the FROM clause for a query.</description>
          <long-description></long-description>
          <tag line="108" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="108" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="125" package="Default">
        <name>joins</name>
        <full_name>joins</full_name>
        <docblock line="119">
          <description>Compile the JOIN clauses for a query.</description>
          <long-description></long-description>
          <tag line="119" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="119" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="174" package="Default">
        <name>wheres</name>
        <full_name>wheres</full_name>
        <docblock line="168">
          <description>Compile the WHERE clause for a query.</description>
          <long-description></long-description>
          <tag line="168" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="168" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="201" package="Default">
        <name>where_nested</name>
        <full_name>where_nested</full_name>
        <docblock line="195">
          <description>Compile a nested WHERE clause.</description>
          <long-description></long-description>
          <tag line="195" name="param" description="" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="195" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="212" package="Default">
        <name>where</name>
        <full_name>where</full_name>
        <docblock line="206">
          <description>Compile a simple WHERE clause.</description>
          <long-description></long-description>
          <tag line="206" name="param" description="" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="206" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="225" package="Default">
        <name>where_in</name>
        <full_name>where_in</full_name>
        <docblock line="219">
          <description>Compile a WHERE IN clause.</description>
          <long-description></long-description>
          <tag line="219" name="param" description="" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="219" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="225">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="238" package="Default">
        <name>where_not_in</name>
        <full_name>where_not_in</full_name>
        <docblock line="232">
          <description>Compile a WHERE NOT IN clause.</description>
          <long-description></long-description>
          <tag line="232" name="param" description="" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="232" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="238">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="251" package="Default">
        <name>where_between</name>
        <full_name>where_between</full_name>
        <docblock line="245">
          <description>Compile a WHERE BETWEEN clause</description>
          <long-description></long-description>
          <tag line="245" name="param" description="" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="245" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="264" package="Default">
        <name>where_not_between</name>
        <full_name>where_not_between</full_name>
        <docblock line="259">
          <description>Compile a WHERE NOT BETWEEN clause</description>
          <long-description></long-description>
          <tag line="259" name="param" description="" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="259" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="264">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="278" package="Default">
        <name>where_null</name>
        <full_name>where_null</full_name>
        <docblock line="272">
          <description>Compile a WHERE NULL clause.</description>
          <long-description></long-description>
          <tag line="272" name="param" description="" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="272" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="278">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="289" package="Default">
        <name>where_not_null</name>
        <full_name>where_not_null</full_name>
        <docblock line="283">
          <description>Compile a WHERE NULL clause.</description>
          <long-description></long-description>
          <tag line="283" name="param" description="" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="283" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="289">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="300" package="Default">
        <name>where_raw</name>
        <full_name>where_raw</full_name>
        <docblock line="294">
          <description>Compile a raw WHERE clause.</description>
          <long-description></long-description>
          <tag line="294" name="param" description="" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="294" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="300">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="311" package="Default">
        <name>groupings</name>
        <full_name>groupings</full_name>
        <docblock line="305">
          <description>Compile the GROUP BY clause for a query.</description>
          <long-description></long-description>
          <tag line="305" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="305" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="311">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="322" package="Default">
        <name>havings</name>
        <full_name>havings</full_name>
        <docblock line="316">
          <description>Compile the HAVING clause for a query.</description>
          <long-description></long-description>
          <tag line="316" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="316" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="322">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="340" package="Default">
        <name>orderings</name>
        <full_name>orderings</full_name>
        <docblock line="334">
          <description>Compile the ORDER BY clause for a query.</description>
          <long-description></long-description>
          <tag line="334" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="334" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="340">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="356" package="Default">
        <name>limit</name>
        <full_name>limit</full_name>
        <docblock line="350">
          <description>Compile the LIMIT clause for a query.</description>
          <long-description></long-description>
          <tag line="350" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="350" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="356">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Query\Grammars" line="367" package="Default">
        <name>offset</name>
        <full_name>offset</full_name>
        <docblock line="361">
          <description>Compile the OFFSET clause for a query.</description>
          <long-description></long-description>
          <tag line="361" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="361" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="367">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Query\Grammars" line="381" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="372">
          <description>Compile a SQL INSERT statement from a Query instance.</description>
          <long-description>&lt;p&gt;This method handles the compilation of single row inserts and batch inserts.&lt;/p&gt;</long-description>
          <tag line="372" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="372" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="372" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="381">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
        <argument line="381">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Query\Grammars" line="413" package="Default">
        <name>insert_get_id</name>
        <full_name>insert_get_id</full_name>
        <docblock line="405">
          <description>Compile a SQL INSERT and get ID statement from a Query instance.</description>
          <long-description></long-description>
          <tag line="405" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="405" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="405" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="405" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="413">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
        <argument line="413">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
        <argument line="413">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Query\Grammars" line="425" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="418">
          <description>Compile a SQL UPDATE statement from a Query instance.</description>
          <long-description></long-description>
          <tag line="418" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="418" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="418" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="425">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
        <argument line="425">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Query\Grammars" line="451" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="445">
          <description>Compile a SQL DELETE statement from a Query instance.</description>
          <long-description></long-description>
          <tag line="445" name="param" description="" type="\Laravel\Database\Query" variable="$query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
          <tag line="445" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="451">
          <name>$query</name>
          <default></default>
          <type>\Laravel\Database\Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Query\Grammars" line="465" package="Default">
        <name>shortcut</name>
        <full_name>shortcut</full_name>
        <docblock line="458">
          <description>Transform an SQL short-cuts into real SQL for PDO.</description>
          <long-description></long-description>
          <tag line="458" name="param" description="" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="458" name="param" description="" type="array" variable="$bindings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="458" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="465">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
        <argument line="465">
          <name>$bindings</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/query/grammars/grammar.php</error>
      <error line="6" code="50000">No DocBlock was found for \Laravel\Database\Query\Grammars\Grammar</error>
    </parse_markers>
  </file>
  <file path="laravel/database/query/grammars/mysql.php" hash="4f617bbd9012917e430bca141d8c66d1" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Query\Grammars" line="3" package="Default">
      <extends>\Laravel\Database\Query\Grammars\Grammar</extends>
      <name>MySQL</name>
      <full_name>\Laravel\Database\Query\Grammars\MySQL</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel\Database\Query\Grammars" package="Default">
        <name>$wrapper</name>
        <default>'`%s`'</default>
        <docblock line="5">
          <description>The keyword identifier for the database system.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/query/grammars/mysql.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Database\Query\Grammars\MySQL</error>
    </parse_markers>
  </file>
  <file path="laravel/database/schema/table.php" hash="683d3f036c8347c74111cc0947373933" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Schema" line="5" package="Default">
      <extends/>
      <name>Table</name>
      <full_name>\Laravel\Database\Schema\Table</full_name>
      <property final="false" static="false" visibility="public" line="12" namespace="Laravel\Database\Schema" package="Default">
        <name>$name</name>
        <default></default>
        <docblock line="7">
          <description>The database table name.</description>
          <long-description></long-description>
          <tag line="7" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="19" namespace="Laravel\Database\Schema" package="Default">
        <name>$connection</name>
        <default></default>
        <docblock line="14">
          <description>The database connection that should be used.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="26" namespace="Laravel\Database\Schema" package="Default">
        <name>$engine</name>
        <default></default>
        <docblock line="21">
          <description>The engine that should be used for the table.</description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="Laravel\Database\Schema" package="Default">
        <name>$columns</name>
        <default>array()</default>
        <docblock line="28">
          <description>The columns that should be added to the table.</description>
          <long-description></long-description>
          <tag line="28" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="Laravel\Database\Schema" package="Default">
        <name>$commands</name>
        <default>array()</default>
        <docblock line="35">
          <description>The commands that should be executed on the table.</description>
          <long-description></long-description>
          <tag line="35" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="48" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="42">
          <description>Create a new schema table instance.</description>
          <long-description></long-description>
          <tag line="42" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="58" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="53">
          <description>Indicate that the table should be created.</description>
          <long-description></long-description>
          <tag line="53" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="70" package="Default">
        <name>primary</name>
        <full_name>primary</full_name>
        <docblock line="63">
          <description>Create a new primary key on the table.</description>
          <long-description></long-description>
          <tag line="63" name="param" description="" type="string|array" variable="$columns">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="63" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$columns</name>
          <default></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="82" package="Default">
        <name>unique</name>
        <full_name>unique</full_name>
        <docblock line="75">
          <description>Create a new unique index on the table.</description>
          <long-description></long-description>
          <tag line="75" name="param" description="" type="string|array" variable="$columns">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="75" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="75" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$columns</name>
          <default></default>
          <type/>
        </argument>
        <argument line="82">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="94" package="Default">
        <name>fulltext</name>
        <full_name>fulltext</full_name>
        <docblock line="87">
          <description>Create a new full-text index on the table.</description>
          <long-description></long-description>
          <tag line="87" name="param" description="" type="string|array" variable="$columns">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="87" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$columns</name>
          <default></default>
          <type/>
        </argument>
        <argument line="94">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="106" package="Default">
        <name>index</name>
        <full_name>index</full_name>
        <docblock line="99">
          <description>Create a new index on the table.</description>
          <long-description></long-description>
          <tag line="99" name="param" description="" type="string|array" variable="$columns">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="99" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$columns</name>
          <default></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="118" package="Default">
        <name>foreign</name>
        <full_name>foreign</full_name>
        <docblock line="111">
          <description>Add a foreign key constraint to the table.</description>
          <long-description></long-description>
          <tag line="111" name="param" description="" type="string|array" variable="$columns">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="111" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$columns</name>
          <default></default>
          <type/>
        </argument>
        <argument line="118">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="131" package="Default">
        <name>key</name>
        <full_name>key</full_name>
        <docblock line="123">
          <description>Create a command for creating any index.</description>
          <long-description></long-description>
          <tag line="123" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="123" name="param" description="" type="string|array" variable="$columns">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="123" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="123" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="131">
          <name>$columns</name>
          <default></default>
          <type/>
        </argument>
        <argument line="131">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="154" package="Default">
        <name>rename</name>
        <full_name>rename</full_name>
        <docblock line="148">
          <description>Rename the database table.</description>
          <long-description></long-description>
          <tag line="148" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="148" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="164" package="Default">
        <name>drop</name>
        <full_name>drop</full_name>
        <docblock line="159">
          <description>Drop the database table.</description>
          <long-description></long-description>
          <tag line="159" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="175" package="Default">
        <name>drop_column</name>
        <full_name>drop_column</full_name>
        <docblock line="169">
          <description>Drop a column from the table.</description>
          <long-description></long-description>
          <tag line="169" name="param" description="" type="string|array" variable="$columns">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="169" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$columns</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="186" package="Default">
        <name>drop_primary</name>
        <full_name>drop_primary</full_name>
        <docblock line="180">
          <description>Drop a primary key from the table.</description>
          <long-description></long-description>
          <tag line="180" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="180" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="197" package="Default">
        <name>drop_unique</name>
        <full_name>drop_unique</full_name>
        <docblock line="191">
          <description>Drop a unique index from the table.</description>
          <long-description></long-description>
          <tag line="191" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="191" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="197">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="208" package="Default">
        <name>drop_fulltext</name>
        <full_name>drop_fulltext</full_name>
        <docblock line="202">
          <description>Drop a full-text index from the table.</description>
          <long-description></long-description>
          <tag line="202" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="202" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="219" package="Default">
        <name>drop_index</name>
        <full_name>drop_index</full_name>
        <docblock line="213">
          <description>Drop an index from the table.</description>
          <long-description></long-description>
          <tag line="213" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="213" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="219">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="230" package="Default">
        <name>drop_foreign</name>
        <full_name>drop_foreign</full_name>
        <docblock line="224">
          <description>Drop a foreign key constraint from the table.</description>
          <long-description></long-description>
          <tag line="224" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="224" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="230">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema" line="242" package="Default">
        <name>drop_key</name>
        <full_name>drop_key</full_name>
        <docblock line="235">
          <description>Create a command to drop any type of index.</description>
          <long-description></long-description>
          <tag line="235" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="235" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="235" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="242">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="242">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="253" package="Default">
        <name>increments</name>
        <full_name>increments</full_name>
        <docblock line="247">
          <description>Add an auto-incrementing integer to the table.</description>
          <long-description></long-description>
          <tag line="247" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="247" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="253">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="265" package="Default">
        <name>string</name>
        <full_name>string</full_name>
        <docblock line="258">
          <description>Add a string column to the table.</description>
          <long-description></long-description>
          <tag line="258" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="258" name="param" description="" type="int" variable="$length">
            <type by_reference="false">int</type>
          </tag>
          <tag line="258" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="265">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="265">
          <name>$length</name>
          <default>200</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="277" package="Default">
        <name>integer</name>
        <full_name>integer</full_name>
        <docblock line="270">
          <description>Add an integer column to the table.</description>
          <long-description></long-description>
          <tag line="270" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="270" name="param" description="" type="bool" variable="$increment">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="270" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="277">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="277">
          <name>$increment</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="288" package="Default">
        <name>float</name>
        <full_name>float</full_name>
        <docblock line="282">
          <description>Add a float column to the table.</description>
          <long-description></long-description>
          <tag line="282" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="282" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="288">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="301" package="Default">
        <name>decimal</name>
        <full_name>decimal</full_name>
        <docblock line="293">
          <description>Add a decimal column to the table.</description>
          <long-description></long-description>
          <tag line="293" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="293" name="param" description="" type="int" variable="$precision">
            <type by_reference="false">int</type>
          </tag>
          <tag line="293" name="param" description="" type="int" variable="$scale">
            <type by_reference="false">int</type>
          </tag>
          <tag line="293" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="301">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="301">
          <name>$precision</name>
          <default></default>
          <type/>
        </argument>
        <argument line="301">
          <name>$scale</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="312" package="Default">
        <name>boolean</name>
        <full_name>boolean</full_name>
        <docblock line="306">
          <description>Add a boolean column to the table.</description>
          <long-description></long-description>
          <tag line="306" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="306" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="312">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="322" package="Default">
        <name>timestamps</name>
        <full_name>timestamps</full_name>
        <docblock line="317">
          <description>Create date-time columns for creation and update timestamps.</description>
          <long-description></long-description>
          <tag line="317" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="335" package="Default">
        <name>date</name>
        <full_name>date</full_name>
        <docblock line="329">
          <description>Add a date-time column to the table.</description>
          <long-description></long-description>
          <tag line="329" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="329" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="335">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="346" package="Default">
        <name>timestamp</name>
        <full_name>timestamp</full_name>
        <docblock line="340">
          <description>Add a timestamp column to the table.</description>
          <long-description></long-description>
          <tag line="340" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="340" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="346">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="357" package="Default">
        <name>text</name>
        <full_name>text</full_name>
        <docblock line="351">
          <description>Add a text column to the table.</description>
          <long-description></long-description>
          <tag line="351" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="351" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="357">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="368" package="Default">
        <name>blob</name>
        <full_name>blob</full_name>
        <docblock line="362">
          <description>Add a blob column to the table.</description>
          <long-description></long-description>
          <tag line="362" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="362" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="368">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="379" package="Default">
        <name>on</name>
        <full_name>on</full_name>
        <docblock line="373">
          <description>Set the database connection for the table operation.</description>
          <long-description></long-description>
          <tag line="373" name="param" description="" type="string" variable="$connection">
            <type by_reference="false">string</type>
          </tag>
          <tag line="373" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="379">
          <name>$connection</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema" line="389" package="Default">
        <name>creating</name>
        <full_name>creating</full_name>
        <docblock line="384">
          <description>Determine if the schema table has a creation command.</description>
          <long-description></long-description>
          <tag line="384" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema" line="404" package="Default">
        <name>command</name>
        <full_name>command</full_name>
        <docblock line="397">
          <description>Create a new fluent command instance.</description>
          <long-description></long-description>
          <tag line="397" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="397" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="397" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="404">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="404">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema" line="418" package="Default">
        <name>column</name>
        <full_name>column</full_name>
        <docblock line="411">
          <description>Create a new fluent column instance.</description>
          <long-description></long-description>
          <tag line="411" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="411" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="411" name="return" description="" type="\Laravel\Fluent">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
        </docblock>
        <argument line="418">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="418">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/schema/table.php</error>
      <error line="5" code="50000">No DocBlock was found for \Laravel\Database\Schema\Table</error>
    </parse_markers>
  </file>
  <file path="laravel/database/schema/grammars/sqlserver.php" hash="aca95d6d0f8ca99b1bd0fc0a4de07506" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Schema\Grammars" line="6" package="Default">
      <extends>\Laravel\Database\Schema\Grammars\Grammar</extends>
      <name>SQLServer</name>
      <full_name>\Laravel\Database\Schema\Grammars\SQLServer</full_name>
      <property final="false" static="false" visibility="public" line="13" namespace="Laravel\Database\Schema\Grammars" package="Default">
        <name>$wrapper</name>
        <default>'[%s]'</default>
        <docblock line="8">
          <description>The keyword identifier for the database system.</description>
          <long-description></long-description>
          <tag line="8" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="22" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="15">
          <description>Generate the SQL statements for a table creation command.</description>
          <long-description></long-description>
          <tag line="15" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="15" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="15" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="22">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="41" package="Default">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="34">
          <description>Generate the SQL statements for a table modification command.</description>
          <long-description></long-description>
          <tag line="34" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="34" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="34" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="41">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="63" package="Default">
        <name>columns</name>
        <full_name>columns</full_name>
        <docblock line="57">
          <description>Create the individual column definitions for the table.</description>
          <long-description></long-description>
          <tag line="57" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="57" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="95" package="Default">
        <name>nullable</name>
        <full_name>nullable</full_name>
        <docblock line="88">
          <description>Get the SQL syntax for indicating if a column is nullable.</description>
          <long-description></long-description>
          <tag line="88" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="88" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="88" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="95">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="107" package="Default">
        <name>defaults</name>
        <full_name>defaults</full_name>
        <docblock line="100">
          <description>Get the SQL syntax for specifying a default value on a column.</description>
          <long-description></long-description>
          <tag line="100" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="100" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="100" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="107">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="122" package="Default">
        <name>incrementer</name>
        <full_name>incrementer</full_name>
        <docblock line="115">
          <description>Get the SQL syntax for defining an auto-incrementing column.</description>
          <long-description></long-description>
          <tag line="115" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="115" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="115" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="122">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="122">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="137" package="Default">
        <name>primary</name>
        <full_name>primary</full_name>
        <docblock line="130">
          <description>Generate the SQL statement for creating a primary key.</description>
          <long-description></long-description>
          <tag line="130" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="130" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="130" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="137">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="153" package="Default">
        <name>unique</name>
        <full_name>unique</full_name>
        <docblock line="146">
          <description>Generate the SQL statement for creating a unique index.</description>
          <long-description></long-description>
          <tag line="146" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="146" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="146" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="153">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="153">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="165" package="Default">
        <name>fulltext</name>
        <full_name>fulltext</full_name>
        <docblock line="158">
          <description>Generate the SQL statement for creating a full-text index.</description>
          <long-description></long-description>
          <tag line="158" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="158" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="158" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="165">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="193" package="Default">
        <name>index</name>
        <full_name>index</full_name>
        <docblock line="186">
          <description>Generate the SQL statement for creating a regular index.</description>
          <long-description></long-description>
          <tag line="186" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="186" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="186" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="193">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="206" package="Default">
        <name>key</name>
        <full_name>key</full_name>
        <docblock line="198">
          <description>Generate the SQL statement for creating a new index.</description>
          <long-description></long-description>
          <tag line="198" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="198" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="198" name="param" description="" type="bool" variable="$unique">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="198" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="206">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="206">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
        <argument line="206">
          <name>$unique</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="222" package="Default">
        <name>rename</name>
        <full_name>rename</full_name>
        <docblock line="215">
          <description>Generate the SQL statement for a rename table command.</description>
          <long-description></long-description>
          <tag line="215" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="215" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="215" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="222">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="222">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="234" package="Default">
        <name>drop_column</name>
        <full_name>drop_column</full_name>
        <docblock line="227">
          <description>Generate the SQL statement for a drop column command.</description>
          <long-description></long-description>
          <tag line="227" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="227" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="227" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="234">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="257" package="Default">
        <name>drop_primary</name>
        <full_name>drop_primary</full_name>
        <docblock line="250">
          <description>Generate the SQL statement for a drop primary key command.</description>
          <long-description></long-description>
          <tag line="250" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="250" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="250" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="257">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="257">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="269" package="Default">
        <name>drop_unique</name>
        <full_name>drop_unique</full_name>
        <docblock line="262">
          <description>Generate the SQL statement for a drop unique key command.</description>
          <long-description></long-description>
          <tag line="262" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="262" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="262" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="269">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="269">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="281" package="Default">
        <name>drop_fulltext</name>
        <full_name>drop_fulltext</full_name>
        <docblock line="274">
          <description>Generate the SQL statement for a drop full-text key command.</description>
          <long-description></long-description>
          <tag line="274" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="274" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="274" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="281">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="281">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="297" package="Default">
        <name>drop_index</name>
        <full_name>drop_index</full_name>
        <docblock line="290">
          <description>Generate the SQL statement for a drop index command.</description>
          <long-description></long-description>
          <tag line="290" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="290" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="290" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="297">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="297">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="309" package="Default">
        <name>drop_key</name>
        <full_name>drop_key</full_name>
        <docblock line="302">
          <description>Generate the SQL statement for a drop key command.</description>
          <long-description></long-description>
          <tag line="302" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="302" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="302" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="309">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="309">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="321" package="Default">
        <name>drop_foreign</name>
        <full_name>drop_foreign</full_name>
        <docblock line="314">
          <description>Drop a foreign key constraint from the table.</description>
          <long-description></long-description>
          <tag line="314" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="314" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="314" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="321">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="321">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="332" package="Default">
        <name>type_string</name>
        <full_name>type_string</full_name>
        <docblock line="326">
          <description>Generate the data-type definition for a string.</description>
          <long-description></long-description>
          <tag line="326" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="326" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="332">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="343" package="Default">
        <name>type_integer</name>
        <full_name>type_integer</full_name>
        <docblock line="337">
          <description>Generate the data-type definition for an integer.</description>
          <long-description></long-description>
          <tag line="337" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="337" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="343">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="354" package="Default">
        <name>type_float</name>
        <full_name>type_float</full_name>
        <docblock line="348">
          <description>Generate the data-type definition for an integer.</description>
          <long-description></long-description>
          <tag line="348" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="348" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="354">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="365" package="Default">
        <name>type_decimal</name>
        <full_name>type_decimal</full_name>
        <docblock line="359">
          <description>Generate the data-type definition for a decimal.</description>
          <long-description></long-description>
          <tag line="359" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="359" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="365">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="376" package="Default">
        <name>type_boolean</name>
        <full_name>type_boolean</full_name>
        <docblock line="370">
          <description>Generate the data-type definition for a boolean.</description>
          <long-description></long-description>
          <tag line="370" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="370" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="376">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="387" package="Default">
        <name>type_date</name>
        <full_name>type_date</full_name>
        <docblock line="381">
          <description>Generate the data-type definition for a date.</description>
          <long-description></long-description>
          <tag line="381" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="381" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="387">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="398" package="Default">
        <name>type_timestamp</name>
        <full_name>type_timestamp</full_name>
        <docblock line="392">
          <description>Generate the data-type definition for a timestamp.</description>
          <long-description></long-description>
          <tag line="392" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="392" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="398">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="409" package="Default">
        <name>type_text</name>
        <full_name>type_text</full_name>
        <docblock line="403">
          <description>Generate the data-type definition for a text column.</description>
          <long-description></long-description>
          <tag line="403" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="403" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="409">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="420" package="Default">
        <name>type_blob</name>
        <full_name>type_blob</full_name>
        <docblock line="414">
          <description>Generate the data-type definition for a blob.</description>
          <long-description></long-description>
          <tag line="414" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="414" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="420">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/schema/grammars/sqlserver.php</error>
      <error line="6" code="50000">No DocBlock was found for \Laravel\Database\Schema\Grammars\SQLServer</error>
    </parse_markers>
  </file>
  <file path="laravel/database/schema/grammars/postgres.php" hash="03b699f322c052feea3ee2da348ec68a" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Schema\Grammars" line="6" package="Default">
      <extends>\Laravel\Database\Schema\Grammars\Grammar</extends>
      <name>Postgres</name>
      <full_name>\Laravel\Database\Schema\Grammars\Postgres</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="15" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="8">
          <description>Generate the SQL statements for a table creation command.</description>
          <long-description></long-description>
          <tag line="8" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="8" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="8" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="15">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="15">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="34" package="Default">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="27">
          <description>Generate the SQL statements for a table modification command.</description>
          <long-description></long-description>
          <tag line="27" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="27" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="27" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="34">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="56" package="Default">
        <name>columns</name>
        <full_name>columns</full_name>
        <docblock line="50">
          <description>Create the individual column definitions for the table.</description>
          <long-description></long-description>
          <tag line="50" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="50" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="88" package="Default">
        <name>nullable</name>
        <full_name>nullable</full_name>
        <docblock line="81">
          <description>Get the SQL syntax for indicating if a column is nullable.</description>
          <long-description></long-description>
          <tag line="81" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="81" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="81" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="88">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="100" package="Default">
        <name>defaults</name>
        <full_name>defaults</full_name>
        <docblock line="93">
          <description>Get the SQL syntax for specifying a default value on a column.</description>
          <long-description></long-description>
          <tag line="93" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="93" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="93" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="100">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="115" package="Default">
        <name>incrementer</name>
        <full_name>incrementer</full_name>
        <docblock line="108">
          <description>Get the SQL syntax for defining an auto-incrementing column.</description>
          <long-description></long-description>
          <tag line="108" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="108" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="108" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="115">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="133" package="Default">
        <name>primary</name>
        <full_name>primary</full_name>
        <docblock line="126">
          <description>Generate the SQL statement for creating a primary key.</description>
          <long-description></long-description>
          <tag line="126" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="126" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="126" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="133">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="133">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="147" package="Default">
        <name>unique</name>
        <full_name>unique</full_name>
        <docblock line="140">
          <description>Generate the SQL statement for creating a unique index.</description>
          <long-description></long-description>
          <tag line="140" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="140" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="140" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="147">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="163" package="Default">
        <name>fulltext</name>
        <full_name>fulltext</full_name>
        <docblock line="156">
          <description>Generate the SQL statement for creating a full-text index.</description>
          <long-description></long-description>
          <tag line="156" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="156" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="156" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="163">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="179" package="Default">
        <name>index</name>
        <full_name>index</full_name>
        <docblock line="172">
          <description>Generate the SQL statement for creating a regular index.</description>
          <long-description></long-description>
          <tag line="172" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="172" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="172" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="179">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="192" package="Default">
        <name>key</name>
        <full_name>key</full_name>
        <docblock line="184">
          <description>Generate the SQL statement for creating a new index.</description>
          <long-description></long-description>
          <tag line="184" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="184" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="184" name="param" description="" type="bool" variable="$unique">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="184" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="192">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="192">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
        <argument line="192">
          <name>$unique</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="208" package="Default">
        <name>rename</name>
        <full_name>rename</full_name>
        <docblock line="201">
          <description>Generate the SQL statement for a rename table command.</description>
          <long-description></long-description>
          <tag line="201" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="201" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="201" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="208">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="220" package="Default">
        <name>drop_column</name>
        <full_name>drop_column</full_name>
        <docblock line="213">
          <description>Generate the SQL statement for a drop column command.</description>
          <long-description></long-description>
          <tag line="213" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="213" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="213" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="220">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="220">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="243" package="Default">
        <name>drop_primary</name>
        <full_name>drop_primary</full_name>
        <docblock line="236">
          <description>Generate the SQL statement for a drop primary key command.</description>
          <long-description></long-description>
          <tag line="236" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="236" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="236" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="243">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="243">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="255" package="Default">
        <name>drop_unique</name>
        <full_name>drop_unique</full_name>
        <docblock line="248">
          <description>Generate the SQL statement for a drop unique key command.</description>
          <long-description></long-description>
          <tag line="248" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="248" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="248" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="255">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="255">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="267" package="Default">
        <name>drop_fulltext</name>
        <full_name>drop_fulltext</full_name>
        <docblock line="260">
          <description>Generate the SQL statement for a drop full-text key command.</description>
          <long-description></long-description>
          <tag line="260" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="260" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="260" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="267">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="267">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="279" package="Default">
        <name>drop_index</name>
        <full_name>drop_index</full_name>
        <docblock line="272">
          <description>Generate the SQL statement for a drop index command.</description>
          <long-description></long-description>
          <tag line="272" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="272" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="272" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="279">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="279">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="291" package="Default">
        <name>drop_key</name>
        <full_name>drop_key</full_name>
        <docblock line="284">
          <description>Generate the SQL statement for a drop key command.</description>
          <long-description></long-description>
          <tag line="284" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="284" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="284" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="291">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="291">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="303" package="Default">
        <name>drop_foreign</name>
        <full_name>drop_foreign</full_name>
        <docblock line="296">
          <description>Drop a foreign key constraint from the table.</description>
          <long-description></long-description>
          <tag line="296" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="296" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="296" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="303">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="303">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="314" package="Default">
        <name>type_string</name>
        <full_name>type_string</full_name>
        <docblock line="308">
          <description>Generate the data-type definition for a string.</description>
          <long-description></long-description>
          <tag line="308" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="308" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="314">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="325" package="Default">
        <name>type_integer</name>
        <full_name>type_integer</full_name>
        <docblock line="319">
          <description>Generate the data-type definition for an integer.</description>
          <long-description></long-description>
          <tag line="319" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="319" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="325">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="336" package="Default">
        <name>type_float</name>
        <full_name>type_float</full_name>
        <docblock line="330">
          <description>Generate the data-type definition for an integer.</description>
          <long-description></long-description>
          <tag line="330" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="330" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="336">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="347" package="Default">
        <name>type_decimal</name>
        <full_name>type_decimal</full_name>
        <docblock line="341">
          <description>Generate the data-type definition for a decimal.</description>
          <long-description></long-description>
          <tag line="341" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="341" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="347">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="358" package="Default">
        <name>type_boolean</name>
        <full_name>type_boolean</full_name>
        <docblock line="352">
          <description>Generate the data-type definition for a boolean.</description>
          <long-description></long-description>
          <tag line="352" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="352" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="358">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="369" package="Default">
        <name>type_date</name>
        <full_name>type_date</full_name>
        <docblock line="363">
          <description>Generate the data-type definition for a date.</description>
          <long-description></long-description>
          <tag line="363" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="363" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="369">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="380" package="Default">
        <name>type_timestamp</name>
        <full_name>type_timestamp</full_name>
        <docblock line="374">
          <description>Generate the data-type definition for a timestamp.</description>
          <long-description></long-description>
          <tag line="374" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="374" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="380">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="391" package="Default">
        <name>type_text</name>
        <full_name>type_text</full_name>
        <docblock line="385">
          <description>Generate the data-type definition for a text column.</description>
          <long-description></long-description>
          <tag line="385" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="385" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="391">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="402" package="Default">
        <name>type_blob</name>
        <full_name>type_blob</full_name>
        <docblock line="396">
          <description>Generate the data-type definition for a blob.</description>
          <long-description></long-description>
          <tag line="396" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="396" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="402">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/schema/grammars/postgres.php</error>
      <error line="6" code="50000">No DocBlock was found for \Laravel\Database\Schema\Grammars\Postgres</error>
    </parse_markers>
  </file>
  <file path="laravel/database/schema/grammars/sqlite.php" hash="7b0d8560c063e85baf6fd8012078c330" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Schema\Grammars" line="6" package="Default">
      <extends>\Laravel\Database\Schema\Grammars\Grammar</extends>
      <name>SQLite</name>
      <full_name>\Laravel\Database\Schema\Grammars\SQLite</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="15" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="8">
          <description>Generate the SQL statements for a table creation command.</description>
          <long-description></long-description>
          <tag line="8" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="8" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="8" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="15">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="15">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="52" package="Default">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="45">
          <description>Generate the SQL statements for a table modification command.</description>
          <long-description></long-description>
          <tag line="45" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="45" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="45" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="52">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="82" package="Default">
        <name>columns</name>
        <full_name>columns</full_name>
        <docblock line="76">
          <description>Create the individual column definitions for the table.</description>
          <long-description></long-description>
          <tag line="76" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="76" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="114" package="Default">
        <name>nullable</name>
        <full_name>nullable</full_name>
        <docblock line="107">
          <description>Get the SQL syntax for indicating if a column is nullable.</description>
          <long-description></long-description>
          <tag line="107" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="107" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="107" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="114">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="126" package="Default">
        <name>defaults</name>
        <full_name>defaults</full_name>
        <docblock line="119">
          <description>Get the SQL syntax for specifying a default value on a column.</description>
          <long-description></long-description>
          <tag line="119" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="119" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="119" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="126">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="141" package="Default">
        <name>incrementer</name>
        <full_name>incrementer</full_name>
        <docblock line="134">
          <description>Get the SQL syntax for defining an auto-incrementing column.</description>
          <long-description></long-description>
          <tag line="134" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="134" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="134" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="141">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="156" package="Default">
        <name>unique</name>
        <full_name>unique</full_name>
        <docblock line="149">
          <description>Generate the SQL statement for creating a unique index.</description>
          <long-description></long-description>
          <tag line="149" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="149" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="149" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="156">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="156">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="168" package="Default">
        <name>fulltext</name>
        <full_name>fulltext</full_name>
        <docblock line="161">
          <description>Generate the SQL statement for creating a full-text index.</description>
          <long-description></long-description>
          <tag line="161" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="161" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="161" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="168">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="168">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="182" package="Default">
        <name>index</name>
        <full_name>index</full_name>
        <docblock line="175">
          <description>Generate the SQL statement for creating a regular index.</description>
          <long-description></long-description>
          <tag line="175" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="175" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="175" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="182">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="195" package="Default">
        <name>key</name>
        <full_name>key</full_name>
        <docblock line="187">
          <description>Generate the SQL statement for creating a new index.</description>
          <long-description></long-description>
          <tag line="187" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="187" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="187" name="param" description="" type="bool" variable="$unique">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="187" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="195">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
        <argument line="195">
          <name>$unique</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="211" package="Default">
        <name>rename</name>
        <full_name>rename</full_name>
        <docblock line="204">
          <description>Generate the SQL statement for a rename table command.</description>
          <long-description></long-description>
          <tag line="204" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="204" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="204" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="211">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="211">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="223" package="Default">
        <name>drop_unique</name>
        <full_name>drop_unique</full_name>
        <docblock line="216">
          <description>Generate the SQL statement for a drop unique key command.</description>
          <long-description></long-description>
          <tag line="216" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="216" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="216" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="223">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="223">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="235" package="Default">
        <name>drop_index</name>
        <full_name>drop_index</full_name>
        <docblock line="228">
          <description>Generate the SQL statement for a drop unique key command.</description>
          <long-description></long-description>
          <tag line="228" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="228" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="228" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="235">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="235">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="247" package="Default">
        <name>drop_key</name>
        <full_name>drop_key</full_name>
        <docblock line="240">
          <description>Generate the SQL statement for a drop key command.</description>
          <long-description></long-description>
          <tag line="240" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="240" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="240" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="247">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="247">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="258" package="Default">
        <name>type_string</name>
        <full_name>type_string</full_name>
        <docblock line="252">
          <description>Generate the data-type definition for a string.</description>
          <long-description></long-description>
          <tag line="252" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="252" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="258">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="269" package="Default">
        <name>type_integer</name>
        <full_name>type_integer</full_name>
        <docblock line="263">
          <description>Generate the data-type definition for an integer.</description>
          <long-description></long-description>
          <tag line="263" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="263" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="269">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="280" package="Default">
        <name>type_float</name>
        <full_name>type_float</full_name>
        <docblock line="274">
          <description>Generate the data-type definition for an integer.</description>
          <long-description></long-description>
          <tag line="274" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="274" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="280">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="291" package="Default">
        <name>type_decimal</name>
        <full_name>type_decimal</full_name>
        <docblock line="285">
          <description>Generate the data-type definition for a decimal.</description>
          <long-description></long-description>
          <tag line="285" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="285" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="291">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="302" package="Default">
        <name>type_boolean</name>
        <full_name>type_boolean</full_name>
        <docblock line="296">
          <description>Generate the data-type definition for a boolean.</description>
          <long-description></long-description>
          <tag line="296" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="296" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="302">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="313" package="Default">
        <name>type_date</name>
        <full_name>type_date</full_name>
        <docblock line="307">
          <description>Generate the data-type definition for a date.</description>
          <long-description></long-description>
          <tag line="307" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="307" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="313">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="324" package="Default">
        <name>type_timestamp</name>
        <full_name>type_timestamp</full_name>
        <docblock line="318">
          <description>Generate the data-type definition for a timestamp.</description>
          <long-description></long-description>
          <tag line="318" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="318" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="324">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="335" package="Default">
        <name>type_text</name>
        <full_name>type_text</full_name>
        <docblock line="329">
          <description>Generate the data-type definition for a text column.</description>
          <long-description></long-description>
          <tag line="329" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="329" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="335">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="346" package="Default">
        <name>type_blob</name>
        <full_name>type_blob</full_name>
        <docblock line="340">
          <description>Generate the data-type definition for a blob.</description>
          <long-description></long-description>
          <tag line="340" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="340" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="346">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/schema/grammars/sqlite.php</error>
      <error line="6" code="50000">No DocBlock was found for \Laravel\Database\Schema\Grammars\SQLite</error>
    </parse_markers>
  </file>
  <file path="laravel/database/schema/grammars/grammar.php" hash="7ec2cd7bb3768564f19622b7d98ffad4" package="Default">
    <class final="false" abstract="true" namespace="Laravel\Database\Schema\Grammars" line="6" package="Default">
      <extends>\Laravel\Database\Grammar</extends>
      <name>Grammar</name>
      <full_name>\Laravel\Database\Schema\Grammars\Grammar</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="15" package="Default">
        <name>foreign</name>
        <full_name>foreign</full_name>
        <docblock line="8">
          <description>Generate the SQL statement for creating a foreign key.</description>
          <long-description></long-description>
          <tag line="8" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="8" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="8" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="15">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="15">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="60" package="Default">
        <name>drop</name>
        <full_name>drop</full_name>
        <docblock line="53">
          <description>Generate the SQL statement for a drop table command.</description>
          <long-description></long-description>
          <tag line="53" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="53" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="53" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="60">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="72" package="Default">
        <name>drop_constraint</name>
        <full_name>drop_constraint</full_name>
        <docblock line="65">
          <description>Drop a constraint from the table.</description>
          <long-description></long-description>
          <tag line="65" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="65" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="65" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="72">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="83" package="Default">
        <name>wrap</name>
        <full_name>wrap</full_name>
        <docblock line="77">
          <description>Wrap a value in keyword identifiers.</description>
          <long-description></long-description>
          <tag line="77" name="param" description="" type="\Laravel\Database\Schema\Table|string" variable="$value">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="106" package="Default">
        <name>type</name>
        <full_name>type</full_name>
        <docblock line="100">
          <description>Get the appropriate data type definition for the column.</description>
          <long-description></long-description>
          <tag line="100" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="100" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="116" package="Default">
        <name>default_value</name>
        <full_name>default_value</full_name>
        <docblock line="111">
          <description>Format a value so that it can be used in SQL DEFAULT clauses.</description>
          <long-description></long-description>
          <tag line="111" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="111" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/schema/grammars/grammar.php</error>
      <error line="6" code="50000">No DocBlock was found for \Laravel\Database\Schema\Grammars\Grammar</error>
    </parse_markers>
  </file>
  <file path="laravel/database/schema/grammars/mysql.php" hash="4c3999bfda5894d6ce0a829e7264327d" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Schema\Grammars" line="6" package="Default">
      <extends>\Laravel\Database\Schema\Grammars\Grammar</extends>
      <name>MySQL</name>
      <full_name>\Laravel\Database\Schema\Grammars\MySQL</full_name>
      <property final="false" static="false" visibility="public" line="13" namespace="Laravel\Database\Schema\Grammars" package="Default">
        <name>$wrapper</name>
        <default>'`%s`'</default>
        <docblock line="8">
          <description>The keyword identifier for the database system.</description>
          <long-description></long-description>
          <tag line="8" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="22" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="15">
          <description>Generate the SQL statements for a table creation command.</description>
          <long-description></long-description>
          <tag line="15" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="15" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="15" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="22">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="46" package="Default">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="39">
          <description>Generate the SQL statements for a table modification command.</description>
          <long-description></long-description>
          <tag line="39" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="39" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="39" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="46">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="68" package="Default">
        <name>columns</name>
        <full_name>columns</full_name>
        <docblock line="62">
          <description>Create the individual column definitions for the table.</description>
          <long-description></long-description>
          <tag line="62" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="62" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="100" package="Default">
        <name>unsigned</name>
        <full_name>unsigned</full_name>
        <docblock line="93">
          <description>Get the SQL syntax for indicating if a column is unsigned.</description>
          <long-description></long-description>
          <tag line="93" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="93" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="93" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="100">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="115" package="Default">
        <name>nullable</name>
        <full_name>nullable</full_name>
        <docblock line="108">
          <description>Get the SQL syntax for indicating if a column is nullable.</description>
          <long-description></long-description>
          <tag line="108" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="108" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="108" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="115">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="127" package="Default">
        <name>defaults</name>
        <full_name>defaults</full_name>
        <docblock line="120">
          <description>Get the SQL syntax for specifying a default value on a column.</description>
          <long-description></long-description>
          <tag line="120" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="120" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="120" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="127">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="127">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="142" package="Default">
        <name>incrementer</name>
        <full_name>incrementer</full_name>
        <docblock line="135">
          <description>Get the SQL syntax for defining an auto-incrementing column.</description>
          <long-description></long-description>
          <tag line="135" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="135" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="135" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="142">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="157" package="Default">
        <name>primary</name>
        <full_name>primary</full_name>
        <docblock line="150">
          <description>Generate the SQL statement for creating a primary key.</description>
          <long-description></long-description>
          <tag line="150" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="150" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="150" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="157">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="157">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="169" package="Default">
        <name>unique</name>
        <full_name>unique</full_name>
        <docblock line="162">
          <description>Generate the SQL statement for creating a unique index.</description>
          <long-description></long-description>
          <tag line="162" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="162" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="162" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="169">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="169">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="181" package="Default">
        <name>fulltext</name>
        <full_name>fulltext</full_name>
        <docblock line="174">
          <description>Generate the SQL statement for creating a full-text index.</description>
          <long-description></long-description>
          <tag line="174" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="174" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="174" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="181">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="181">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="193" package="Default">
        <name>index</name>
        <full_name>index</full_name>
        <docblock line="186">
          <description>Generate the SQL statement for creating a regular index.</description>
          <long-description></long-description>
          <tag line="186" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="186" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="186" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="193">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="206" package="Default">
        <name>key</name>
        <full_name>key</full_name>
        <docblock line="198">
          <description>Generate the SQL statement for creating a new index.</description>
          <long-description></long-description>
          <tag line="198" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="198" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="198" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="198" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="206">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="206">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
        <argument line="206">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="222" package="Default">
        <name>rename</name>
        <full_name>rename</full_name>
        <docblock line="215">
          <description>Generate the SQL statement for a rename table command.</description>
          <long-description></long-description>
          <tag line="215" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="215" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="215" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="222">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="222">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="234" package="Default">
        <name>drop_column</name>
        <full_name>drop_column</full_name>
        <docblock line="227">
          <description>Generate the SQL statement for a drop column command.</description>
          <long-description></long-description>
          <tag line="227" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="227" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="227" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="234">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="257" package="Default">
        <name>drop_primary</name>
        <full_name>drop_primary</full_name>
        <docblock line="250">
          <description>Generate the SQL statement for a drop primary key command.</description>
          <long-description></long-description>
          <tag line="250" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="250" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="250" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="257">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="257">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="269" package="Default">
        <name>drop_unique</name>
        <full_name>drop_unique</full_name>
        <docblock line="262">
          <description>Generate the SQL statement for a drop unique key command.</description>
          <long-description></long-description>
          <tag line="262" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="262" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="262" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="269">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="269">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="281" package="Default">
        <name>drop_fulltext</name>
        <full_name>drop_fulltext</full_name>
        <docblock line="274">
          <description>Generate the SQL statement for a drop full-text key command.</description>
          <long-description></long-description>
          <tag line="274" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="274" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="274" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="281">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="281">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="293" package="Default">
        <name>drop_index</name>
        <full_name>drop_index</full_name>
        <docblock line="286">
          <description>Generate the SQL statement for a drop unique key command.</description>
          <long-description></long-description>
          <tag line="286" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="286" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="286" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="293">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="293">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="305" package="Default">
        <name>drop_key</name>
        <full_name>drop_key</full_name>
        <docblock line="298">
          <description>Generate the SQL statement for a drop key command.</description>
          <long-description></long-description>
          <tag line="298" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="298" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="298" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="305">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="305">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Schema\Grammars" line="317" package="Default">
        <name>drop_foreign</name>
        <full_name>drop_foreign</full_name>
        <docblock line="310">
          <description>Drop a foreign key constraint from the table.</description>
          <long-description></long-description>
          <tag line="310" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="310" name="param" description="" type="\Laravel\Fluent" variable="$command">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="310" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="317">
          <name>$table</name>
          <default></default>
          <type>\Laravel\Database\Schema\Table</type>
        </argument>
        <argument line="317">
          <name>$command</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="328" package="Default">
        <name>type_string</name>
        <full_name>type_string</full_name>
        <docblock line="322">
          <description>Generate the data-type definition for a string.</description>
          <long-description></long-description>
          <tag line="322" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="322" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="328">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="339" package="Default">
        <name>type_integer</name>
        <full_name>type_integer</full_name>
        <docblock line="333">
          <description>Generate the data-type definition for an integer.</description>
          <long-description></long-description>
          <tag line="333" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="333" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="339">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="350" package="Default">
        <name>type_float</name>
        <full_name>type_float</full_name>
        <docblock line="344">
          <description>Generate the data-type definition for an integer.</description>
          <long-description></long-description>
          <tag line="344" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="344" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="350">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="361" package="Default">
        <name>type_decimal</name>
        <full_name>type_decimal</full_name>
        <docblock line="355">
          <description>Generate the data-type definition for a decimal.</description>
          <long-description></long-description>
          <tag line="355" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="355" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="361">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="372" package="Default">
        <name>type_boolean</name>
        <full_name>type_boolean</full_name>
        <docblock line="366">
          <description>Generate the data-type definition for a boolean.</description>
          <long-description></long-description>
          <tag line="366" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="366" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="372">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="383" package="Default">
        <name>type_date</name>
        <full_name>type_date</full_name>
        <docblock line="377">
          <description>Generate the data-type definition for a date.</description>
          <long-description></long-description>
          <tag line="377" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="377" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="383">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="394" package="Default">
        <name>type_timestamp</name>
        <full_name>type_timestamp</full_name>
        <docblock line="388">
          <description>Generate the data-type definition for a timestamp.</description>
          <long-description></long-description>
          <tag line="388" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="388" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="394">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="405" package="Default">
        <name>type_text</name>
        <full_name>type_text</full_name>
        <docblock line="399">
          <description>Generate the data-type definition for a text column.</description>
          <long-description></long-description>
          <tag line="399" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="399" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="405">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Schema\Grammars" line="416" package="Default">
        <name>type_blob</name>
        <full_name>type_blob</full_name>
        <docblock line="410">
          <description>Generate the data-type definition for a blob.</description>
          <long-description></long-description>
          <tag line="410" name="param" description="" type="\Laravel\Fluent" variable="$column">
            <type by_reference="false">\Laravel\Fluent</type>
          </tag>
          <tag line="410" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="416">
          <name>$column</name>
          <default></default>
          <type>\Laravel\Fluent</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/schema/grammars/mysql.php</error>
      <error line="6" code="50000">No DocBlock was found for \Laravel\Database\Schema\Grammars\MySQL</error>
    </parse_markers>
  </file>
  <file path="laravel/database/connectors/sqlserver.php" hash="af8278e43b133b454ad3813696543bbd" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Connectors" line="3" package="Default">
      <extends>\Laravel\Database\Connectors\Connector</extends>
      <name>SQLServer</name>
      <full_name>\Laravel\Database\Connectors\SQLServer</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel\Database\Connectors" package="Default">
        <name>$options</name>
        <default>array(\PDO::ATTR_CASE =&gt; \PDO::CASE_LOWER, \PDO::ATTR_ERRMODE =&gt; \PDO::ERRMODE_EXCEPTION, \PDO::ATTR_ORACLE_NULLS =&gt; \PDO::NULL_NATURAL, \PDO::ATTR_STRINGIFY_FETCHES =&gt; false)</default>
        <docblock line="5">
          <description>The PDO connection options.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Connectors" line="23" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="17">
          <description>Establish a PDO database connection.</description>
          <long-description></long-description>
          <tag line="17" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="17" name="return" description="" type="\PDO">
            <type by_reference="false">\PDO</type>
          </tag>
        </docblock>
        <argument line="23">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/connectors/sqlserver.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Database\Connectors\SQLServer</error>
    </parse_markers>
  </file>
  <file path="laravel/database/connectors/connector.php" hash="10a6d70b090f94c004681f3125f1048f" package="Default">
    <class final="false" abstract="true" namespace="Laravel\Database\Connectors" line="3" package="Default">
      <extends/>
      <name>Connector</name>
      <full_name>\Laravel\Database\Connectors\Connector</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel\Database\Connectors" package="Default">
        <name>$options</name>
        <default>array(\PDO::ATTR_CASE =&gt; \PDO::CASE_LOWER, \PDO::ATTR_ERRMODE =&gt; \PDO::ERRMODE_EXCEPTION, \PDO::ATTR_ORACLE_NULLS =&gt; \PDO::NULL_NATURAL, \PDO::ATTR_STRINGIFY_FETCHES =&gt; false, \PDO::ATTR_EMULATE_PREPARES =&gt; false)</default>
        <docblock line="5">
          <description>The PDO connection options.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Laravel\Database\Connectors" line="24" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="18">
          <description>Establish a PDO database connection.</description>
          <long-description></long-description>
          <tag line="18" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="18" name="return" description="" type="\PDO">
            <type by_reference="false">\PDO</type>
          </tag>
        </docblock>
        <argument line="24">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Connectors" line="34" package="Default">
        <name>options</name>
        <full_name>options</full_name>
        <docblock line="26">
          <description>Get the PDO connection options for the configuration.</description>
          <long-description>&lt;p&gt;Developer specified options will override the default connection options.&lt;/p&gt;</long-description>
          <tag line="26" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="26" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/connectors/connector.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Database\Connectors\Connector</error>
    </parse_markers>
  </file>
  <file path="laravel/database/connectors/postgres.php" hash="7a955505401536a5613bd2e80d0b5e7a" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Connectors" line="3" package="Default">
      <extends>\Laravel\Database\Connectors\Connector</extends>
      <name>Postgres</name>
      <full_name>\Laravel\Database\Connectors\Postgres</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel\Database\Connectors" package="Default">
        <name>$options</name>
        <default>array(\PDO::ATTR_CASE =&gt; \PDO::CASE_LOWER, \PDO::ATTR_ERRMODE =&gt; \PDO::ERRMODE_EXCEPTION, \PDO::ATTR_ORACLE_NULLS =&gt; \PDO::NULL_NATURAL, \PDO::ATTR_STRINGIFY_FETCHES =&gt; false)</default>
        <docblock line="5">
          <description>The PDO connection options.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Connectors" line="23" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="17">
          <description>Establish a PDO database connection.</description>
          <long-description></long-description>
          <tag line="17" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="17" name="return" description="" type="\PDO">
            <type by_reference="false">\PDO</type>
          </tag>
        </docblock>
        <argument line="23">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/connectors/postgres.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Database\Connectors\Postgres</error>
    </parse_markers>
  </file>
  <file path="laravel/database/connectors/sqlite.php" hash="8cf4af4d5bb9cecd847c0c69d94c6583" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Connectors" line="3" package="Default">
      <extends>\Laravel\Database\Connectors\Connector</extends>
      <name>SQLite</name>
      <full_name>\Laravel\Database\Connectors\SQLite</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Connectors" line="11" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="5">
          <description>Establish a PDO database connection.</description>
          <long-description></long-description>
          <tag line="5" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="5" name="return" description="" type="\PDO">
            <type by_reference="false">\PDO</type>
          </tag>
        </docblock>
        <argument line="11">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/connectors/sqlite.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Database\Connectors\SQLite</error>
    </parse_markers>
  </file>
  <file path="laravel/database/connectors/mysql.php" hash="d220c960b294a544fc72f3aaf02af7b7" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Connectors" line="3" package="Default">
      <extends>\Laravel\Database\Connectors\Connector</extends>
      <name>MySQL</name>
      <full_name>\Laravel\Database\Connectors\MySQL</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Connectors" line="11" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="5">
          <description>Establish a PDO database connection.</description>
          <long-description></long-description>
          <tag line="5" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="5" name="return" description="" type="\PDO">
            <type by_reference="false">\PDO</type>
          </tag>
        </docblock>
        <argument line="11">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/connectors/mysql.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Database\Connectors\MySQL</error>
    </parse_markers>
  </file>
  <file path="laravel/database/connection.php" hash="16dec996f3227e63cf5cf4e647b364d4" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database" line="5" package="Default">
      <extends/>
      <name>Connection</name>
      <full_name>\Laravel\Database\Connection</full_name>
      <property final="false" static="false" visibility="public" line="12" namespace="Laravel\Database" package="Default">
        <name>$pdo</name>
        <default></default>
        <docblock line="7">
          <description>The raw PDO connection instance.</description>
          <long-description></long-description>
          <tag line="7" name="var" description="" type="\PDO">
            <type by_reference="false">\PDO</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="19" namespace="Laravel\Database" package="Default">
        <name>$config</name>
        <default></default>
        <docblock line="14">
          <description>The connection configuration array.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="Laravel\Database" package="Default">
        <name>$grammar</name>
        <default></default>
        <docblock line="21">
          <description>The query grammar instance for the connection.</description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="\Laravel\Database\Query\Grammars\Grammar">
            <type by_reference="false">\Laravel\Database\Query\Grammars\Grammar</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="33" namespace="Laravel\Database" package="Default">
        <name>$queries</name>
        <default>array()</default>
        <docblock line="28">
          <description>All of the queries that have been executed on all connections.</description>
          <long-description></long-description>
          <tag line="28" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="42" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="35">
          <description>Create a new database connection instance.</description>
          <long-description></long-description>
          <tag line="35" name="param" description="" type="\PDO" variable="$pdo">
            <type by_reference="false">\PDO</type>
          </tag>
          <tag line="35" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="35" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$pdo</name>
          <default></default>
          <type>\PDO</type>
        </argument>
        <argument line="42">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="62" package="Default">
        <name>table</name>
        <full_name>table</full_name>
        <docblock line="48">
          <description>Begin a fluent query against a table.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Start a fluent query against the "users" table
    $query = DB::connection()-&gt;table('users');

    // Start a fluent query against the "users" table and get all the users
    $users = DB::connection()-&gt;table('users')-&gt;get();
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="48" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database" line="72" package="Default">
        <name>grammar</name>
        <full_name>grammar</full_name>
        <docblock line="67">
          <description>Create a new query grammar for the connection.</description>
          <long-description></long-description>
          <tag line="67" name="return" description="" type="\Laravel\Database\Query\Grammars\Grammar">
            <type by_reference="false">\Laravel\Database\Query\Grammars\Grammar</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="106" package="Default">
        <name>transaction</name>
        <full_name>transaction</full_name>
        <docblock line="100">
          <description>Execute a callback wrapped in a database transaction.</description>
          <long-description></long-description>
          <tag line="100" name="param" description="" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="100" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="142" package="Default">
        <name>only</name>
        <full_name>only</full_name>
        <docblock line="127">
          <description>Execute a SQL query against the connection and return a single column result.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get the total number of rows on a table
    $count = DB::connection()-&gt;only('select count(*) from users');

    // Get the sum of payment amounts from a table
    $sum = DB::connection()-&gt;only('select sum(amount) from payments')
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="127" name="param" description="" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="param" description="" type="array" variable="$bindings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="127" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
        <argument line="142">
          <name>$bindings</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="164" package="Default">
        <name>first</name>
        <full_name>first</full_name>
        <docblock line="149">
          <description>Execute a SQL query against the connection and return the first result.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Execute a query against the database connection
    $user = DB::connection()-&gt;first('select * from users');

    // Execute a query with bound parameters
    $user = DB::connection()-&gt;first('select * from users where id = ?', array($id));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="149" name="param" description="" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="149" name="param" description="" type="array" variable="$bindings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="149" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
        <argument line="164">
          <name>$bindings</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="179" package="Default">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="172">
          <description>Execute a SQL query and return an array of StdClass objects.</description>
          <long-description></long-description>
          <tag line="172" name="param" description="" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="172" name="param" description="" type="array" variable="$bindings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="172" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
        <argument line="179">
          <name>$bindings</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database" line="218" package="Default">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="209">
          <description>Execute a SQL query against the connection.</description>
          <long-description>&lt;p&gt;The PDO statement and boolean result will be returned in an array.&lt;/p&gt;</long-description>
          <tag line="209" name="param" description="" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="209" name="param" description="" type="array" variable="$bindings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="209" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="218">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
        <argument line="218">
          <name>$bindings</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database" line="286" package="Default">
        <name>fetch</name>
        <full_name>fetch</full_name>
        <docblock line="279">
          <description>Fetch all of the rows for a given statement.</description>
          <long-description></long-description>
          <tag line="279" name="param" description="" type="\PDOStatement" variable="$statement">
            <type by_reference="false">\PDOStatement</type>
          </tag>
          <tag line="279" name="param" description="" type="int" variable="$style">
            <type by_reference="false">int</type>
          </tag>
          <tag line="279" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="286">
          <name>$statement</name>
          <default></default>
          <type/>
        </argument>
        <argument line="286">
          <name>$style</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database" line="309" package="Default">
        <name>log</name>
        <full_name>log</full_name>
        <docblock line="301">
          <description>Log the query and fire the core query event.</description>
          <long-description></long-description>
          <tag line="301" name="param" description="" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="301" name="param" description="" type="array" variable="$bindings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="301" name="param" description="" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="301" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="309">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
        <argument line="309">
          <name>$bindings</name>
          <default></default>
          <type/>
        </argument>
        <argument line="309">
          <name>$start</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="323" package="Default">
        <name>driver</name>
        <full_name>driver</full_name>
        <docblock line="318">
          <description>Get the driver name for the database connection.</description>
          <long-description></long-description>
          <tag line="318" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="331" package="Default">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="328">
          <description>Magic Method for dynamically beginning queries on database tables.</description>
          <long-description></long-description>
        </docblock>
        <argument line="331">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="331">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/connection.php</error>
      <error line="5" code="50000">No DocBlock was found for \Laravel\Database\Connection</error>
      <error line="328" code="50015">Argument $method is missing from the Docblock of __call()</error>
      <error line="328" code="50015">Argument $parameters is missing from the Docblock of __call()</error>
    </parse_markers>
  </file>
  <file path="laravel/database/grammar.php" hash="65522b3b82da0c83b10d12999c1d1af6" package="Default">
    <class final="false" abstract="true" namespace="Laravel\Database" line="3" package="Default">
      <extends/>
      <name>Grammar</name>
      <full_name>\Laravel\Database\Grammar</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel\Database" package="Default">
        <name>$wrapper</name>
        <default>'"%s"'</default>
        <docblock line="5">
          <description>The keyword identifier for the database system.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="17" namespace="Laravel\Database" package="Default">
        <name>$connection</name>
        <default></default>
        <docblock line="12">
          <description>The database connection instance for the grammar.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="\Laravel\Database\Connection">
            <type by_reference="false">\Laravel\Database\Connection</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="25" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="19">
          <description>Create a new database grammar instance.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="" type="\Laravel\Database\Connection" variable="$connection">
            <type by_reference="false">\Laravel\Database\Connection</type>
          </tag>
          <tag line="19" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$connection</name>
          <default></default>
          <type>\Laravel\Database\Connection</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="36" package="Default">
        <name>wrap_table</name>
        <full_name>wrap_table</full_name>
        <docblock line="30">
          <description>Wrap a table in keyword identifiers.</description>
          <long-description></long-description>
          <tag line="30" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="65" package="Default">
        <name>wrap</name>
        <full_name>wrap</full_name>
        <docblock line="59">
          <description>Wrap a value in keyword identifiers.</description>
          <long-description></long-description>
          <tag line="59" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database" line="115" package="Default">
        <name>wrap_value</name>
        <full_name>wrap_value</full_name>
        <docblock line="109">
          <description>Wrap a single string value in keyword identifiers.</description>
          <long-description></long-description>
          <tag line="109" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="109" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="134" package="Default">
        <name>parameterize</name>
        <full_name>parameterize</full_name>
        <docblock line="120">
          <description>Create query parameters from an array of values.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; Returns "?, ?, ?", which may be used as PDO place-holders
    $parameters = $grammar-&gt;parameterize(array(1, 2, 3));

    // Returns "?, "Taylor"" since an expression is used
    $parameters = $grammar-&gt;parameterize(array(1, DB::raw('Taylor')));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="120" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="120" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="153" package="Default">
        <name>parameter</name>
        <full_name>parameter</full_name>
        <docblock line="139">
          <description>Get the appropriate query parameter string for a value.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Returns a "?" PDO place-holder
    $value = $grammar-&gt;parameter('Taylor Otwell');

    // Returns "Taylor Otwell" as the raw value of the expression
    $value = $grammar-&gt;parameter(DB::raw('Taylor Otwell'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="139" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="139" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="153">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="169" package="Default">
        <name>columnize</name>
        <full_name>columnize</full_name>
        <docblock line="158">
          <description>Create a comma-delimited list of wrapped column names.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Returns ""Taylor", "Otwell"" when the identifier is quotes
    $columns = $grammar-&gt;columnize(array('Taylor', 'Otwell'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="158" name="param" description="" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="158" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="169">
          <name>$columns</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/grammar.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Database\Grammar</error>
    </parse_markers>
  </file>
  <file path="laravel/database/eloquent/pivot.php" hash="11f356217df2c83794f72c44891574df" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Eloquent" line="3" package="Default">
      <extends>\Laravel\Database\Eloquent\Model</extends>
      <name>Pivot</name>
      <full_name>\Laravel\Database\Eloquent\Pivot</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$pivot_table</name>
        <default></default>
        <docblock line="5">
          <description>The name of the pivot table's table.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="17" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$pivot_connection</name>
        <default></default>
        <docblock line="12">
          <description>The database connection used for this model.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="\Laravel\Database\Eloquent\Laravel\Database\Connection">
            <type by_reference="false">\Laravel\Database\Eloquent\Laravel\Database\Connection</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="24" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$timestamps</name>
        <default>true</default>
        <docblock line="19">
          <description>Indicates if the model has update and creation timestamps.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="33" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="26">
          <description>Create a new pivot table instance.</description>
          <long-description></long-description>
          <tag line="26" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="param" description="" type="string" variable="$connection">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="33">
          <name>$connection</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="46" package="Default">
        <name>table</name>
        <full_name>table</full_name>
        <docblock line="41">
          <description>Get the name of the pivot table.</description>
          <long-description></long-description>
          <tag line="41" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="56" package="Default">
        <name>connection</name>
        <full_name>connection</full_name>
        <docblock line="51">
          <description>Get the connection used by the pivot table.</description>
          <long-description></long-description>
          <tag line="51" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/eloquent/pivot.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Database\Eloquent\Pivot</error>
    </parse_markers>
  </file>
  <file path="laravel/database/eloquent/relationships/relationship.php" hash="6273067c8f5470e643a2d45d6f3d2290" package="Default">
    <class final="false" abstract="true" namespace="Laravel\Database\Eloquent\Relationships" line="6" package="Default">
      <extends>\Laravel\Database\Eloquent\Query</extends>
      <name>Relationship</name>
      <full_name>\Laravel\Database\Eloquent\Relationships\Relationship</full_name>
      <property final="false" static="false" visibility="protected" line="13" namespace="Laravel\Database\Eloquent\Relationships" package="Default">
        <name>$base</name>
        <default></default>
        <docblock line="8">
          <description>The base model for the relationship.</description>
          <long-description></long-description>
          <tag line="8" name="var" description="" type="\Laravel\Database\Eloquent\Model">
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="23" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="15">
          <description>Create a new has one or many association instance.</description>
          <long-description></long-description>
          <tag line="15" name="param" description="" type="\Laravel\Database\Eloquent\Model" variable="$model">
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
          </tag>
          <tag line="15" name="param" description="" type="string" variable="$associated">
            <type by_reference="false">string</type>
          </tag>
          <tag line="15" name="param" description="" type="string" variable="$foreign">
            <type by_reference="false">string</type>
          </tag>
          <tag line="15" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="23">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="23">
          <name>$associated</name>
          <default></default>
          <type/>
        </argument>
        <argument line="23">
          <name>$foreign</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="66" package="Default">
        <name>foreign</name>
        <full_name>foreign</full_name>
        <docblock line="59">
          <description>Get the foreign key name for the given model.</description>
          <long-description></long-description>
          <tag line="59" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="param" description="" type="string" variable="$foreign">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="66">
          <name>$foreign</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent\Relationships" line="87" package="Default">
        <name>fresh_model</name>
        <full_name>fresh_model</full_name>
        <docblock line="81">
          <description>Get a freshly instantiated instance of the related model class.</description>
          <long-description></long-description>
          <tag line="81" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="81" name="return" description="" type="\Laravel\Database\Eloquent\Model">
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="99" package="Default">
        <name>foreign_key</name>
        <full_name>foreign_key</full_name>
        <docblock line="94">
          <description>Get the foreign key for the relationship.</description>
          <long-description></long-description>
          <tag line="94" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="110" package="Default">
        <name>keys</name>
        <full_name>keys</full_name>
        <docblock line="104">
          <description>Gather all the primary keys from a result set.</description>
          <long-description></long-description>
          <tag line="104" name="param" description="" type="array" variable="$results">
            <type by_reference="false">array</type>
          </tag>
          <tag line="104" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$results</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="128" package="Default">
        <name>with</name>
        <full_name>with</full_name>
        <docblock line="122">
          <description>The relationships that should be eagerly loaded by the query.</description>
          <long-description></long-description>
          <tag line="122" name="param" description="" type="array" variable="$includes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="122" name="return" description="" type="\Laravel\Database\Eloquent\Relationships\Relationship">
            <type by_reference="false">\Laravel\Database\Eloquent\Relationships\Relationship</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$includes</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/eloquent/relationships/relationship.php</error>
      <error line="6" code="50000">No DocBlock was found for \Laravel\Database\Eloquent\Relationships\Relationship</error>
    </parse_markers>
  </file>
  <file path="laravel/database/eloquent/relationships/has_many.php" hash="f1de429032cbac2072d639b5ab2e0b36" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Eloquent\Relationships" line="3" package="Default">
      <extends>\Laravel\Database\Eloquent\Relationships\Has_One_Or_Many</extends>
      <name>Has_Many</name>
      <full_name>\Laravel\Database\Eloquent\Relationships\Has_Many</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="10" package="Default">
        <name>results</name>
        <full_name>results</full_name>
        <docblock line="5">
          <description>Get the properly hydrated results for the relationship.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="21" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="15">
          <description>Sync the association table with an array of models.</description>
          <long-description></long-description>
          <tag line="15" name="param" description="" type="mixed" variable="$models">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="15" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="21">
          <name>$models</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="75" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="68">
          <description>Initialize a relationship on an array of parent models.</description>
          <long-description></long-description>
          <tag line="68" name="param" description="" type="array" variable="$parents">
            <type by_reference="false">array</type>
          </tag>
          <tag line="68" name="param" description="" type="string" variable="$relationship">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$parents</name>
          <default></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$relationship</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="90" package="Default">
        <name>match</name>
        <full_name>match</full_name>
        <docblock line="83">
          <description>Match eagerly loaded child models to their parent models.</description>
          <long-description></long-description>
          <tag line="83" name="param" description="" type="array" variable="$parents">
            <type by_reference="false">array</type>
          </tag>
          <tag line="83" name="param" description="" type="array" variable="$children">
            <type by_reference="false">array</type>
          </tag>
          <tag line="83" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$relationship</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$parents</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$children</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/eloquent/relationships/has_many.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Database\Eloquent\Relationships\Has_Many</error>
      <error line="83" code="50014">Name of argument $relationship does not match with the DocBlock's name $parents in match()</error>
      <error line="83" code="50014">Name of argument $parents does not match with the DocBlock's name $children in match()</error>
      <error line="83" code="50015">Argument $children is missing from the Docblock of match()</error>
    </parse_markers>
  </file>
  <file path="laravel/database/eloquent/relationships/has_one_or_many.php" hash="a0a3bb817bdd2d27fa227d542876b5b0" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Eloquent\Relationships" line="5" package="Default">
      <extends>\Laravel\Database\Eloquent\Relationships\Relationship</extends>
      <name>Has_One_Or_Many</name>
      <full_name>\Laravel\Database\Eloquent\Relationships\Has_One_Or_Many</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="15" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="7">
          <description>Insert a new record for the association.</description>
          <long-description>&lt;p&gt;If save is successful, the model will be returned, otherwise false.&lt;/p&gt;</long-description>
          <tag line="7" name="param" description="" type="\Laravel\Database\Eloquent\Model|array" variable="$attributes">
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="7" name="return" description="" type="\Laravel\Database\Eloquent\Model|false">
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="15">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="37" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="31">
          <description>Update a record for the association.</description>
          <long-description></long-description>
          <tag line="31" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="31" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent\Relationships" line="52" package="Default">
        <name>constrain</name>
        <full_name>constrain</full_name>
        <docblock line="47">
          <description>Set the proper constraints on the relationship table.</description>
          <long-description></long-description>
          <tag line="47" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="63" package="Default">
        <name>eagerly_constrain</name>
        <full_name>eagerly_constrain</full_name>
        <docblock line="57">
          <description>Set the proper constraints on the relationship table for an eager load.</description>
          <long-description></long-description>
          <tag line="57" name="param" description="" type="array" variable="$results">
            <type by_reference="false">array</type>
          </tag>
          <tag line="57" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$results</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/eloquent/relationships/has_one_or_many.php</error>
      <error line="5" code="50000">No DocBlock was found for \Laravel\Database\Eloquent\Relationships\Has_One_Or_Many</error>
    </parse_markers>
  </file>
  <file path="laravel/database/eloquent/relationships/has_many_and_belongs_to.php" hash="3441aedf745cb5e48fef462b11e09e64" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Eloquent\Relationships" line="7" package="Default">
      <extends>\Laravel\Database\Eloquent\Relationships\Relationship</extends>
      <name>Has_Many_And_Belongs_To</name>
      <full_name>\Laravel\Database\Eloquent\Relationships\Has_Many_And_Belongs_To</full_name>
      <property final="false" static="false" visibility="protected" line="14" namespace="Laravel\Database\Eloquent\Relationships" package="Default">
        <name>$joining</name>
        <default></default>
        <docblock line="9">
          <description>The name of the intermediate, joining table.</description>
          <long-description></long-description>
          <tag line="9" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="21" namespace="Laravel\Database\Eloquent\Relationships" package="Default">
        <name>$other</name>
        <default></default>
        <docblock line="16">
          <description>The other or "associated" key.</description>
          <long-description>&lt;p&gt;This is the foreign key of the related model.&lt;/p&gt;</long-description>
          <tag line="16" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="Laravel\Database\Eloquent\Relationships" package="Default">
        <name>$with</name>
        <default>array('id')</default>
        <docblock line="23">
          <description>The columns on the joining table that should be fetched.</description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="40" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="30">
          <description>Create a new many to many relationship instance.</description>
          <long-description></long-description>
          <tag line="30" name="param" description="" type="\Laravel\Database\Eloquent\Model" variable="$model">
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
          </tag>
          <tag line="30" name="param" description="" type="string" variable="$associated">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="" type="string" variable="$foreign">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="" type="string" variable="$other">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="40">
          <name>$associated</name>
          <default></default>
          <type/>
        </argument>
        <argument line="40">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="40">
          <name>$foreign</name>
          <default></default>
          <type/>
        </argument>
        <argument line="40">
          <name>$other</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent\Relationships" line="66" package="Default">
        <name>joining</name>
        <full_name>joining</full_name>
        <docblock line="59">
          <description>Determine the joining table name for the relationship.</description>
          <long-description>&lt;p&gt;By default, the name is the models sorted and joined with underscores.&lt;/p&gt;</long-description>
          <tag line="59" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="66">
          <name>$associated</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="80" package="Default">
        <name>results</name>
        <full_name>results</full_name>
        <docblock line="75">
          <description>Get the properly hydrated results for the relationship.</description>
          <long-description></long-description>
          <tag line="75" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="92" package="Default">
        <name>attach</name>
        <full_name>attach</full_name>
        <docblock line="85">
          <description>Insert a new record into the joining table of the association.</description>
          <long-description></long-description>
          <tag line="85" name="param" description="" type="\Laravel\Database\Eloquent\Model|int" variable="$id">
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="85" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="85" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="92">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="107" package="Default">
        <name>detach</name>
        <full_name>detach</full_name>
        <docblock line="101">
          <description>Detach a record from the joining table of the association.</description>
          <long-description></long-description>
          <tag line="101" name="param" description="" type="array|\Laravel\Database\Eloquent\Model|int" variable="$ids">
            <type by_reference="false">array</type>
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="101" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$ids</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="121" package="Default">
        <name>sync</name>
        <full_name>sync</full_name>
        <docblock line="115">
          <description>Sync the joining table with the array of given IDs.</description>
          <long-description></long-description>
          <tag line="115" name="param" description="" type="array" variable="$ids">
            <type by_reference="false">array</type>
          </tag>
          <tag line="115" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$ids</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="155" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="148">
          <description>Insert a new record for the association.</description>
          <long-description></long-description>
          <tag line="148" name="param" description="" type="\Laravel\Database\Eloquent\Model|array" variable="$attributes">
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="148" name="param" description="" type="array" variable="$joining">
            <type by_reference="false">array</type>
          </tag>
          <tag line="148" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="155">
          <name>$joining</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="185" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="180">
          <description>Delete all of the records from the joining table for the model.</description>
          <long-description></long-description>
          <tag line="180" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent\Relationships" line="196" package="Default">
        <name>join_record</name>
        <full_name>join_record</full_name>
        <docblock line="190">
          <description>Create an array representing a new joining record for the association.</description>
          <long-description></long-description>
          <tag line="190" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="190" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent\Relationships" line="207" package="Default">
        <name>insert_joining</name>
        <full_name>insert_joining</full_name>
        <docblock line="201">
          <description>Insert a new record into the joining table of the association.</description>
          <long-description></long-description>
          <tag line="201" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="201" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="207">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent\Relationships" line="224" package="Default">
        <name>joining_table</name>
        <full_name>joining_table</full_name>
        <docblock line="219">
          <description>Get a fluent query for the joining table of the relationship.</description>
          <long-description></long-description>
          <tag line="219" name="return" description="" type="\Laravel\Database\Eloquent\Relationships\Query">
            <type by_reference="false">\Laravel\Database\Eloquent\Relationships\Query</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent\Relationships" line="234" package="Default">
        <name>constrain</name>
        <full_name>constrain</full_name>
        <docblock line="229">
          <description>Set the proper constraints on the relationship table.</description>
          <long-description></long-description>
          <tag line="229" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent\Relationships" line="250" package="Default">
        <name>set_select</name>
        <full_name>set_select</full_name>
        <docblock line="243">
          <description>Set the SELECT clause on the query builder for the relationship.</description>
          <long-description></long-description>
          <tag line="243" name="param" description="" type="string" variable="$foreign">
            <type by_reference="false">string</type>
          </tag>
          <tag line="243" name="param" description="" type="string" variable="$other">
            <type by_reference="false">string</type>
          </tag>
          <tag line="243" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="250">
          <name>$foreign</name>
          <default></default>
          <type/>
        </argument>
        <argument line="250">
          <name>$other</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent\Relationships" line="275" package="Default">
        <name>set_join</name>
        <full_name>set_join</full_name>
        <docblock line="269">
          <description>Set the JOIN clause on the query builder for the relationship.</description>
          <long-description></long-description>
          <tag line="269" name="param" description="" type="string" variable="$other">
            <type by_reference="false">string</type>
          </tag>
          <tag line="269" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="275">
          <name>$other</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent\Relationships" line="288" package="Default">
        <name>set_where</name>
        <full_name>set_where</full_name>
        <docblock line="282">
          <description>Set the WHERE clause on the query builder for the relationship.</description>
          <long-description></long-description>
          <tag line="282" name="param" description="" type="string" variable="$foreign">
            <type by_reference="false">string</type>
          </tag>
          <tag line="282" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="288">
          <name>$foreign</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="302" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="295">
          <description>Initialize a relationship on an array of parent models.</description>
          <long-description></long-description>
          <tag line="295" name="param" description="" type="array" variable="$parents">
            <type by_reference="false">array</type>
          </tag>
          <tag line="295" name="param" description="" type="string" variable="$relationship">
            <type by_reference="false">string</type>
          </tag>
          <tag line="295" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="302">
          <name>$parents</name>
          <default></default>
          <type/>
        </argument>
        <argument line="302">
          <name>$relationship</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="316" package="Default">
        <name>eagerly_constrain</name>
        <full_name>eagerly_constrain</full_name>
        <docblock line="310">
          <description>Set the proper constraints on the relationship table for an eager load.</description>
          <long-description></long-description>
          <tag line="310" name="param" description="" type="array" variable="$results">
            <type by_reference="false">array</type>
          </tag>
          <tag line="310" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="316">
          <name>$results</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="328" package="Default">
        <name>match</name>
        <full_name>match</full_name>
        <docblock line="321">
          <description>Match eagerly loaded child models to their parent models.</description>
          <long-description></long-description>
          <tag line="321" name="param" description="" type="array" variable="$parents">
            <type by_reference="false">array</type>
          </tag>
          <tag line="321" name="param" description="" type="array" variable="$children">
            <type by_reference="false">array</type>
          </tag>
          <tag line="321" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="328">
          <name>$relationship</name>
          <default></default>
          <type/>
        </argument>
        <argument line="328">
          <name>$parents</name>
          <default></default>
          <type/>
        </argument>
        <argument line="328">
          <name>$children</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent\Relationships" line="354" package="Default">
        <name>hydrate_pivot</name>
        <full_name>hydrate_pivot</full_name>
        <docblock line="348">
          <description>Hydrate the Pivot model on an array of results.</description>
          <long-description></long-description>
          <tag line="348" name="param" description="" type="array" variable="$results">
            <type by_reference="false">array</type>
          </tag>
          <tag line="348" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="354">
          <name>$results</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="391" package="Default">
        <name>with</name>
        <full_name>with</full_name>
        <docblock line="385">
          <description>Set the columns on the joining table that should be fetched.</description>
          <long-description></long-description>
          <tag line="385" name="param" description="" type="array" variable="$column">
            <type by_reference="false">array</type>
          </tag>
          <tag line="385" name="return" description="" type="\Laravel\Database\Eloquent\Relationships\Relationship">
            <type by_reference="false">\Laravel\Database\Eloquent\Relationships\Relationship</type>
          </tag>
        </docblock>
        <argument line="391">
          <name>$columns</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="410" package="Default">
        <name>pivot</name>
        <full_name>pivot</full_name>
        <docblock line="405">
          <description>Get a relationship instance of the pivot table.</description>
          <long-description></long-description>
          <tag line="405" name="return" description="" type="\Laravel\Database\Eloquent\Relationships\Has_Many">
            <type by_reference="false">\Laravel\Database\Eloquent\Relationships\Has_Many</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent\Relationships" line="422" package="Default">
        <name>other_key</name>
        <full_name>other_key</full_name>
        <docblock line="417">
          <description>Get the other or associated key for the relationship.</description>
          <long-description></long-description>
          <tag line="417" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent\Relationships" line="432" package="Default">
        <name>associated_key</name>
        <full_name>associated_key</full_name>
        <docblock line="427">
          <description>Get the fully qualified associated table's primary key.</description>
          <long-description></long-description>
          <tag line="427" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/eloquent/relationships/has_many_and_belongs_to.php</error>
      <error line="7" code="50000">No DocBlock was found for \Laravel\Database\Eloquent\Relationships\Has_Many_And_Belongs_To</error>
      <error line="59" code="50015">Argument $model is missing from the Docblock of joining()</error>
      <error line="59" code="50015">Argument $associated is missing from the Docblock of joining()</error>
      <error line="321" code="50014">Name of argument $relationship does not match with the DocBlock's name $parents in match()</error>
      <error line="321" code="50014">Name of argument $parents does not match with the DocBlock's name $children in match()</error>
      <error line="321" code="50015">Argument $children is missing from the Docblock of match()</error>
      <error line="385" code="50014">Name of argument $columns does not match with the DocBlock's name $column in with()</error>
      <notice line="385" code="50013">Parameter $column could not be found in with()</notice>
    </parse_markers>
  </file>
  <file path="laravel/database/eloquent/relationships/has_one.php" hash="5275e120e9c6403c983d3695a7fd3c09" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Eloquent\Relationships" line="3" package="Default">
      <extends>\Laravel\Database\Eloquent\Relationships\Has_One_Or_Many</extends>
      <name>Has_One</name>
      <full_name>\Laravel\Database\Eloquent\Relationships\Has_One</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="10" package="Default">
        <name>results</name>
        <full_name>results</full_name>
        <docblock line="5">
          <description>Get the properly hydrated results for the relationship.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="\Laravel\Database\Eloquent\Relationships\Model">
            <type by_reference="false">\Laravel\Database\Eloquent\Relationships\Model</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="22" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="15">
          <description>Initialize a relationship on an array of parent models.</description>
          <long-description></long-description>
          <tag line="15" name="param" description="" type="array" variable="$parents">
            <type by_reference="false">array</type>
          </tag>
          <tag line="15" name="param" description="" type="string" variable="$relationship">
            <type by_reference="false">string</type>
          </tag>
          <tag line="15" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$parents</name>
          <default></default>
          <type/>
        </argument>
        <argument line="22">
          <name>$relationship</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="37" package="Default">
        <name>match</name>
        <full_name>match</full_name>
        <docblock line="30">
          <description>Match eagerly loaded child models to their parent models.</description>
          <long-description></long-description>
          <tag line="30" name="param" description="" type="array" variable="$parents">
            <type by_reference="false">array</type>
          </tag>
          <tag line="30" name="param" description="" type="array" variable="$children">
            <type by_reference="false">array</type>
          </tag>
          <tag line="30" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$relationship</name>
          <default></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$parents</name>
          <default></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$children</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/eloquent/relationships/has_one.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Database\Eloquent\Relationships\Has_One</error>
      <error line="30" code="50014">Name of argument $relationship does not match with the DocBlock's name $parents in match()</error>
      <error line="30" code="50014">Name of argument $parents does not match with the DocBlock's name $children in match()</error>
      <error line="30" code="50015">Argument $children is missing from the Docblock of match()</error>
    </parse_markers>
  </file>
  <file path="laravel/database/eloquent/relationships/belongs_to.php" hash="a53eb7fb6bd6223f3b61ddfc2da02dc0" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Eloquent\Relationships" line="3" package="Default">
      <extends>\Laravel\Database\Eloquent\Relationships\Relationship</extends>
      <name>Belongs_To</name>
      <full_name>\Laravel\Database\Eloquent\Relationships\Belongs_To</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="10" package="Default">
        <name>results</name>
        <full_name>results</full_name>
        <docblock line="5">
          <description>Get the properly hydrated results for the relationship.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="\Laravel\Database\Eloquent\Relationships\Model">
            <type by_reference="false">\Laravel\Database\Eloquent\Relationships\Model</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="21" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="15">
          <description>Update the parent model of the relationship.</description>
          <long-description></long-description>
          <tag line="15" name="param" description="" type="\Laravel\Database\Eloquent\Relationships\Model|array" variable="$attributes">
            <type by_reference="false">\Laravel\Database\Eloquent\Relationships\Model</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="15" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="21">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent\Relationships" line="33" package="Default">
        <name>constrain</name>
        <full_name>constrain</full_name>
        <docblock line="28">
          <description>Set the proper constraints on the relationship table.</description>
          <long-description></long-description>
          <tag line="28" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="45" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="38">
          <description>Initialize a relationship on an array of parent models.</description>
          <long-description></long-description>
          <tag line="38" name="param" description="" type="array" variable="$parents">
            <type by_reference="false">array</type>
          </tag>
          <tag line="38" name="param" description="" type="string" variable="$relationship">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$parents</name>
          <default></default>
          <type/>
        </argument>
        <argument line="45">
          <name>$relationship</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="59" package="Default">
        <name>eagerly_constrain</name>
        <full_name>eagerly_constrain</full_name>
        <docblock line="53">
          <description>Set the proper constraints on the relationship table for an eager load.</description>
          <long-description></long-description>
          <tag line="53" name="param" description="" type="array" variable="$results">
            <type by_reference="false">array</type>
          </tag>
          <tag line="53" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$results</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="86" package="Default">
        <name>match</name>
        <full_name>match</full_name>
        <docblock line="79">
          <description>Match eagerly loaded child models to their parent models.</description>
          <long-description></long-description>
          <tag line="79" name="param" description="" type="array" variable="$children">
            <type by_reference="false">array</type>
          </tag>
          <tag line="79" name="param" description="" type="array" variable="$parents">
            <type by_reference="false">array</type>
          </tag>
          <tag line="79" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$relationship</name>
          <default></default>
          <type/>
        </argument>
        <argument line="86">
          <name>$children</name>
          <default></default>
          <type/>
        </argument>
        <argument line="86">
          <name>$parents</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="111" package="Default">
        <name>foreign_value</name>
        <full_name>foreign_value</full_name>
        <docblock line="106">
          <description>Get the value of the foreign key from the base model.</description>
          <long-description></long-description>
          <tag line="106" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent\Relationships" line="122" package="Default">
        <name>bind</name>
        <full_name>bind</full_name>
        <docblock line="116">
          <description>Bind an object over a belongs-to relation using its id.</description>
          <long-description></long-description>
          <tag line="116" name="return" description="" type="\Laravel\Database\Eloquent\Relationships\Eloquent">
            <type by_reference="false">\Laravel\Database\Eloquent\Relationships\Eloquent</type>
          </tag>
        </docblock>
        <argument line="122">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/eloquent/relationships/belongs_to.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Database\Eloquent\Relationships\Belongs_To</error>
      <error line="79" code="50014">Name of argument $relationship does not match with the DocBlock's name $children in match()</error>
      <error line="79" code="50014">Name of argument $children does not match with the DocBlock's name $parents in match()</error>
      <error line="79" code="50015">Argument $parents is missing from the Docblock of match()</error>
      <error line="116" code="50015">Argument $id is missing from the Docblock of bind()</error>
    </parse_markers>
  </file>
  <file path="laravel/database/eloquent/query.php" hash="1af81f627ca3831c09085e6c6067e4b5" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database\Eloquent" line="7" package="Default">
      <extends/>
      <name>Query</name>
      <full_name>\Laravel\Database\Eloquent\Query</full_name>
      <property final="false" static="false" visibility="public" line="14" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$model</name>
        <default></default>
        <docblock line="9">
          <description>The model instance being queried.</description>
          <long-description></long-description>
          <tag line="9" name="var" description="" type="\Laravel\Database\Eloquent\Model">
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$table</name>
        <default></default>
        <docblock line="16">
          <description>The fluent query builder for the query instance.</description>
          <long-description></long-description>
          <tag line="16" name="var" description="" type="\Laravel\Database\Eloquent\Query">
            <type by_reference="false">\Laravel\Database\Eloquent\Query</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$includes</name>
        <default>array()</default>
        <docblock line="23">
          <description>The relationships that should be eagerly loaded by the query.</description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="35" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$passthru</name>
        <default>array('lists', 'only', 'insert', 'insert_get_id', 'update', 'increment', 'delete', 'decrement', 'count', 'min', 'max', 'avg', 'sum')</default>
        <docblock line="30">
          <description>The methods that should be returned from the fluent query builder.</description>
          <long-description></long-description>
          <tag line="30" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="46" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="40">
          <description>Creat a new query instance for a model.</description>
          <long-description></long-description>
          <tag line="40" name="param" description="" type="\Laravel\Database\Eloquent\Model" variable="$model">
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
          </tag>
          <tag line="40" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="60" package="Default">
        <name>find</name>
        <full_name>find</full_name>
        <docblock line="53">
          <description>Find a model by its primary key.</description>
          <long-description></long-description>
          <tag line="53" name="param" description="" type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="53" name="param" description="" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="53" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="60">
          <name>$columns</name>
          <default>array('*')</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="75" package="Default">
        <name>first</name>
        <full_name>first</full_name>
        <docblock line="69">
          <description>Get the first model result for the query.</description>
          <long-description></long-description>
          <tag line="69" name="param" description="" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="69" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$columns</name>
          <default>array('*')</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="88" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="82">
          <description>Get all of the model results for the query.</description>
          <long-description></long-description>
          <tag line="82" name="param" description="" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="82" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$columns</name>
          <default>array('*')</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="100" package="Default">
        <name>paginate</name>
        <full_name>paginate</full_name>
        <docblock line="93">
          <description>Get an array of paginated model results.</description>
          <long-description></long-description>
          <tag line="93" name="param" description="" type="int" variable="$per_page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="93" name="param" description="" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="93" name="return" description="" type="\Laravel\Database\Eloquent\Paginator">
            <type by_reference="false">\Laravel\Database\Eloquent\Paginator</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$per_page</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="100">
          <name>$columns</name>
          <default>array('*')</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="121" package="Default">
        <name>hydrate</name>
        <full_name>hydrate</full_name>
        <docblock line="114">
          <description>Hydrate an array of models from the given results.</description>
          <long-description></long-description>
          <tag line="114" name="param" description="" type="\Laravel\Database\Eloquent\Model" variable="$model">
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
          </tag>
          <tag line="114" name="param" description="" type="array" variable="$results">
            <type by_reference="false">array</type>
          </tag>
          <tag line="114" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="121">
          <name>$results</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent" line="179" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="171">
          <description>Hydrate an eagerly loaded relationship on the model results.</description>
          <long-description></long-description>
          <tag line="171" name="param" description="" type="array" variable="$results">
            <type by_reference="false">array</type>
          </tag>
          <tag line="171" name="param" description="" type="string" variable="$relationship">
            <type by_reference="false">string</type>
          </tag>
          <tag line="171" name="param" description="" type="array|null" variable="$constraints">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="171" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$results</name>
          <default></default>
          <type/>
        </argument>
        <argument line="179">
          <name>$relationship</name>
          <default></default>
          <type/>
        </argument>
        <argument line="179">
          <name>$constraints</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent" line="211" package="Default">
        <name>nested_includes</name>
        <full_name>nested_includes</full_name>
        <docblock line="205">
          <description>Gather the nested includes for a given relationship.</description>
          <long-description></long-description>
          <tag line="205" name="param" description="" type="string" variable="$relationship">
            <type by_reference="false">string</type>
          </tag>
          <tag line="205" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="211">
          <name>$relationship</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent" line="234" package="Default">
        <name>model_includes</name>
        <full_name>model_includes</full_name>
        <docblock line="229">
          <description>Get the eagerly loaded relationships for the model.</description>
          <long-description></long-description>
          <tag line="229" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent" line="259" package="Default">
        <name>table</name>
        <full_name>table</full_name>
        <docblock line="254">
          <description>Get a fluent query builder for the model.</description>
          <long-description></long-description>
          <tag line="254" name="return" description="" type="\Laravel\Database\Eloquent\Query">
            <type by_reference="false">\Laravel\Database\Eloquent\Query</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="269" package="Default">
        <name>connection</name>
        <full_name>connection</full_name>
        <docblock line="264">
          <description>Get the database connection for the model.</description>
          <long-description></long-description>
          <tag line="264" name="return" description="" type="\Laravel\Database\Eloquent\Connection">
            <type by_reference="false">\Laravel\Database\Eloquent\Connection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="281" package="Default">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="274">
          <description>Handle dynamic method calls to the query.</description>
          <long-description></long-description>
          <tag line="274" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="274" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="274" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="281">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="281">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/eloquent/query.php</error>
      <error line="7" code="50000">No DocBlock was found for \Laravel\Database\Eloquent\Query</error>
    </parse_markers>
  </file>
  <file path="laravel/database/eloquent/model.php" hash="cc563ff1a962e8d15d1554ee2a210fc7" package="Default">
    <class final="false" abstract="true" namespace="Laravel\Database\Eloquent" line="8" package="Default">
      <extends/>
      <name>Model</name>
      <full_name>\Laravel\Database\Eloquent\Model</full_name>
      <property final="false" static="false" visibility="public" line="15" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$attributes</name>
        <default>array()</default>
        <docblock line="10">
          <description>All of the model's attributes.</description>
          <long-description></long-description>
          <tag line="10" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="22" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$original</name>
        <default>array()</default>
        <docblock line="17">
          <description>The model's attributes in their original state.</description>
          <long-description></long-description>
          <tag line="17" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="29" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$relationships</name>
        <default>array()</default>
        <docblock line="24">
          <description>The relationships that have been loaded for the query.</description>
          <long-description></long-description>
          <tag line="24" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="36" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$exists</name>
        <default>false</default>
        <docblock line="31">
          <description>Indicates if the model exists in the database.</description>
          <long-description></long-description>
          <tag line="31" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="43" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$includes</name>
        <default>array()</default>
        <docblock line="38">
          <description>The relationships that should be eagerly loaded.</description>
          <long-description></long-description>
          <tag line="38" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="50" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$key</name>
        <default>'id'</default>
        <docblock line="45">
          <description>The primary key for the model on the database table.</description>
          <long-description></long-description>
          <tag line="45" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="57" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$accessible</name>
        <default></default>
        <docblock line="52">
          <description>The attributes that are accessible for mass assignment.</description>
          <long-description></long-description>
          <tag line="52" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="64" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$hidden</name>
        <default>array()</default>
        <docblock line="59">
          <description>The attributes that should be excluded from to_array.</description>
          <long-description></long-description>
          <tag line="59" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="71" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$timestamps</name>
        <default>true</default>
        <docblock line="66">
          <description>Indicates if the model has update and creation timestamps.</description>
          <long-description></long-description>
          <tag line="66" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="78" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$table</name>
        <default></default>
        <docblock line="73">
          <description>The name of the table associated with the model.</description>
          <long-description></long-description>
          <tag line="73" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="85" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$connection</name>
        <default></default>
        <docblock line="80">
          <description>The name of the database connection that should be used for the model.</description>
          <long-description></long-description>
          <tag line="80" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="92" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$sequence</name>
        <default></default>
        <docblock line="87">
          <description>The name of the sequence associated with the model.</description>
          <long-description></long-description>
          <tag line="87" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="99" namespace="Laravel\Database\Eloquent" package="Default">
        <name>$per_page</name>
        <default>20</default>
        <docblock line="94">
          <description>The default number of models to show per page when paginating.</description>
          <long-description></long-description>
          <tag line="94" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="108" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="101">
          <description>Create a new Eloquent model instance.</description>
          <long-description></long-description>
          <tag line="101" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="101" name="param" description="" type="bool" variable="$exists">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="101" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="108">
          <name>$exists</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="122" package="Default">
        <name>fill</name>
        <full_name>fill</full_name>
        <docblock line="115">
          <description>Hydrate the model with an array of attributes.</description>
          <long-description></long-description>
          <tag line="115" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="115" name="param" description="" type="bool" variable="$raw">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="115" name="return" description="" type="\Laravel\Database\Eloquent\Model">
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
          </tag>
        </docblock>
        <argument line="122">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="122">
          <name>$raw</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="175" package="Default">
        <name>fill_raw</name>
        <full_name>fill_raw</full_name>
        <docblock line="167">
          <description>Fill the model with the contents of the array.</description>
          <long-description>&lt;p&gt;No mutators or accessibility checks will be accounted for.&lt;/p&gt;</long-description>
          <tag line="167" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="167" name="return" description="" type="\Laravel\Database\Eloquent\Model">
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Database\Eloquent" line="186" package="Default">
        <name>accessible</name>
        <full_name>accessible</full_name>
        <docblock line="180">
          <description>Set the accessible attributes for the given model.</description>
          <long-description></long-description>
          <tag line="180" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="180" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$attributes</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Database\Eloquent" line="201" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="193">
          <description>Create a new model and store it in the database.</description>
          <long-description>&lt;p&gt;If save is successful, the model will be returned, otherwise false.&lt;/p&gt;</long-description>
          <tag line="193" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="193" name="return" description="" type="\Laravel\Database\Eloquent\Model|false">
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Database\Eloquent" line="217" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="210">
          <description>Update a model instance in the database.</description>
          <long-description></long-description>
          <tag line="210" name="param" description="" type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="210" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="210" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="217">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="217">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Database\Eloquent" line="233" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="228">
          <description>Get all of the models in the database.</description>
          <long-description></long-description>
          <tag line="228" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="244" package="Default">
        <name>_with</name>
        <full_name>_with</full_name>
        <docblock line="238">
          <description>The relationships that should be eagerly loaded by the query.</description>
          <long-description></long-description>
          <tag line="238" name="param" description="" type="array" variable="$includes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="238" name="return" description="" type="\Laravel\Database\Eloquent\Model">
            <type by_reference="false">\Laravel\Database\Eloquent\Model</type>
          </tag>
        </docblock>
        <argument line="244">
          <name>$includes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="258" package="Default">
        <name>has_one</name>
        <full_name>has_one</full_name>
        <docblock line="251">
          <description>Get the query for a one-to-one association.</description>
          <long-description></long-description>
          <tag line="251" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="251" name="param" description="" type="string" variable="$foreign">
            <type by_reference="false">string</type>
          </tag>
          <tag line="251" name="return" description="" type="\Laravel\Database\Eloquent\Relationship">
            <type by_reference="false">\Laravel\Database\Eloquent\Relationship</type>
          </tag>
        </docblock>
        <argument line="258">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="258">
          <name>$foreign</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="270" package="Default">
        <name>has_many</name>
        <full_name>has_many</full_name>
        <docblock line="263">
          <description>Get the query for a one-to-many association.</description>
          <long-description></long-description>
          <tag line="263" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="263" name="param" description="" type="string" variable="$foreign">
            <type by_reference="false">string</type>
          </tag>
          <tag line="263" name="return" description="" type="\Laravel\Database\Eloquent\Relationship">
            <type by_reference="false">\Laravel\Database\Eloquent\Relationship</type>
          </tag>
        </docblock>
        <argument line="270">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="270">
          <name>$foreign</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent" line="283" package="Default">
        <name>has_one_or_many</name>
        <full_name>has_one_or_many</full_name>
        <docblock line="275">
          <description>Get the query for a one-to-one / many association.</description>
          <long-description></long-description>
          <tag line="275" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="param" description="" type="string" variable="$foreign">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="return" description="" type="\Laravel\Database\Eloquent\Relationship">
            <type by_reference="false">\Laravel\Database\Eloquent\Relationship</type>
          </tag>
        </docblock>
        <argument line="283">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="283">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="283">
          <name>$foreign</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="302" package="Default">
        <name>belongs_to</name>
        <full_name>belongs_to</full_name>
        <docblock line="295">
          <description>Get the query for a one-to-one (inverse) relationship.</description>
          <long-description></long-description>
          <tag line="295" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="295" name="param" description="" type="string" variable="$foreign">
            <type by_reference="false">string</type>
          </tag>
          <tag line="295" name="return" description="" type="\Laravel\Database\Eloquent\Relationship">
            <type by_reference="false">\Laravel\Database\Eloquent\Relationship</type>
          </tag>
        </docblock>
        <argument line="302">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="302">
          <name>$foreign</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="326" package="Default">
        <name>has_many_and_belongs_to</name>
        <full_name>has_many_and_belongs_to</full_name>
        <docblock line="317">
          <description>Get the query for a many-to-many relationship.</description>
          <long-description></long-description>
          <tag line="317" name="param" description="" type="string" variable="$model">
            <type by_reference="false">string</type>
          </tag>
          <tag line="317" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="317" name="param" description="" type="string" variable="$foreign">
            <type by_reference="false">string</type>
          </tag>
          <tag line="317" name="param" description="" type="string" variable="$other">
            <type by_reference="false">string</type>
          </tag>
          <tag line="317" name="return" description="" type="\Laravel\Database\Eloquent\Relationships\Has_Many_And_Belongs_To">
            <type by_reference="false">\Laravel\Database\Eloquent\Relationships\Has_Many_And_Belongs_To</type>
          </tag>
        </docblock>
        <argument line="326">
          <name>$model</name>
          <default></default>
          <type/>
        </argument>
        <argument line="326">
          <name>$table</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="326">
          <name>$foreign</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="326">
          <name>$other</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="336" package="Default">
        <name>push</name>
        <full_name>push</full_name>
        <docblock line="331">
          <description>Save the model and all of its relations to the database.</description>
          <long-description></long-description>
          <tag line="331" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="362" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="357">
          <description>Save the model instance to the database.</description>
          <long-description></long-description>
          <tag line="357" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="417" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="412">
          <description>Delete the model from the database.</description>
          <long-description></long-description>
          <tag line="412" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="436" package="Default">
        <name>timestamp</name>
        <full_name>timestamp</full_name>
        <docblock line="431">
          <description>Set the update and creation timestamps on the model.</description>
          <long-description></long-description>
          <tag line="431" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="448" package="Default">
        <name>touch</name>
        <full_name>touch</full_name>
        <docblock line="443">
          <description>Updates the timestamp on the model and immediately saves it.</description>
          <long-description></long-description>
          <tag line="443" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent" line="459" package="Default">
        <name>_query</name>
        <full_name>_query</full_name>
        <docblock line="454">
          <description>Get a new fluent query builder instance for the model.</description>
          <long-description></long-description>
          <tag line="454" name="return" description="" type="\Laravel\Database\Eloquent\Query">
            <type by_reference="false">\Laravel\Database\Eloquent\Query</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="469" package="Default">
        <name>sync</name>
        <full_name>sync</full_name>
        <docblock line="464">
          <description>Sync the original attributes with the current attributes.</description>
          <long-description></long-description>
          <tag line="464" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="482" package="Default">
        <name>changed</name>
        <full_name>changed</full_name>
        <docblock line="476">
          <description>Determine if a given attribute has changed from its original state.</description>
          <long-description></long-description>
          <tag line="476" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="476" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="482">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="494" package="Default">
        <name>dirty</name>
        <full_name>dirty</full_name>
        <docblock line="487">
          <description>Determine if the model has been changed from its original state.</description>
          <long-description>&lt;p&gt;Models that haven't been persisted to storage are always considered dirty.&lt;/p&gt;</long-description>
          <tag line="487" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="504" package="Default">
        <name>table</name>
        <full_name>table</full_name>
        <docblock line="499">
          <description>Get the name of the table associated with the model.</description>
          <long-description></long-description>
          <tag line="499" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="514" package="Default">
        <name>get_dirty</name>
        <full_name>get_dirty</full_name>
        <docblock line="509">
          <description>Get the dirty attributes for the model.</description>
          <long-description></long-description>
          <tag line="509" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="534" package="Default">
        <name>get_key</name>
        <full_name>get_key</full_name>
        <docblock line="529">
          <description>Get the value of the primary key for the model.</description>
          <long-description></long-description>
          <tag line="529" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="545" package="Default">
        <name>set_key</name>
        <full_name>set_key</full_name>
        <docblock line="539">
          <description>Set the value of the primary key for the model.</description>
          <long-description></long-description>
          <tag line="539" name="param" description="" type="int" variable="$value">
            <type by_reference="false">int</type>
          </tag>
          <tag line="539" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="545">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="555" package="Default">
        <name>get_attribute</name>
        <full_name>get_attribute</full_name>
        <docblock line="550">
          <description>Get a given attribute from the model.</description>
          <long-description></long-description>
          <tag line="550" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="555">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="567" package="Default">
        <name>set_attribute</name>
        <full_name>set_attribute</full_name>
        <docblock line="560">
          <description>Set an attribute's value on the model.</description>
          <long-description></long-description>
          <tag line="560" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="560" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="560" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="567">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="567">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="577" package="Default">
        <name>purge</name>
        <full_name>purge</full_name>
        <docblock line="572">
          <description>Remove an attribute from the model.</description>
          <long-description></long-description>
          <tag line="572" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="577">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="589" package="Default">
        <name>to_array</name>
        <full_name>to_array</full_name>
        <docblock line="584">
          <description>Get the model attributes and relationships in array form.</description>
          <long-description></long-description>
          <tag line="584" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database\Eloquent" line="644" package="Default">
        <name>fire_event</name>
        <full_name>fire_event</full_name>
        <docblock line="638">
          <description>Fire a given event for the model.</description>
          <long-description></long-description>
          <tag line="638" name="param" description="" type="string" variable="$event">
            <type by_reference="false">string</type>
          </tag>
          <tag line="638" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="644">
          <name>$event</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="657" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="651">
          <description>Handle the dynamic retrieval of attributes and associations.</description>
          <long-description></long-description>
          <tag line="651" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="651" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="657">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="699" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="692">
          <description>Handle the dynamic setting of attributes.</description>
          <long-description></long-description>
          <tag line="692" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="692" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="692" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="699">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="699">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="710" package="Default">
        <name>__isset</name>
        <full_name>__isset</full_name>
        <docblock line="704">
          <description>Determine if an attribute exists on the model.</description>
          <long-description></long-description>
          <tag line="704" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="704" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="710">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="726" package="Default">
        <name>__unset</name>
        <full_name>__unset</full_name>
        <docblock line="720">
          <description>Remove an attribute from the model.</description>
          <long-description></long-description>
          <tag line="720" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="720" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="726">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database\Eloquent" line="741" package="Default">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="734">
          <description>Handle dynamic method calls on the model.</description>
          <long-description></long-description>
          <tag line="734" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="734" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="734" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="741">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="741">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Database\Eloquent" line="791" package="Default">
        <name>__callStatic</name>
        <full_name>__callStatic</full_name>
        <docblock line="784">
          <description>Dynamically handle static method calls on the model.</description>
          <long-description></long-description>
          <tag line="784" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="784" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="784" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="791">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="791">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/eloquent/model.php</error>
      <error line="8" code="50000">No DocBlock was found for \Laravel\Database\Eloquent\Model</error>
    </parse_markers>
  </file>
  <file path="laravel/database/query.php" hash="3cb00426d113047257830921b7b62a90" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database" line="9" package="Default">
      <extends/>
      <name>Query</name>
      <full_name>\Laravel\Database\Query</full_name>
      <property final="false" static="false" visibility="public" line="16" namespace="Laravel\Database" package="Default">
        <name>$connection</name>
        <default></default>
        <docblock line="11">
          <description>The database connection.</description>
          <long-description></long-description>
          <tag line="11" name="var" description="" type="\Laravel\Database\Connection">
            <type by_reference="false">\Laravel\Database\Connection</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="Laravel\Database" package="Default">
        <name>$grammar</name>
        <default></default>
        <docblock line="18">
          <description>The query grammar instance.</description>
          <long-description></long-description>
          <tag line="18" name="var" description="" type="\Laravel\Database\Query\Grammars\Grammar">
            <type by_reference="false">\Laravel\Database\Query\Grammars\Grammar</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="30" namespace="Laravel\Database" package="Default">
        <name>$selects</name>
        <default></default>
        <docblock line="25">
          <description>The SELECT clause.</description>
          <long-description></long-description>
          <tag line="25" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="Laravel\Database" package="Default">
        <name>$aggregate</name>
        <default></default>
        <docblock line="32">
          <description>The aggregating column and function.</description>
          <long-description></long-description>
          <tag line="32" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="44" namespace="Laravel\Database" package="Default">
        <name>$distinct</name>
        <default>false</default>
        <docblock line="39">
          <description>Indicates if the query should return distinct results.</description>
          <long-description></long-description>
          <tag line="39" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="51" namespace="Laravel\Database" package="Default">
        <name>$from</name>
        <default></default>
        <docblock line="46">
          <description>The table name.</description>
          <long-description></long-description>
          <tag line="46" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="58" namespace="Laravel\Database" package="Default">
        <name>$joins</name>
        <default></default>
        <docblock line="53">
          <description>The table joins.</description>
          <long-description></long-description>
          <tag line="53" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="65" namespace="Laravel\Database" package="Default">
        <name>$wheres</name>
        <default></default>
        <docblock line="60">
          <description>The WHERE clauses.</description>
          <long-description></long-description>
          <tag line="60" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="72" namespace="Laravel\Database" package="Default">
        <name>$groupings</name>
        <default></default>
        <docblock line="67">
          <description>The GROUP BY clauses.</description>
          <long-description></long-description>
          <tag line="67" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="79" namespace="Laravel\Database" package="Default">
        <name>$havings</name>
        <default></default>
        <docblock line="74">
          <description>The HAVING clauses.</description>
          <long-description></long-description>
          <tag line="74" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="86" namespace="Laravel\Database" package="Default">
        <name>$orderings</name>
        <default></default>
        <docblock line="81">
          <description>The ORDER BY clauses.</description>
          <long-description></long-description>
          <tag line="81" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="93" namespace="Laravel\Database" package="Default">
        <name>$limit</name>
        <default></default>
        <docblock line="88">
          <description>The LIMIT value.</description>
          <long-description></long-description>
          <tag line="88" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="100" namespace="Laravel\Database" package="Default">
        <name>$offset</name>
        <default></default>
        <docblock line="95">
          <description>The OFFSET value.</description>
          <long-description></long-description>
          <tag line="95" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="107" namespace="Laravel\Database" package="Default">
        <name>$bindings</name>
        <default>array()</default>
        <docblock line="102">
          <description>The query value bindings.</description>
          <long-description></long-description>
          <tag line="102" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="117" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="109">
          <description>Create a new query instance.</description>
          <long-description></long-description>
          <tag line="109" name="param" description="" type="\Laravel\Database\Connection" variable="$connection">
            <type by_reference="false">\Laravel\Database\Connection</type>
          </tag>
          <tag line="109" name="param" description="" type="\Laravel\Database\Grammar" variable="$grammar">
            <type by_reference="false">\Laravel\Database\Grammar</type>
          </tag>
          <tag line="109" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="109" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$connection</name>
          <default></default>
          <type>\Laravel\Database\Connection</type>
        </argument>
        <argument line="117">
          <name>$grammar</name>
          <default></default>
          <type>\Laravel\Database\Query\Grammars\Grammar</type>
        </argument>
        <argument line="117">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="129" package="Default">
        <name>distinct</name>
        <full_name>distinct</full_name>
        <docblock line="124">
          <description>Force the query to return distinct results.</description>
          <long-description></long-description>
          <tag line="124" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="141" package="Default">
        <name>select</name>
        <full_name>select</full_name>
        <docblock line="135">
          <description>Add an array of columns to the SELECT clause.</description>
          <long-description></long-description>
          <tag line="135" name="param" description="" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="135" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$columns</name>
          <default>array('*')</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="157" package="Default">
        <name>join</name>
        <full_name>join</full_name>
        <docblock line="147">
          <description>Add a join clause to the query.</description>
          <long-description></long-description>
          <tag line="147" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="147" name="param" description="" type="string" variable="$column1">
            <type by_reference="false">string</type>
          </tag>
          <tag line="147" name="param" description="" type="string" variable="$operator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="147" name="param" description="" type="string" variable="$column2">
            <type by_reference="false">string</type>
          </tag>
          <tag line="147" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="147" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="157">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="157">
          <name>$column1</name>
          <default></default>
          <type/>
        </argument>
        <argument line="157">
          <name>$operator</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="157">
          <name>$column2</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="157">
          <name>$type</name>
          <default>'INNER'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="193" package="Default">
        <name>left_join</name>
        <full_name>left_join</full_name>
        <docblock line="184">
          <description>Add a left join to the query.</description>
          <long-description></long-description>
          <tag line="184" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="184" name="param" description="" type="string" variable="$column1">
            <type by_reference="false">string</type>
          </tag>
          <tag line="184" name="param" description="" type="string" variable="$operator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="184" name="param" description="" type="string" variable="$column2">
            <type by_reference="false">string</type>
          </tag>
          <tag line="184" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="193">
          <name>$column1</name>
          <default></default>
          <type/>
        </argument>
        <argument line="193">
          <name>$operator</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="193">
          <name>$column2</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="203" package="Default">
        <name>reset_where</name>
        <full_name>reset_where</full_name>
        <docblock line="198">
          <description>Reset the where clause to its initial state.</description>
          <long-description></long-description>
          <tag line="198" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="216" package="Default">
        <name>raw_where</name>
        <full_name>raw_where</full_name>
        <docblock line="208">
          <description>Add a raw where condition to the query.</description>
          <long-description></long-description>
          <tag line="208" name="param" description="" type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="208" name="param" description="" type="array" variable="$bindings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="208" name="param" description="" type="string" variable="$connector">
            <type by_reference="false">string</type>
          </tag>
          <tag line="208" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="216">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
        <argument line="216">
          <name>$bindings</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="216">
          <name>$connector</name>
          <default>'AND'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="232" package="Default">
        <name>raw_or_where</name>
        <full_name>raw_or_where</full_name>
        <docblock line="225">
          <description>Add a raw or where condition to the query.</description>
          <long-description></long-description>
          <tag line="225" name="param" description="" type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="225" name="param" description="" type="array" variable="$bindings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="225" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="232">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
        <argument line="232">
          <name>$bindings</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="246" package="Default">
        <name>where</name>
        <full_name>where</full_name>
        <docblock line="237">
          <description>Add a where condition to the query.</description>
          <long-description></long-description>
          <tag line="237" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="237" name="param" description="" type="string" variable="$operator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="237" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="237" name="param" description="" type="string" variable="$connector">
            <type by_reference="false">string</type>
          </tag>
          <tag line="237" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="246">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="246">
          <name>$operator</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="246">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="246">
          <name>$connector</name>
          <default>'AND'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="273" package="Default">
        <name>or_where</name>
        <full_name>or_where</full_name>
        <docblock line="265">
          <description>Add an or where condition to the query.</description>
          <long-description></long-description>
          <tag line="265" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="265" name="param" description="" type="string" variable="$operator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="265" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="265" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="273">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="273">
          <name>$operator</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="273">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="284" package="Default">
        <name>or_where_id</name>
        <full_name>or_where_id</full_name>
        <docblock line="278">
          <description>Add an or where condition for the primary key to the query.</description>
          <long-description></long-description>
          <tag line="278" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="278" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="284">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="298" package="Default">
        <name>where_in</name>
        <full_name>where_in</full_name>
        <docblock line="289">
          <description>Add a where in condition to the query.</description>
          <long-description></long-description>
          <tag line="289" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="289" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="289" name="param" description="" type="string" variable="$connector">
            <type by_reference="false">string</type>
          </tag>
          <tag line="289" name="param" description="" type="bool" variable="$not">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="289" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="298">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="298">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
        <argument line="298">
          <name>$connector</name>
          <default>'AND'</default>
          <type/>
        </argument>
        <argument line="298">
          <name>$not</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="316" package="Default">
        <name>or_where_in</name>
        <full_name>or_where_in</full_name>
        <docblock line="309">
          <description>Add an or where in condition to the query.</description>
          <long-description></long-description>
          <tag line="309" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="309" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="309" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="316">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="316">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="329" package="Default">
        <name>where_not_in</name>
        <full_name>where_not_in</full_name>
        <docblock line="321">
          <description>Add a where not in condition to the query.</description>
          <long-description></long-description>
          <tag line="321" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="321" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="321" name="param" description="" type="string" variable="$connector">
            <type by_reference="false">string</type>
          </tag>
          <tag line="321" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="329">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="329">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
        <argument line="329">
          <name>$connector</name>
          <default>'AND'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="341" package="Default">
        <name>or_where_not_in</name>
        <full_name>or_where_not_in</full_name>
        <docblock line="334">
          <description>Add an or where not in condition to the query.</description>
          <long-description></long-description>
          <tag line="334" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="334" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="334" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="341">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="341">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="356" package="Default">
        <name>where_between</name>
        <full_name>where_between</full_name>
        <docblock line="346">
          <description>Add a BETWEEN condition to the query</description>
          <long-description></long-description>
          <tag line="346" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="346" name="param" description="" type="mixed" variable="$min">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="346" name="param" description="" type="mixed" variable="$max">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="346" name="param" description="" type="string" variable="$connector">
            <type by_reference="false">string</type>
          </tag>
          <tag line="346" name="param" description="" type="boolean" variable="$not">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="346" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="356">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="356">
          <name>$min</name>
          <default></default>
          <type/>
        </argument>
        <argument line="356">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
        <argument line="356">
          <name>$connector</name>
          <default>'AND'</default>
          <type/>
        </argument>
        <argument line="356">
          <name>$not</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="376" package="Default">
        <name>or_where_between</name>
        <full_name>or_where_between</full_name>
        <docblock line="368">
          <description>Add a OR BETWEEN condition to the query</description>
          <long-description></long-description>
          <tag line="368" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="368" name="param" description="" type="mixed" variable="$min">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="368" name="param" description="" type="mixed" variable="$max">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="368" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="376">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="376">
          <name>$min</name>
          <default></default>
          <type/>
        </argument>
        <argument line="376">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="389" package="Default">
        <name>where_not_between</name>
        <full_name>where_not_between</full_name>
        <docblock line="381">
          <description>Add a NOT BETWEEN condition to the query</description>
          <long-description></long-description>
          <tag line="381" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="381" name="param" description="" type="mixed" variable="$min">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="381" name="param" description="" type="mixed" variable="$max">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="381" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="389">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="389">
          <name>$min</name>
          <default></default>
          <type/>
        </argument>
        <argument line="389">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
        <argument line="389">
          <name>$connector</name>
          <default>'AND'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="402" package="Default">
        <name>or_where_not_between</name>
        <full_name>or_where_not_between</full_name>
        <docblock line="394">
          <description>Add a OR NOT BETWEEN condition to the query</description>
          <long-description></long-description>
          <tag line="394" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="394" name="param" description="" type="mixed" variable="$min">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="394" name="param" description="" type="mixed" variable="$max">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="394" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="402">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="402">
          <name>$min</name>
          <default></default>
          <type/>
        </argument>
        <argument line="402">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="415" package="Default">
        <name>where_null</name>
        <full_name>where_null</full_name>
        <docblock line="407">
          <description>Add a where null condition to the query.</description>
          <long-description></long-description>
          <tag line="407" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="407" name="param" description="" type="string" variable="$connector">
            <type by_reference="false">string</type>
          </tag>
          <tag line="407" name="param" description="" type="bool" variable="$not">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="407" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="415">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="415">
          <name>$connector</name>
          <default>'AND'</default>
          <type/>
        </argument>
        <argument line="415">
          <name>$not</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="430" package="Default">
        <name>or_where_null</name>
        <full_name>or_where_null</full_name>
        <docblock line="424">
          <description>Add an or where null condition to the query.</description>
          <long-description></long-description>
          <tag line="424" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="424" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="430">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="442" package="Default">
        <name>where_not_null</name>
        <full_name>where_not_null</full_name>
        <docblock line="435">
          <description>Add a where not null condition to the query.</description>
          <long-description></long-description>
          <tag line="435" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="435" name="param" description="" type="string" variable="$connector">
            <type by_reference="false">string</type>
          </tag>
          <tag line="435" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="442">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="442">
          <name>$connector</name>
          <default>'AND'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="453" package="Default">
        <name>or_where_not_null</name>
        <full_name>or_where_not_null</full_name>
        <docblock line="447">
          <description>Add an or where not null condition to the query.</description>
          <long-description></long-description>
          <tag line="447" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="447" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="453">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="465" package="Default">
        <name>where_nested</name>
        <full_name>where_nested</full_name>
        <docblock line="458">
          <description>Add a nested where condition to the query.</description>
          <long-description></long-description>
          <tag line="458" name="param" description="" type="\Closure" variable="$callback">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="458" name="param" description="" type="string" variable="$connector">
            <type by_reference="false">string</type>
          </tag>
          <tag line="458" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="465">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
        <argument line="465">
          <name>$connector</name>
          <default>'AND'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Laravel\Database" line="496" package="Default">
        <name>dynamic_where</name>
        <full_name>dynamic_where</full_name>
        <docblock line="489">
          <description>Add dynamic where conditions to the query.</description>
          <long-description></long-description>
          <tag line="489" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="489" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="489" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="496">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="496">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="544" package="Default">
        <name>group_by</name>
        <full_name>group_by</full_name>
        <docblock line="538">
          <description>Add a grouping to the query.</description>
          <long-description></long-description>
          <tag line="538" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="538" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="544">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="557" package="Default">
        <name>having</name>
        <full_name>having</full_name>
        <docblock line="550">
          <description>Add a having to the query.</description>
          <long-description></long-description>
          <tag line="550" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="550" name="param" description="" type="string" variable="$operator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="550" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="557">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="557">
          <name>$operator</name>
          <default></default>
          <type/>
        </argument>
        <argument line="557">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="573" package="Default">
        <name>order_by</name>
        <full_name>order_by</full_name>
        <docblock line="566">
          <description>Add an ordering to the query.</description>
          <long-description></long-description>
          <tag line="566" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="566" name="param" description="" type="string" variable="$direction">
            <type by_reference="false">string</type>
          </tag>
          <tag line="566" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="573">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="573">
          <name>$direction</name>
          <default>'asc'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="585" package="Default">
        <name>skip</name>
        <full_name>skip</full_name>
        <docblock line="579">
          <description>Set the query offset.</description>
          <long-description></long-description>
          <tag line="579" name="param" description="" type="int" variable="$value">
            <type by_reference="false">int</type>
          </tag>
          <tag line="579" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="585">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="597" package="Default">
        <name>take</name>
        <full_name>take</full_name>
        <docblock line="591">
          <description>Set the query limit.</description>
          <long-description></long-description>
          <tag line="591" name="param" description="" type="int" variable="$value">
            <type by_reference="false">int</type>
          </tag>
          <tag line="591" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="597">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="610" package="Default">
        <name>for_page</name>
        <full_name>for_page</full_name>
        <docblock line="603">
          <description>Set the query limit and offset for a given page.</description>
          <long-description></long-description>
          <tag line="603" name="param" description="" type="int" variable="$page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="603" name="param" description="" type="int" variable="$per_page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="603" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="610">
          <name>$page</name>
          <default></default>
          <type/>
        </argument>
        <argument line="610">
          <name>$per_page</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="622" package="Default">
        <name>find</name>
        <full_name>find</full_name>
        <docblock line="615">
          <description>Find a record by the primary key.</description>
          <long-description></long-description>
          <tag line="615" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="615" name="param" description="" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="615" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="622">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="622">
          <name>$columns</name>
          <default>array('*')</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="633" package="Default">
        <name>only</name>
        <full_name>only</full_name>
        <docblock line="627">
          <description>Execute the query as a SELECT statement and return a single column.</description>
          <long-description></long-description>
          <tag line="627" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="627" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="633">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="646" package="Default">
        <name>first</name>
        <full_name>first</full_name>
        <docblock line="640">
          <description>Execute the query as a SELECT statement and return the first result.</description>
          <long-description></long-description>
          <tag line="640" name="param" description="" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="640" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="646">
          <name>$columns</name>
          <default>array('*')</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="665" package="Default">
        <name>lists</name>
        <full_name>lists</full_name>
        <docblock line="658">
          <description>Get an array with the values of a given column.</description>
          <long-description></long-description>
          <tag line="658" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="658" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="658" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="665">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="665">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="703" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="697">
          <description>Execute the query as a SELECT statement.</description>
          <long-description></long-description>
          <tag line="697" name="param" description="" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="697" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="703">
          <name>$columns</name>
          <default>array('*')</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="737" package="Default">
        <name>aggregate</name>
        <full_name>aggregate</full_name>
        <docblock line="730">
          <description>Get an aggregate value.</description>
          <long-description></long-description>
          <tag line="730" name="param" description="" type="string" variable="$aggregator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="730" name="param" description="" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="730" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="737">
          <name>$aggregator</name>
          <default></default>
          <type/>
        </argument>
        <argument line="737">
          <name>$columns</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="763" package="Default">
        <name>paginate</name>
        <full_name>paginate</full_name>
        <docblock line="756">
          <description>Get the paginated query results as a Paginator instance.</description>
          <long-description></long-description>
          <tag line="756" name="param" description="" type="int" variable="$per_page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="756" name="param" description="" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="756" name="return" description="" type="\Laravel\Paginator">
            <type by_reference="false">\Laravel\Paginator</type>
          </tag>
        </docblock>
        <argument line="763">
          <name>$per_page</name>
          <default>20</default>
          <type/>
        </argument>
        <argument line="763">
          <name>$columns</name>
          <default>array('*')</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="790" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="784">
          <description>Insert an array of values into the database table.</description>
          <long-description></long-description>
          <tag line="784" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="784" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="790">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="819" package="Default">
        <name>insert_get_id</name>
        <full_name>insert_get_id</full_name>
        <docblock line="812">
          <description>Insert an array of values into the database table and return the key.</description>
          <long-description></long-description>
          <tag line="812" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="812" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="812" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="819">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
        <argument line="819">
          <name>$column</name>
          <default>'id'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="847" package="Default">
        <name>increment</name>
        <full_name>increment</full_name>
        <docblock line="840">
          <description>Increment the value of a column by a given amount.</description>
          <long-description></long-description>
          <tag line="840" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="840" name="param" description="" type="int" variable="$amount">
            <type by_reference="false">int</type>
          </tag>
          <tag line="840" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="847">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="847">
          <name>$amount</name>
          <default>1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="859" package="Default">
        <name>decrement</name>
        <full_name>decrement</full_name>
        <docblock line="852">
          <description>Decrement the value of a column by a given amount.</description>
          <long-description></long-description>
          <tag line="852" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="852" name="param" description="" type="int" variable="$amount">
            <type by_reference="false">int</type>
          </tag>
          <tag line="852" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="859">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="859">
          <name>$amount</name>
          <default>1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database" line="872" package="Default">
        <name>adjust</name>
        <full_name>adjust</full_name>
        <docblock line="864">
          <description>Adjust the value of a column up or down by a given amount.</description>
          <long-description></long-description>
          <tag line="864" name="param" description="" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="864" name="param" description="" type="int" variable="$amount">
            <type by_reference="false">int</type>
          </tag>
          <tag line="864" name="param" description="" type="string" variable="$operator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="864" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="872">
          <name>$column</name>
          <default></default>
          <type/>
        </argument>
        <argument line="872">
          <name>$amount</name>
          <default></default>
          <type/>
        </argument>
        <argument line="872">
          <name>$operator</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="890" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="884">
          <description>Update an array of values in the database table.</description>
          <long-description></long-description>
          <tag line="884" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="884" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="890">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="910" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="902">
          <description>Execute the query as a DELETE statement.</description>
          <long-description>&lt;p&gt;Optionally, an ID may be passed to the method do delete a specific row.&lt;/p&gt;</long-description>
          <tag line="902" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="902" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="910">
          <name>$id</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="930" package="Default">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="925">
          <description>Magic Method for handling dynamic functions.</description>
          <long-description>&lt;p&gt;This method handles calls to aggregates as well as dynamic where clauses.&lt;/p&gt;</long-description>
        </docblock>
        <argument line="930">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="930">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/query.php</error>
      <error line="9" code="50000">No DocBlock was found for \Laravel\Database\Query</error>
      <error line="109" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $grammar in __construct()</error>
      <error line="381" code="50015">Argument $connector is missing from the Docblock of where_not_between()</error>
      <error line="925" code="50015">Argument $method is missing from the Docblock of __call()</error>
      <error line="925" code="50015">Argument $parameters is missing from the Docblock of __call()</error>
    </parse_markers>
  </file>
  <file path="laravel/database/exception.php" hash="9ee0d558e96e2ed3686978fb9e91baeb" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database" line="3" package="Default">
      <extends>\Exception</extends>
      <name>Exception</name>
      <full_name>\Laravel\Database\Exception</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel\Database" package="Default">
        <name>$inner</name>
        <default></default>
        <docblock line="5">
          <description>The inner exception.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="\Laravel\Database\Exception">
            <type by_reference="false">\Laravel\Database\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="20" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="12">
          <description>Create a new database exception instance.</description>
          <long-description></long-description>
          <tag line="12" name="param" description="" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="param" description="" type="array" variable="$bindings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="12" name="param" description="" type="\Laravel\Database\Exception" variable="$inner">
            <type by_reference="false">\Laravel\Database\Exception</type>
          </tag>
          <tag line="12" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="20">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
        <argument line="20">
          <name>$bindings</name>
          <default></default>
          <type/>
        </argument>
        <argument line="20">
          <name>$inner</name>
          <default></default>
          <type>\Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="35" package="Default">
        <name>getInner</name>
        <full_name>getInner</full_name>
        <docblock line="30">
          <description>Get the inner exception.</description>
          <long-description></long-description>
          <tag line="30" name="return" description="" type="\Laravel\Database\Exception">
            <type by_reference="false">\Laravel\Database\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Database" line="47" package="Default">
        <name>setMessage</name>
        <full_name>setMessage</full_name>
        <docblock line="40">
          <description>Set the exception message to include the SQL and bindings.</description>
          <long-description></long-description>
          <tag line="40" name="param" description="" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="param" description="" type="array" variable="$bindings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="40" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$bindings</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/exception.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Database\Exception</error>
      <error line="12" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $inner in __construct()</error>
    </parse_markers>
  </file>
  <file path="laravel/database/schema.php" hash="8c2e50bf52d2aba2ae43c3ba99334ff9" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database" line="7" package="Default">
      <extends/>
      <name>Schema</name>
      <full_name>\Laravel\Database\Schema</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Database" line="16" package="Default">
        <name>table</name>
        <full_name>table</full_name>
        <docblock line="9">
          <description>Begin a fluent schema operation on a database table.</description>
          <long-description></long-description>
          <tag line="9" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="9" name="param" description="" type="\Closure" variable="$callback">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="9" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="16">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="16">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Database" line="30" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="23">
          <description>Create a new database table schema.</description>
          <long-description></long-description>
          <tag line="23" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="param" description="" type="\Closure" variable="$callback">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="23" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="30">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Database" line="51" package="Default">
        <name>rename</name>
        <full_name>rename</full_name>
        <docblock line="44">
          <description>Rename a database table in the schema.</description>
          <long-description></long-description>
          <tag line="44" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="param" description="" type="string" variable="$new_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$new_name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Database" line="70" package="Default">
        <name>drop</name>
        <full_name>drop</full_name>
        <docblock line="63">
          <description>Drop a database table from the schema.</description>
          <long-description></long-description>
          <tag line="63" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="param" description="" type="string" variable="$connection">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$connection</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Database" line="90" package="Default">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="84">
          <description>Execute the given schema operation against the database.</description>
          <long-description></long-description>
          <tag line="84" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="84" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel\Database" line="127" package="Default">
        <name>implications</name>
        <full_name>implications</full_name>
        <docblock line="121">
          <description>Add any implicit commands to the schema table operation.</description>
          <long-description></long-description>
          <tag line="121" name="param" description="" type="\Laravel\Database\Schema\Table" variable="$table">
            <type by_reference="false">\Laravel\Database\Schema\Table</type>
          </tag>
          <tag line="121" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="127">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Database" line="167" package="Default">
        <name>grammar</name>
        <full_name>grammar</full_name>
        <docblock line="161">
          <description>Create the appropriate schema grammar for the driver.</description>
          <long-description></long-description>
          <tag line="161" name="param" description="" type="\Laravel\Database\Connection" variable="$connection">
            <type by_reference="false">\Laravel\Database\Connection</type>
          </tag>
          <tag line="161" name="return" description="" type="\Laravel\Database\Grammar">
            <type by_reference="false">\Laravel\Database\Grammar</type>
          </tag>
        </docblock>
        <argument line="167">
          <name>$connection</name>
          <default></default>
          <type>\Laravel\Database\Connection</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/schema.php</error>
      <error line="7" code="50000">No DocBlock was found for \Laravel\Database\Schema</error>
    </parse_markers>
  </file>
  <file path="laravel/database/expression.php" hash="1938911724417f6a94fc715e7b19ad37" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Database" line="3" package="Default">
      <extends/>
      <name>Expression</name>
      <full_name>\Laravel\Database\Expression</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel\Database" package="Default">
        <name>$value</name>
        <default></default>
        <docblock line="5">
          <description>The value of the database expression.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="18" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="12">
          <description>Create a new database expression instance.</description>
          <long-description></long-description>
          <tag line="12" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="28" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="23">
          <description>Get the string value of the database expression.</description>
          <long-description></long-description>
          <tag line="23" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Database" line="38" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="33">
          <description>Get the string value of the database expression.</description>
          <long-description></long-description>
          <tag line="33" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database/expression.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Database\Expression</error>
    </parse_markers>
  </file>
  <file path="laravel/cache.php" hash="c111d8403d460fbeff2f71de85c985a2" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Cache</name>
      <full_name>\Laravel\Cache</full_name>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$drivers</name>
        <default>array()</default>
        <docblock line="5">
          <description>All of the active cache drivers.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$registrar</name>
        <default>array()</default>
        <docblock line="12">
          <description>The third-party driver registrar.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="35" package="Default">
        <name>driver</name>
        <full_name>driver</full_name>
        <docblock line="19">
          <description>Get a cache driver instance.</description>
          <long-description>&lt;p&gt;If no driver name is specified, the default will be returned.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Get the default cache driver instance
    $driver = Cache::driver();

    // Get a specific cache driver instance by name
    $driver = Cache::driver('memcached');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="19" name="param" description="" type="string" variable="$driver">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="return" description="" type="\Laravel\Cache\Drivers\Driver">
            <type by_reference="false">\Laravel\Cache\Drivers\Driver</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$driver</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="53" package="Default">
        <name>factory</name>
        <full_name>factory</full_name>
        <docblock line="47">
          <description>Create a new cache driver instance.</description>
          <long-description></long-description>
          <tag line="47" name="param" description="" type="string" variable="$driver">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="return" description="" type="\Laravel\Cache\Drivers\Driver">
            <type by_reference="false">\Laravel\Cache\Drivers\Driver</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$driver</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="97" package="Default">
        <name>extend</name>
        <full_name>extend</full_name>
        <docblock line="90">
          <description>Register a third-party cache driver.</description>
          <long-description></long-description>
          <tag line="90" name="param" description="" type="string" variable="$driver">
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="param" description="" type="\Closure" variable="$resolver">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="90" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$driver</name>
          <default></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$resolver</name>
          <default></default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="113" package="Default">
        <name>__callStatic</name>
        <full_name>__callStatic</full_name>
        <docblock line="102">
          <description>Magic Method for calling the methods on the default cache driver.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Call the "get" method on the default cache driver
    $name = Cache::get('name');

    // Call the "put" method on the default cache driver
    Cache::put('name', 'Taylor', 15);
&lt;/code&gt;&lt;/pre&gt;</long-description>
        </docblock>
        <argument line="113">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="113">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cache.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Cache</error>
      <error line="102" code="50015">Argument $method is missing from the Docblock of __callStatic()</error>
      <error line="102" code="50015">Argument $parameters is missing from the Docblock of __callStatic()</error>
    </parse_markers>
  </file>
  <file path="laravel/autoloader.php" hash="241e4d0bb41ed6aaef9df7e8940c8932" package="Default">
    <include line="63" type="Require" package="Default">
      <name/>
    </include>
    <include line="120" type="Require" package="Default">
      <name/>
    </include>
    <include line="124" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Autoloader</name>
      <full_name>\Laravel\Autoloader</full_name>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$mappings</name>
        <default>array()</default>
        <docblock line="5">
          <description>The mappings from class names to file paths.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$directories</name>
        <default>array()</default>
        <docblock line="12">
          <description>The directories that use the PSR-0 naming convention.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="24" namespace="Laravel" package="Default">
        <name>$namespaces</name>
        <default>array()</default>
        <docblock line="19">
          <description>The mappings for namespaces to directories.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="31" namespace="Laravel" package="Default">
        <name>$underscored</name>
        <default>array()</default>
        <docblock line="26">
          <description>The mappings for underscored libraries to directories.</description>
          <long-description></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="38" namespace="Laravel" package="Default">
        <name>$aliases</name>
        <default>array()</default>
        <docblock line="33">
          <description>All of the class aliases registered with the auto-loader.</description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="48" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="40">
          <description>Load the file corresponding to a given class.</description>
          <long-description>&lt;p&gt;This method is registered in the bootstrap file as an SPL auto-loader.&lt;/p&gt;</long-description>
          <tag line="40" name="param" description="" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="90" package="Default">
        <name>load_namespaced</name>
        <full_name>load_namespaced</full_name>
        <docblock line="82">
          <description>Load a namespaced class from a given directory.</description>
          <long-description></long-description>
          <tag line="82" name="param" description="" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="param" description="" type="string" variable="$namespace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="param" description="" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$namespace</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$directory</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="102" package="Default">
        <name>load_psr</name>
        <full_name>load_psr</full_name>
        <docblock line="95">
          <description>Attempt to resolve a class using the PSR-0 standard.</description>
          <long-description></long-description>
          <tag line="95" name="param" description="" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="param" description="" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
        <argument line="102">
          <name>$directory</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="135" package="Default">
        <name>map</name>
        <full_name>map</full_name>
        <docblock line="129">
          <description>Register an array of class to path mappings.</description>
          <long-description></long-description>
          <tag line="129" name="param" description="" type="array" variable="$mappings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="129" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="135">
          <name>$mappings</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="147" package="Default">
        <name>alias</name>
        <full_name>alias</full_name>
        <docblock line="140">
          <description>Register a class alias with the auto-loader.</description>
          <long-description></long-description>
          <tag line="140" name="param" description="" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="param" description="" type="string" variable="$alias">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
        <argument line="147">
          <name>$alias</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="158" package="Default">
        <name>directories</name>
        <full_name>directories</full_name>
        <docblock line="152">
          <description>Register directories to be searched as a PSR-0 library.</description>
          <long-description></long-description>
          <tag line="152" name="param" description="" type="string|array" variable="$directory">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="152" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="158">
          <name>$directory</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="172" package="Default">
        <name>namespaces</name>
        <full_name>namespaces</full_name>
        <docblock line="165">
          <description>Map namespaces to directories.</description>
          <long-description></long-description>
          <tag line="165" name="param" description="" type="array" variable="$mappings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="165" name="param" description="" type="string" variable="$append">
            <type by_reference="false">string</type>
          </tag>
          <tag line="165" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="172">
          <name>$mappings</name>
          <default></default>
          <type/>
        </argument>
        <argument line="172">
          <name>$append</name>
          <default>'\\'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="185" package="Default">
        <name>underscored</name>
        <full_name>underscored</full_name>
        <docblock line="179">
          <description>Register underscored "namespaces" to directory mappings.</description>
          <long-description></long-description>
          <tag line="179" name="param" description="" type="array" variable="$mappings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="179" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$mappings</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="197" package="Default">
        <name>format_mappings</name>
        <full_name>format_mappings</full_name>
        <docblock line="190">
          <description>Format an array of namespace to directory mappings.</description>
          <long-description></long-description>
          <tag line="190" name="param" description="" type="array" variable="$mappings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="190" name="param" description="" type="string" variable="$append">
            <type by_reference="false">string</type>
          </tag>
          <tag line="190" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="197">
          <name>$mappings</name>
          <default></default>
          <type/>
        </argument>
        <argument line="197">
          <name>$append</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="220" package="Default">
        <name>format</name>
        <full_name>format</full_name>
        <docblock line="214">
          <description>Format an array of directories with the proper trailing slashes.</description>
          <long-description></long-description>
          <tag line="214" name="param" description="" type="array" variable="$directories">
            <type by_reference="false">array</type>
          </tag>
          <tag line="214" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="220">
          <name>$directories</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/autoloader.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Autoloader</error>
    </parse_markers>
  </file>
  <file path="laravel/routing/route.php" hash="7d6d48f642614d8ca3f7a1710930c04a" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Routing" line="10" package="Default">
      <extends/>
      <name>Route</name>
      <full_name>\Laravel\Routing\Route</full_name>
      <property final="false" static="false" visibility="public" line="17" namespace="Laravel\Routing" package="Default">
        <name>$uri</name>
        <default></default>
        <docblock line="12">
          <description>The URI the route responds to.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="Laravel\Routing" package="Default">
        <name>$method</name>
        <default></default>
        <docblock line="19">
          <description>The request method the route responds to.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="Laravel\Routing" package="Default">
        <name>$bundle</name>
        <default></default>
        <docblock line="26">
          <description>The bundle in which the route was registered.</description>
          <long-description></long-description>
          <tag line="26" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="38" namespace="Laravel\Routing" package="Default">
        <name>$controller</name>
        <default></default>
        <docblock line="33">
          <description>The name of the controller used by the route.</description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="45" namespace="Laravel\Routing" package="Default">
        <name>$controller_action</name>
        <default></default>
        <docblock line="40">
          <description>The name of the controller action used by the route.</description>
          <long-description></long-description>
          <tag line="40" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="52" namespace="Laravel\Routing" package="Default">
        <name>$action</name>
        <default></default>
        <docblock line="47">
          <description>The action that is assigned to the route.</description>
          <long-description></long-description>
          <tag line="47" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="59" namespace="Laravel\Routing" package="Default">
        <name>$parameters</name>
        <default></default>
        <docblock line="54">
          <description>The parameters that will be passed to the route callback.</description>
          <long-description></long-description>
          <tag line="54" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="69" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="61">
          <description>Create a new Route instance.</description>
          <long-description></long-description>
          <tag line="61" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="param" description="" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="param" description="" type="array" variable="$action">
            <type by_reference="false">array</type>
          </tag>
          <tag line="61" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Routing" line="93" package="Default">
        <name>parameters</name>
        <full_name>parameters</full_name>
        <docblock line="86">
          <description>Set the parameters array to the correct value.</description>
          <long-description></long-description>
          <tag line="86" name="param" description="" type="array" variable="$action">
            <type by_reference="false">array</type>
          </tag>
          <tag line="86" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="86" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
        <argument line="93">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="115" package="Default">
        <name>call</name>
        <full_name>call</full_name>
        <docblock line="110">
          <description>Call a given route and return the route's response.</description>
          <long-description></long-description>
          <tag line="110" name="return" description="" type="\Laravel\Response">
            <type by_reference="false">\Laravel\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="144" package="Default">
        <name>response</name>
        <full_name>response</full_name>
        <docblock line="137">
          <description>Execute the route action and return the response.</description>
          <long-description>&lt;p&gt;Unlike the "call" method, none of the attached filters will be run.&lt;/p&gt;</long-description>
          <tag line="137" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Routing" line="173" package="Default">
        <name>filters</name>
        <full_name>filters</full_name>
        <docblock line="167">
          <description>Get the filters that are attached to the route for a given event.</description>
          <long-description></long-description>
          <tag line="167" name="param" description="" type="string" variable="$event">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="173">
          <name>$event</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Routing" line="205" package="Default">
        <name>patterns</name>
        <full_name>patterns</full_name>
        <docblock line="200">
          <description>Get the pattern filters for the route.</description>
          <long-description></long-description>
          <tag line="200" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Routing" line="239" package="Default">
        <name>delegate</name>
        <full_name>delegate</full_name>
        <docblock line="232">
          <description>Get the controller action delegate assigned to the route.</description>
          <long-description>&lt;p&gt;If no delegate is assigned, null will be returned by the method.&lt;/p&gt;</long-description>
          <tag line="232" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Routing" line="249" package="Default">
        <name>handler</name>
        <full_name>handler</full_name>
        <docblock line="244">
          <description>Get the anonymous function assigned to handle the route.</description>
          <long-description></long-description>
          <tag line="244" name="return" description="" type="\Closure">
            <type by_reference="false">\Closure</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="268" package="Default">
        <name>is</name>
        <full_name>is</full_name>
        <docblock line="257">
          <description>Determine if the route has a given name.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Determine if the route is the "login" route
    $login = Request::route()-&gt;is('login');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="257" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="257" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="268">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="280" package="Default">
        <name>controller</name>
        <full_name>controller</full_name>
        <docblock line="273">
          <description>Register a controller with the router.</description>
          <long-description></long-description>
          <tag line="273" name="param" description="" type="string|array" variable="$controllers">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="273" name="param" description="" type="string|array" variable="$defaults">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="273" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="280">
          <name>$controllers</name>
          <default></default>
          <type/>
        </argument>
        <argument line="280">
          <name>$defaults</name>
          <default>'index'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="292" package="Default">
        <name>secure_controller</name>
        <full_name>secure_controller</full_name>
        <docblock line="285">
          <description>Register a secure controller with the router.</description>
          <long-description></long-description>
          <tag line="285" name="param" description="" type="string|array" variable="$controllers">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="285" name="param" description="" type="string|array" variable="$defaults">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="285" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="292">
          <name>$controllers</name>
          <default></default>
          <type/>
        </argument>
        <argument line="292">
          <name>$defaults</name>
          <default>'index'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="304" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="297">
          <description>Register a GET route with the router.</description>
          <long-description></long-description>
          <tag line="297" name="param" description="" type="string|array" variable="$route">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="297" name="param" description="" type="mixed" variable="$action">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="297" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="304">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
        <argument line="304">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="316" package="Default">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="309">
          <description>Register a POST route with the router.</description>
          <long-description></long-description>
          <tag line="309" name="param" description="" type="string|array" variable="$route">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="309" name="param" description="" type="mixed" variable="$action">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="309" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="316">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
        <argument line="316">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="328" package="Default">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="321">
          <description>Register a PUT route with the router.</description>
          <long-description></long-description>
          <tag line="321" name="param" description="" type="string|array" variable="$route">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="321" name="param" description="" type="mixed" variable="$action">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="321" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="328">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
        <argument line="328">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="340" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="333">
          <description>Register a DELETE route with the router.</description>
          <long-description></long-description>
          <tag line="333" name="param" description="" type="string|array" variable="$route">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="333" name="param" description="" type="mixed" variable="$action">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="333" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="340">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
        <argument line="340">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="352" package="Default">
        <name>any</name>
        <full_name>any</full_name>
        <docblock line="345">
          <description>Register a route that handles any request method.</description>
          <long-description></long-description>
          <tag line="345" name="param" description="" type="string|array" variable="$route">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="345" name="param" description="" type="mixed" variable="$action">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="345" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="352">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
        <argument line="352">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="364" package="Default">
        <name>group</name>
        <full_name>group</full_name>
        <docblock line="357">
          <description>Register a group of routes that share attributes.</description>
          <long-description></long-description>
          <tag line="357" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="357" name="param" description="" type="\Closure" variable="$callback">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="357" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="364">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="364">
          <name>$callback</name>
          <default></default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="376" package="Default">
        <name>share</name>
        <full_name>share</full_name>
        <docblock line="369">
          <description>Register many request URIs to a single action.</description>
          <long-description></long-description>
          <tag line="369" name="param" description="" type="array" variable="$routes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="369" name="param" description="" type="mixed" variable="$action">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="369" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="376">
          <name>$routes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="376">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="389" package="Default">
        <name>secure</name>
        <full_name>secure</full_name>
        <docblock line="381">
          <description>Register a HTTPS route with the router.</description>
          <long-description></long-description>
          <tag line="381" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="381" name="param" description="" type="string|array" variable="$route">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="381" name="param" description="" type="mixed" variable="$action">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="381" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="389">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="389">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
        <argument line="389">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="401" package="Default">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="394">
          <description>Register a route filter.</description>
          <long-description></long-description>
          <tag line="394" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="394" name="param" description="" type="mixed" variable="$callback">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="394" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="401">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="401">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="413" package="Default">
        <name>forward</name>
        <full_name>forward</full_name>
        <docblock line="406">
          <description>Calls the specified route and returns its response.</description>
          <long-description></long-description>
          <tag line="406" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="406" name="param" description="" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="406" name="return" description="" type="\Laravel\Response">
            <type by_reference="false">\Laravel\Response</type>
          </tag>
        </docblock>
        <argument line="413">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="413">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/routing/route.php</error>
      <error line="10" code="50000">No DocBlock was found for \Laravel\Routing\Route</error>
    </parse_markers>
  </file>
  <file path="laravel/routing/controller.php" hash="03ee7721dc4b920c7e4c05c73aa221b6" package="Default">
    <include line="245" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="true" namespace="Laravel\Routing" line="13" package="Default">
      <extends/>
      <name>Controller</name>
      <full_name>\Laravel\Routing\Controller</full_name>
      <constant namespace="Laravel\Routing" line="48" package="Default">
        <name>factory</name>
        <full_name>factory</full_name>
        <value>'laravel.controller.factory'</value>
        <docblock line="43">
          <description>The event name for the Laravel controller factory.</description>
          <long-description></long-description>
          <tag line="43" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="public" line="20" namespace="Laravel\Routing" package="Default">
        <name>$layout</name>
        <default></default>
        <docblock line="15">
          <description>The layout being used by the controller.</description>
          <long-description></long-description>
          <tag line="15" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="Laravel\Routing" package="Default">
        <name>$bundle</name>
        <default></default>
        <docblock line="22">
          <description>The bundle the controller belongs to.</description>
          <long-description></long-description>
          <tag line="22" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="34" namespace="Laravel\Routing" package="Default">
        <name>$restful</name>
        <default>false</default>
        <docblock line="29">
          <description>Indicates if the controller uses RESTful routing.</description>
          <long-description></long-description>
          <tag line="29" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="41" namespace="Laravel\Routing" package="Default">
        <name>$filters</name>
        <default>array()</default>
        <docblock line="36">
          <description>The filters assigned to the controller.</description>
          <long-description></long-description>
          <tag line="36" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="55" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="50">
          <description>Create a new Controller instance.</description>
          <long-description></long-description>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="73" package="Default">
        <name>detect</name>
        <full_name>detect</full_name>
        <docblock line="66">
          <description>Detect all of the controllers for a given bundle.</description>
          <long-description></long-description>
          <tag line="66" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="param" description="" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$bundle</name>
          <default>DEFAULT_BUNDLE</default>
          <type/>
        </argument>
        <argument line="73">
          <name>$directory</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="132" package="Default">
        <name>call</name>
        <full_name>call</full_name>
        <docblock line="117">
          <description>Call an action method on a controller.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Call the "show" method on the "user" controller
    $response = Controller::call('user@show');

    // Call the "user/admin" controller and pass parameters
    $response = Controller::call('user.admin@profile', array($username));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="117" name="param" description="" type="string" variable="$destination">
            <type by_reference="false">string</type>
          </tag>
          <tag line="117" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="117" name="return" description="" type="\Laravel\Response">
            <type by_reference="false">\Laravel\Response</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$destination</name>
          <default></default>
          <type/>
        </argument>
        <argument line="132">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel\Routing" line="175" package="Default">
        <name>references</name>
        <full_name>references</full_name>
        <docblock line="168">
          <description>Replace all back-references on the given destination.</description>
          <long-description></long-description>
          <tag line="168" name="param" description="" type="string" variable="$destination">
            <type by_reference="false">string</type>
          </tag>
          <tag line="168" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="168" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$destination</name>
          <default></default>
          <type/>
        </argument>
        <argument line="175">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="201" package="Default">
        <name>resolve</name>
        <full_name>resolve</full_name>
        <docblock line="194">
          <description>Resolve a bundle and controller name to a controller instance.</description>
          <long-description></long-description>
          <tag line="194" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="194" name="param" description="" type="string" variable="$controller">
            <type by_reference="false">string</type>
          </tag>
          <tag line="194" name="return" description="" type="\Laravel\Routing\Controller">
            <type by_reference="false">\Laravel\Routing\Controller</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="201">
          <name>$controller</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel\Routing" line="239" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="232">
          <description>Load the file for a given controller.</description>
          <long-description></long-description>
          <tag line="232" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="232" name="param" description="" type="string" variable="$controller">
            <type by_reference="false">string</type>
          </tag>
          <tag line="232" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="239">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="239">
          <name>$controller</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel\Routing" line="260" package="Default">
        <name>format</name>
        <full_name>format</full_name>
        <docblock line="253">
          <description>Format a bundle and controller identifier into the controller's class name.</description>
          <long-description></long-description>
          <tag line="253" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="253" name="param" description="" type="string" variable="$controller">
            <type by_reference="false">string</type>
          </tag>
          <tag line="253" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="260">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="260">
          <name>$controller</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="272" package="Default">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="265">
          <description>Execute a controller method with the given parameters.</description>
          <long-description></long-description>
          <tag line="265" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="265" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="265" name="return" description="" type="\Laravel\Response">
            <type by_reference="false">\Laravel\Response</type>
          </tag>
        </docblock>
        <argument line="272">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="272">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="311" package="Default">
        <name>response</name>
        <full_name>response</full_name>
        <docblock line="300">
          <description>Execute a controller action and return the response.</description>
          <long-description>&lt;p&gt;Unlike the "execute" method, no filters will be run and the response
from the controller action will not be changed in any way before it
is returned to the consumer.&lt;/p&gt;</long-description>
          <tag line="300" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="300" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="300" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="311">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="311">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Routing" line="354" package="Default">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="338">
          <description>Register filters on the controller's methods.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Set a "foo" after filter on the controller
    $this-&gt;filter('before', 'foo');

    // Set several filters on an explicit group of methods
    $this-&gt;filter('after', 'foo|bar')-&gt;only(array('user', 'profile'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="338" name="param" description="" type="string" variable="$event">
            <type by_reference="false">string</type>
          </tag>
          <tag line="338" name="param" description="" type="string|array" variable="$filters">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="338" name="param" description="" type="mixed" variable="$parameters">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="338" name="return" description="" type="\Laravel\Routing\Filter_Collection">
            <type by_reference="false">\Laravel\Routing\Filter_Collection</type>
          </tag>
        </docblock>
        <argument line="354">
          <name>$event</name>
          <default></default>
          <type/>
        </argument>
        <argument line="354">
          <name>$filters</name>
          <default></default>
          <type/>
        </argument>
        <argument line="354">
          <name>$parameters</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Routing" line="368" package="Default">
        <name>filters</name>
        <full_name>filters</full_name>
        <docblock line="361">
          <description>Get an array of filter names defined for the destination.</description>
          <long-description></long-description>
          <tag line="361" name="param" description="" type="string" variable="$event">
            <type by_reference="false">string</type>
          </tag>
          <tag line="361" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="361" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="368">
          <name>$event</name>
          <default></default>
          <type/>
        </argument>
        <argument line="368">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="390" package="Default">
        <name>layout</name>
        <full_name>layout</full_name>
        <docblock line="385">
          <description>Create the layout that is assigned to the controller.</description>
          <long-description></long-description>
          <tag line="385" name="return" description="" type="\Laravel\View">
            <type by_reference="false">\Laravel\View</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="405" package="Default">
        <name>before</name>
        <full_name>before</full_name>
        <docblock line="400">
          <description>This function is called before the action is executed.</description>
          <long-description></long-description>
          <tag line="400" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="413" package="Default">
        <name>after</name>
        <full_name>after</full_name>
        <docblock line="407">
          <description>This function is called after the action is executed.</description>
          <long-description></long-description>
          <tag line="407" name="param" description="" type="\Laravel\Response" variable="$response">
            <type by_reference="false">\Laravel\Response</type>
          </tag>
          <tag line="407" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="413">
          <name>$response</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="418" package="Default">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="415">
          <description>Magic Method to handle calls to undefined controller functions.</description>
          <long-description></long-description>
        </docblock>
        <argument line="418">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="418">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="434" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="423">
          <description>Dynamically resolve items from the application IoC container.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Retrieve an object registered in the container
    $mailer = $this-&gt;mailer;

    // Equivalent call using the IoC container instance
    $mailer = IoC::resolve('mailer');
&lt;/code&gt;&lt;/pre&gt;</long-description>
        </docblock>
        <argument line="434">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/routing/controller.php</error>
      <error line="13" code="50000">No DocBlock was found for \Laravel\Routing\Controller</error>
      <error line="415" code="50015">Argument $method is missing from the Docblock of __call()</error>
      <error line="415" code="50015">Argument $parameters is missing from the Docblock of __call()</error>
      <error line="423" code="50015">Argument $key is missing from the Docblock of __get()</error>
    </parse_markers>
  </file>
  <file path="laravel/routing/filter.php" hash="3267f4e554fd75b79a90d1ebe6db6051" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Routing" line="7" package="Default">
      <extends/>
      <name>Filter</name>
      <full_name>\Laravel\Routing\Filter</full_name>
      <property final="false" static="true" visibility="public" line="14" namespace="Laravel\Routing" package="Default">
        <name>$filters</name>
        <default>array()</default>
        <docblock line="9">
          <description>The route filters for the application.</description>
          <long-description></long-description>
          <tag line="9" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="21" namespace="Laravel\Routing" package="Default">
        <name>$patterns</name>
        <default>array()</default>
        <docblock line="16">
          <description>The route filters that are based on a pattern.</description>
          <long-description></long-description>
          <tag line="16" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="28" namespace="Laravel\Routing" package="Default">
        <name>$aliases</name>
        <default>array()</default>
        <docblock line="23">
          <description>All of the registered filter aliases.</description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="45" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="30">
          <description>Register a filter for the application.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Register a closure as a filter
    Filter::register('before', function() {});

    // Register a class callback as a filter
    Filter::register('before', array('Class', 'method'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="30" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="" type="mixed" variable="$callback">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="30" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="45">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="74" package="Default">
        <name>alias</name>
        <full_name>alias</full_name>
        <docblock line="65">
          <description>Alias a filter so it can be used by another name.</description>
          <long-description>&lt;p&gt;This is convenient for shortening filters that are registered by bundles.&lt;/p&gt;</long-description>
          <tag line="65" name="param" description="" type="string" variable="$filter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="param" description="" type="string" variable="$alias">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$filter</name>
          <default></default>
          <type/>
        </argument>
        <argument line="74">
          <name>$alias</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="85" package="Default">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="79">
          <description>Parse a filter definition into an array of filters.</description>
          <long-description></long-description>
          <tag line="79" name="param" description="" type="string|array" variable="$filters">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="79" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$filters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="98" package="Default">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="90">
          <description>Call a filter or set of filters.</description>
          <long-description></long-description>
          <tag line="90" name="param" description="" type="array" variable="$collections">
            <type by_reference="false">array</type>
          </tag>
          <tag line="90" name="param" description="" type="array" variable="$pass">
            <type by_reference="false">array</type>
          </tag>
          <tag line="90" name="param" description="" type="bool" variable="$override">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="90" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$collections</name>
          <default></default>
          <type/>
        </argument>
        <argument line="98">
          <name>$pass</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="98">
          <name>$override</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="Laravel\Routing" line="135" package="Default">
      <extends/>
      <name>Filter_Collection</name>
      <full_name>\Laravel\Routing\Filter_Collection</full_name>
      <property final="false" static="false" visibility="public" line="142" namespace="Laravel\Routing" package="Default">
        <name>$filters</name>
        <default>array()</default>
        <docblock line="137">
          <description>The filters contained by the collection.</description>
          <long-description></long-description>
          <tag line="137" name="var" description="" type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="149" namespace="Laravel\Routing" package="Default">
        <name>$parameters</name>
        <default></default>
        <docblock line="144">
          <description>The parameters specified for the filter.</description>
          <long-description></long-description>
          <tag line="144" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="156" namespace="Laravel\Routing" package="Default">
        <name>$only</name>
        <default>array()</default>
        <docblock line="151">
          <description>The included controller methods.</description>
          <long-description></long-description>
          <tag line="151" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="163" namespace="Laravel\Routing" package="Default">
        <name>$except</name>
        <default>array()</default>
        <docblock line="158">
          <description>The excluded controller methods.</description>
          <long-description></long-description>
          <tag line="158" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="170" namespace="Laravel\Routing" package="Default">
        <name>$methods</name>
        <default>array()</default>
        <docblock line="165">
          <description>The HTTP methods for which the filter applies.</description>
          <long-description></long-description>
          <tag line="165" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="179" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="172">
          <description>Create a new filter collection instance.</description>
          <long-description></long-description>
          <tag line="172" name="param" description="" type="string|array" variable="$filters">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="172" name="param" description="" type="mixed" variable="$parameters">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="172" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$filters</name>
          <default></default>
          <type/>
        </argument>
        <argument line="179">
          <name>$parameters</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="191" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="185">
          <description>Parse the filter string, returning the filter name and parameters.</description>
          <long-description></long-description>
          <tag line="185" name="param" description="" type="string" variable="$filter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="185" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$filter</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\Routing" line="231" package="Default">
        <name>parameters</name>
        <full_name>parameters</full_name>
        <docblock line="226">
          <description>Evaluate the collection's parameters and return a parameters array.</description>
          <long-description></long-description>
          <tag line="226" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="247" package="Default">
        <name>applies</name>
        <full_name>applies</full_name>
        <docblock line="241">
          <description>Determine if this collection's filters apply to a given method.</description>
          <long-description></long-description>
          <tag line="241" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="241" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="247">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="283" package="Default">
        <name>except</name>
        <full_name>except</full_name>
        <docblock line="269">
          <description>Set the excluded controller methods.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Specify a filter for all methods except "index"
    $this-&gt;filter('before', 'auth')-&gt;except('index');

    // Specify a filter for all methods except "index" and "home"
    $this-&gt;filter('before', 'auth')-&gt;except(array('index', 'home'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="269" name="param" description="" type="array" variable="$methods">
            <type by_reference="false">array</type>
          </tag>
          <tag line="269" name="return" description="" type="\Laravel\Routing\Filter_Collection">
            <type by_reference="false">\Laravel\Routing\Filter_Collection</type>
          </tag>
        </docblock>
        <argument line="283">
          <name>$methods</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="303" package="Default">
        <name>only</name>
        <full_name>only</full_name>
        <docblock line="289">
          <description>Set the included controller methods.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Specify a filter for only the "index" method
    $this-&gt;filter('before', 'auth')-&gt;only('index');

    // Specify a filter for only the "index" and "home" methods
    $this-&gt;filter('before', 'auth')-&gt;only(array('index', 'home'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="289" name="param" description="" type="array" variable="$methods">
            <type by_reference="false">array</type>
          </tag>
          <tag line="289" name="return" description="" type="\Laravel\Routing\Filter_Collection">
            <type by_reference="false">\Laravel\Routing\Filter_Collection</type>
          </tag>
        </docblock>
        <argument line="303">
          <name>$methods</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\Routing" line="323" package="Default">
        <name>on</name>
        <full_name>on</full_name>
        <docblock line="309">
          <description>Set the HTTP methods for which the filter applies.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Specify that a filter only applies on POST requests
    $this-&gt;filter('before', 'csrf')-&gt;on('post');

    // Specify that a filter applies for multiple HTTP request methods
    $this-&gt;filter('before', 'csrf')-&gt;on(array('post', 'put'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="309" name="param" description="" type="array" variable="$methods">
            <type by_reference="false">array</type>
          </tag>
          <tag line="309" name="return" description="" type="\Laravel\Routing\Filter_Collection">
            <type by_reference="false">\Laravel\Routing\Filter_Collection</type>
          </tag>
        </docblock>
        <argument line="323">
          <name>$methods</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/routing/filter.php</error>
      <error line="7" code="50000">No DocBlock was found for \Laravel\Routing\Filter</error>
      <error line="135" code="50000">No DocBlock was found for \Laravel\Routing\Filter_Collection</error>
    </parse_markers>
  </file>
  <file path="laravel/routing/router.php" hash="54f502279f5cc5ee8907599469f6360c" package="Default">
    <class final="false" abstract="false" namespace="Laravel\Routing" line="8" package="Default">
      <extends/>
      <name>Router</name>
      <full_name>\Laravel\Routing\Router</full_name>
      <property final="false" static="true" visibility="public" line="15" namespace="Laravel\Routing" package="Default">
        <name>$names</name>
        <default>array()</default>
        <docblock line="10">
          <description>The route names that have been matched.</description>
          <long-description></long-description>
          <tag line="10" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="22" namespace="Laravel\Routing" package="Default">
        <name>$uses</name>
        <default>array()</default>
        <docblock line="17">
          <description>The actions that have been reverse routed.</description>
          <long-description></long-description>
          <tag line="17" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="29" namespace="Laravel\Routing" package="Default">
        <name>$routes</name>
        <default>array('GET' =&gt; array(), 'POST' =&gt; array(), 'PUT' =&gt; array(), 'DELETE' =&gt; array(), 'PATCH' =&gt; array(), 'HEAD' =&gt; array(), 'OPTIONS' =&gt; array())</default>
        <docblock line="24">
          <description>All of the routes that have been registered.</description>
          <long-description></long-description>
          <tag line="24" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="44" namespace="Laravel\Routing" package="Default">
        <name>$fallback</name>
        <default>array('GET' =&gt; array(), 'POST' =&gt; array(), 'PUT' =&gt; array(), 'DELETE' =&gt; array(), 'PATCH' =&gt; array(), 'HEAD' =&gt; array(), 'OPTIONS' =&gt; array())</default>
        <docblock line="39">
          <description>All of the "fallback" routes that have been registered.</description>
          <long-description></long-description>
          <tag line="39" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="57" namespace="Laravel\Routing" package="Default">
        <name>$group</name>
        <default></default>
        <docblock line="54">
          <description>The current attributes being shared by routes.</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="64" namespace="Laravel\Routing" package="Default">
        <name>$bundle</name>
        <default></default>
        <docblock line="59">
          <description>The "handles" clause for the bundle currently being routed.</description>
          <long-description></long-description>
          <tag line="59" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="71" namespace="Laravel\Routing" package="Default">
        <name>$segments</name>
        <default>5</default>
        <docblock line="66">
          <description>The number of URI segments allowed as method arguments.</description>
          <long-description></long-description>
          <tag line="66" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="78" namespace="Laravel\Routing" package="Default">
        <name>$patterns</name>
        <default>array('(:num)' =&gt; '([0-9]+)', '(:any)' =&gt; '([a-zA-Z0-9\.\-_%=]+)', '(:segment)' =&gt; '([^/]+)', '(:all)' =&gt; '(.*)')</default>
        <docblock line="73">
          <description>The wildcard patterns supported by the router.</description>
          <long-description></long-description>
          <tag line="73" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="90" namespace="Laravel\Routing" package="Default">
        <name>$optional</name>
        <default>array('/(:num?)' =&gt; '(?:/([0-9]+)', '/(:any?)' =&gt; '(?:/([a-zA-Z0-9\.\-_%=]+)', '/(:segment?)' =&gt; '(?:/([^/]+)', '/(:all?)' =&gt; '(?:/(.*)')</default>
        <docblock line="85">
          <description>The optional wildcard patterns supported by the router.</description>
          <long-description></long-description>
          <tag line="85" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="102" namespace="Laravel\Routing" package="Default">
        <name>$methods</name>
        <default>array('GET', 'POST', 'PUT', 'DELETE', 'HEAD', 'OPTIONS')</default>
        <docblock line="97">
          <description>An array of HTTP request methods.</description>
          <long-description></long-description>
          <tag line="97" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="112" package="Default">
        <name>secure</name>
        <full_name>secure</full_name>
        <docblock line="104">
          <description>Register a HTTPS route with the router.</description>
          <long-description></long-description>
          <tag line="104" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="104" name="param" description="" type="string|array" variable="$route">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="104" name="param" description="" type="mixed" variable="$action">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="104" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="112">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
        <argument line="112">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="133" package="Default">
        <name>share</name>
        <full_name>share</full_name>
        <docblock line="121">
          <description>Register many request URIs to a single action.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Register a group of URIs for an action
    Router::share(array(array('GET', '/'), array('POST', '/')), 'home@index');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="121" name="param" description="" type="array" variable="$routes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="121" name="param" description="" type="mixed" variable="$action">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="121" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="133">
          <name>$routes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="133">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="148" package="Default">
        <name>group</name>
        <full_name>group</full_name>
        <docblock line="141">
          <description>Register a group of routes that share attributes.</description>
          <long-description></long-description>
          <tag line="141" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="141" name="param" description="" type="\Closure" variable="$callback">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="141" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="148">
          <name>$callback</name>
          <default></default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="179" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="163">
          <description>Register a route with the router.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Register a route with the router
    Router::register('GET', '/', function() {return 'Home!';});

    // Register a route that handles multiple URIs with the router
    Router::register(array('GET', '/', 'GET /home'), function() {return 'Home!';});
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="163" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="163" name="param" description="" type="string|array" variable="$route">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="163" name="param" description="" type="mixed" variable="$action">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="163" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="179">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
        <argument line="179">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel\Routing" line="269" package="Default">
        <name>action</name>
        <full_name>action</full_name>
        <docblock line="263">
          <description>Convert a route action to a valid action array.</description>
          <long-description></long-description>
          <tag line="263" name="param" description="" type="mixed" variable="$action">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="263" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="269">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="296" package="Default">
        <name>secure_controller</name>
        <full_name>secure_controller</full_name>
        <docblock line="289">
          <description>Register a secure controller with the router.</description>
          <long-description></long-description>
          <tag line="289" name="param" description="" type="string|array" variable="$controllers">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="289" name="param" description="" type="string|array" variable="$defaults">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="289" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="296">
          <name>$controllers</name>
          <default></default>
          <type/>
        </argument>
        <argument line="296">
          <name>$defaults</name>
          <default>'index'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="309" package="Default">
        <name>controller</name>
        <full_name>controller</full_name>
        <docblock line="301">
          <description>Register a controller with the router.</description>
          <long-description></long-description>
          <tag line="301" name="param" description="" type="string|array" variable="$controllers">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="301" name="param" description="" type="string|array" variable="$defaults">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="301" name="param" description="" type="bool" variable="$https">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="301" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="309">
          <name>$controllers</name>
          <default></default>
          <type/>
        </argument>
        <argument line="309">
          <name>$defaults</name>
          <default>'index'</default>
          <type/>
        </argument>
        <argument line="309">
          <name>$https</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel\Routing" line="360" package="Default">
        <name>root</name>
        <full_name>root</full_name>
        <docblock line="352">
          <description>Register a route for the root of a controller.</description>
          <long-description></long-description>
          <tag line="352" name="param" description="" type="string" variable="$identifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="352" name="param" description="" type="string" variable="$controller">
            <type by_reference="false">string</type>
          </tag>
          <tag line="352" name="param" description="" type="string" variable="$root">
            <type by_reference="false">string</type>
          </tag>
          <tag line="352" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="360">
          <name>$identifier</name>
          <default></default>
          <type/>
        </argument>
        <argument line="360">
          <name>$controller</name>
          <default></default>
          <type/>
        </argument>
        <argument line="360">
          <name>$root</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="390" package="Default">
        <name>find</name>
        <full_name>find</full_name>
        <docblock line="384">
          <description>Find a route by the route's assigned name.</description>
          <long-description></long-description>
          <tag line="384" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="384" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="390">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="426" package="Default">
        <name>uses</name>
        <full_name>uses</full_name>
        <docblock line="420">
          <description>Find the route that uses the given action.</description>
          <long-description></long-description>
          <tag line="420" name="param" description="" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="420" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="426">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="460" package="Default">
        <name>route</name>
        <full_name>route</full_name>
        <docblock line="453">
          <description>Search the routes for the route matching a method and URI.</description>
          <long-description></long-description>
          <tag line="453" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="453" name="param" description="" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="453" name="return" description="" type="\Laravel\Routing\Route">
            <type by_reference="false">\Laravel\Routing\Route</type>
          </tag>
        </docblock>
        <argument line="460">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="460">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel\Routing" line="492" package="Default">
        <name>match</name>
        <full_name>match</full_name>
        <docblock line="485">
          <description>Iterate through every route to find a matching route.</description>
          <long-description></long-description>
          <tag line="485" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="485" name="param" description="" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="485" name="return" description="" type="\Laravel\Routing\Route">
            <type by_reference="false">\Laravel\Routing\Route</type>
          </tag>
        </docblock>
        <argument line="492">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="492">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel\Routing" line="520" package="Default">
        <name>wildcards</name>
        <full_name>wildcards</full_name>
        <docblock line="514">
          <description>Translate route URI wildcards into regular expressions.</description>
          <long-description></long-description>
          <tag line="514" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="514" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="520">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="542" package="Default">
        <name>routes</name>
        <full_name>routes</full_name>
        <docblock line="537">
          <description>Get all of the registered routes, with fallbacks at the end.</description>
          <long-description></long-description>
          <tag line="537" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="570" package="Default">
        <name>method</name>
        <full_name>method</full_name>
        <docblock line="564">
          <description>Grab all of the routes for a given request method.</description>
          <long-description></long-description>
          <tag line="564" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="564" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="570">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\Routing" line="582" package="Default">
        <name>patterns</name>
        <full_name>patterns</full_name>
        <docblock line="577">
          <description>Get all of the wildcard patterns</description>
          <long-description></long-description>
          <tag line="577" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel\Routing" line="594" package="Default">
        <name>repeat</name>
        <full_name>repeat</full_name>
        <docblock line="587">
          <description>Get a string repeating a URI pattern any number of times.</description>
          <long-description></long-description>
          <tag line="587" name="param" description="" type="string" variable="$pattern">
            <type by_reference="false">string</type>
          </tag>
          <tag line="587" name="param" description="" type="int" variable="$times">
            <type by_reference="false">int</type>
          </tag>
          <tag line="587" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="594">
          <name>$pattern</name>
          <default></default>
          <type/>
        </argument>
        <argument line="594">
          <name>$times</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/routing/router.php</error>
      <error line="8" code="50000">No DocBlock was found for \Laravel\Routing\Router</error>
    </parse_markers>
  </file>
  <file path="laravel/asset.php" hash="2189f2acca1f1fd7f6f25d44d4c03184" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Asset</name>
      <full_name>\Laravel\Asset</full_name>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$containers</name>
        <default>array()</default>
        <docblock line="5">
          <description>All of the instantiated asset containers.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="26" package="Default">
        <name>container</name>
        <full_name>container</full_name>
        <docblock line="12">
          <description>Get an asset container instance.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get the default asset container
    $container = Asset::container();

    // Get a named asset container
    $container = Asset::container('footer');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="12" name="param" description="" type="string" variable="$container">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="return" description="" type="\Laravel\Asset_Container">
            <type by_reference="false">\Laravel\Asset_Container</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$container</name>
          <default>'default'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="47" package="Default">
        <name>__callStatic</name>
        <full_name>__callStatic</full_name>
        <docblock line="36">
          <description>Magic Method for calling methods on the default container.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Call the "styles" method on the default container
    echo Asset::styles();

    // Call the "add" method on the default container
    Asset::add('jquery', 'js/jquery.js');
&lt;/code&gt;&lt;/pre&gt;</long-description>
        </docblock>
        <argument line="47">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="Laravel" line="54" package="Default">
      <extends/>
      <name>Asset_Container</name>
      <full_name>\Laravel\Asset_Container</full_name>
      <property final="false" static="false" visibility="public" line="61" namespace="Laravel" package="Default">
        <name>$name</name>
        <default></default>
        <docblock line="56">
          <description>The asset container name.</description>
          <long-description></long-description>
          <tag line="56" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="68" namespace="Laravel" package="Default">
        <name>$bundle</name>
        <default>DEFAULT_BUNDLE</default>
        <docblock line="63">
          <description>The bundle that the assets belong to.</description>
          <long-description></long-description>
          <tag line="63" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="75" namespace="Laravel" package="Default">
        <name>$assets</name>
        <default>array()</default>
        <docblock line="70">
          <description>All of the registered assets.</description>
          <long-description></long-description>
          <tag line="70" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="83" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="77">
          <description>Create a new asset container instance.</description>
          <long-description></long-description>
          <tag line="77" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="112" package="Default">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="88">
          <description>Add an asset to the container.</description>
          <long-description>&lt;p&gt;The extension of the asset source will be used to determine the type of
asset being registered (CSS or JavaScript). When using a non-standard
extension, the style/script methods may be used to register assets.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Add an asset to the container
    Asset::container()-&gt;add('jquery', 'js/jquery.js');

    // Add an asset that has dependencies on other assets
    Asset::add('jquery', 'js/jquery.js', 'jquery-ui');

    // Add an asset that should have attributes applied to its tags
    Asset::add('jquery', 'js/jquery.js', null, array('defer'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="88" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="param" description="" type="string" variable="$source">
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="param" description="" type="array" variable="$dependencies">
            <type by_reference="false">array</type>
          </tag>
          <tag line="88" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="88" name="return" description="" type="\Laravel\Asset_Container">
            <type by_reference="false">\Laravel\Asset_Container</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="112">
          <name>$source</name>
          <default></default>
          <type/>
        </argument>
        <argument line="112">
          <name>$dependencies</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="112">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="128" package="Default">
        <name>style</name>
        <full_name>style</full_name>
        <docblock line="119">
          <description>Add a CSS file to the registered assets.</description>
          <long-description></long-description>
          <tag line="119" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="param" description="" type="string" variable="$source">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="param" description="" type="array" variable="$dependencies">
            <type by_reference="false">array</type>
          </tag>
          <tag line="119" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="119" name="return" description="" type="\Laravel\Asset_Container">
            <type by_reference="false">\Laravel\Asset_Container</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="128">
          <name>$source</name>
          <default></default>
          <type/>
        </argument>
        <argument line="128">
          <name>$dependencies</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="128">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="149" package="Default">
        <name>script</name>
        <full_name>script</full_name>
        <docblock line="140">
          <description>Add a JavaScript file to the registered assets.</description>
          <long-description></long-description>
          <tag line="140" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="param" description="" type="string" variable="$source">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="param" description="" type="array" variable="$dependencies">
            <type by_reference="false">array</type>
          </tag>
          <tag line="140" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="140" name="return" description="" type="\Laravel\Asset_Container">
            <type by_reference="false">\Laravel\Asset_Container</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="149">
          <name>$source</name>
          <default></default>
          <type/>
        </argument>
        <argument line="149">
          <name>$dependencies</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="149">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="162" package="Default">
        <name>path</name>
        <full_name>path</full_name>
        <docblock line="156">
          <description>Returns the full-path for an asset.</description>
          <long-description></long-description>
          <tag line="156" name="param" description="" type="string" variable="$source">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$source</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="173" package="Default">
        <name>bundle</name>
        <full_name>bundle</full_name>
        <docblock line="167">
          <description>Set the bundle that the container's assets belong to.</description>
          <long-description></long-description>
          <tag line="167" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="return" description="" type="\Laravel\Asset_Container">
            <type by_reference="false">\Laravel\Asset_Container</type>
          </tag>
        </docblock>
        <argument line="173">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="189" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="179">
          <description>Add an asset to the array of registered assets.</description>
          <long-description></long-description>
          <tag line="179" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="param" description="" type="string" variable="$source">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="param" description="" type="array" variable="$dependencies">
            <type by_reference="false">array</type>
          </tag>
          <tag line="179" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="179" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="189">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="189">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="189">
          <name>$source</name>
          <default></default>
          <type/>
        </argument>
        <argument line="189">
          <name>$dependencies</name>
          <default></default>
          <type/>
        </argument>
        <argument line="189">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="203" package="Default">
        <name>styles</name>
        <full_name>styles</full_name>
        <docblock line="198">
          <description>Get the links to all of the registered CSS assets.</description>
          <long-description></long-description>
          <tag line="198" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="213" package="Default">
        <name>scripts</name>
        <full_name>scripts</full_name>
        <docblock line="208">
          <description>Get the links to all of the registered JavaScript assets.</description>
          <long-description></long-description>
          <tag line="208" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="224" package="Default">
        <name>group</name>
        <full_name>group</full_name>
        <docblock line="218">
          <description>Get all of the registered assets for a given type / group.</description>
          <long-description></long-description>
          <tag line="218" name="param" description="" type="string" variable="$group">
            <type by_reference="false">string</type>
          </tag>
          <tag line="218" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="224">
          <name>$group</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="245" package="Default">
        <name>asset</name>
        <full_name>asset</full_name>
        <docblock line="238">
          <description>Get the HTML link to a registered asset.</description>
          <long-description></long-description>
          <tag line="238" name="param" description="" type="string" variable="$group">
            <type by_reference="false">string</type>
          </tag>
          <tag line="238" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="238" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="245">
          <name>$group</name>
          <default></default>
          <type/>
        </argument>
        <argument line="245">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="268" package="Default">
        <name>arrange</name>
        <full_name>arrange</full_name>
        <docblock line="262">
          <description>Sort and retrieve assets based on their dependencies</description>
          <long-description></long-description>
          <tag line="262" name="param" description="" type="array" variable="$assets">
            <type by_reference="false">array</type>
          </tag>
          <tag line="262" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="268">
          <name>$assets</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="293" package="Default">
        <name>evaluate_asset</name>
        <full_name>evaluate_asset</full_name>
        <docblock line="283">
          <description>Evaluate an asset and its dependencies.</description>
          <long-description></long-description>
          <tag line="283" name="param" description="" type="string" variable="$asset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="283" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="283" name="param" description="" type="array" variable="$original">
            <type by_reference="false">array</type>
          </tag>
          <tag line="283" name="param" description="" type="array" variable="$sorted">
            <type by_reference="false">array</type>
          </tag>
          <tag line="283" name="param" description="" type="array" variable="$assets">
            <type by_reference="false">array</type>
          </tag>
          <tag line="283" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="293">
          <name>$asset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="293">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="293">
          <name>$original</name>
          <default></default>
          <type/>
        </argument>
        <argument line="293">
          <name>$sorted</name>
          <default></default>
          <type/>
        </argument>
        <argument line="293">
          <name>$assets</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="338" package="Default">
        <name>dependency_is_valid</name>
        <full_name>dependency_is_valid</full_name>
        <docblock line="325">
          <description>Verify that an asset's dependency is valid.</description>
          <long-description>&lt;p&gt;A dependency is considered valid if it exists, is not a circular reference, and is
not a reference to the owning asset itself. If the dependency doesn't exist, no
error or warning will be given. For the other cases, an exception is thrown.&lt;/p&gt;</long-description>
          <tag line="325" name="param" description="" type="string" variable="$asset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="325" name="param" description="" type="string" variable="$dependency">
            <type by_reference="false">string</type>
          </tag>
          <tag line="325" name="param" description="" type="array" variable="$original">
            <type by_reference="false">array</type>
          </tag>
          <tag line="325" name="param" description="" type="array" variable="$assets">
            <type by_reference="false">array</type>
          </tag>
          <tag line="325" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="338">
          <name>$asset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="338">
          <name>$dependency</name>
          <default></default>
          <type/>
        </argument>
        <argument line="338">
          <name>$original</name>
          <default></default>
          <type/>
        </argument>
        <argument line="338">
          <name>$assets</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/asset.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Asset</error>
      <error line="36" code="50015">Argument $method is missing from the Docblock of __callStatic()</error>
      <error line="36" code="50015">Argument $parameters is missing from the Docblock of __callStatic()</error>
      <error line="54" code="50000">No DocBlock was found for \Laravel\Asset_Container</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/command.php" hash="a6c69a91612caf2663ee53c90e0d2d07" package="Default">
    <include line="128" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Laravel\CLI" line="7" package="Default">
      <extends/>
      <name>Command</name>
      <full_name>\Laravel\CLI\Command</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\CLI" line="23" package="Default">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="9">
          <description>Run a CLI task with the given arguments.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Call the migrate artisan task
    Command::run(array('migrate'));

    // Call the migrate task with some arguments
    Command::run(array('migrate:rollback', 'bundle-name'))
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="9" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="9" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="23">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel\CLI" line="63" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="57">
          <description>Determine if the given command arguments are valid.</description>
          <long-description></long-description>
          <tag line="57" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="57" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$arguments</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel\CLI" line="77" package="Default">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="71">
          <description>Parse the task name to extract the bundle, task, and method.</description>
          <long-description></long-description>
          <tag line="71" name="param" description="" type="string" variable="$task">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$task</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\CLI" line="111" package="Default">
        <name>resolve</name>
        <full_name>resolve</full_name>
        <docblock line="96">
          <description>Resolve an instance of the given task name.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Resolve an instance of a task
    $task = Command::resolve('application', 'migrate');

    // Resolve an instance of a task within a bundle
    $task = Command::resolve('bundle', 'foo');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="96" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="param" description="" type="string" variable="$task">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="111">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="111">
          <name>$task</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel\CLI" line="142" package="Default">
        <name>options</name>
        <full_name>options</full_name>
        <docblock line="136">
          <description>Parse the command line arguments and return the results.</description>
          <long-description></long-description>
          <tag line="136" name="param" description="" type="array" variable="$argv">
            <type by_reference="false">array</type>
          </tag>
          <tag line="136" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$argv</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel\CLI" line="191" package="Default">
        <name>format</name>
        <full_name>format</full_name>
        <docblock line="184">
          <description>Format a bundle and task into a task class name.</description>
          <long-description></long-description>
          <tag line="184" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="184" name="param" description="" type="string" variable="$task">
            <type by_reference="false">string</type>
          </tag>
          <tag line="184" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="191">
          <name>$task</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/command.php</error>
      <error line="7" code="50000">No DocBlock was found for \Laravel\CLI\Command</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/artisan.php" hash="35209719ba8dd781599712c8de9ae286" package="Default">
    <include line="31" type="Require" package="Default">
      <name/>
      <docblock line="25">
        <description>We will register all of the Laravel provided tasks inside the IoC
container so they can be resolved by the task class.</description>
        <long-description>&lt;p&gt;This allows
us to seamlessly add tasks to the CLI so that the Task class
doesn't have to worry about how to resolve core tasks.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/artisan.php</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/dependencies.php" hash="f583ef4b73b8d8812af93999b67a0cad" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/dependencies.php</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/route.php" hash="0736fbe8463006c5a1549717bf5bcdce" package="Default">
    <class final="false" abstract="false" namespace="Laravel\CLI\Tasks" line="7" package="Default">
      <extends>\Laravel\CLI\Tasks\Task</extends>
      <name>Route</name>
      <full_name>\Laravel\CLI\Tasks\Route</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks" line="15" package="Default">
        <name>call</name>
        <full_name>call</full_name>
        <docblock line="9">
          <description>Execute a route and dump the result.</description>
          <long-description></long-description>
          <tag line="9" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="9" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="15">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks" line="39" package="Default">
        <name>route</name>
        <full_name>route</full_name>
        <docblock line="34">
          <description>Dump the results of the currently established route.</description>
          <long-description></long-description>
          <tag line="34" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/route.php</error>
      <error line="7" code="50000">No DocBlock was found for \Laravel\CLI\Tasks\Route</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/session/manager.php" hash="7167259364a8acbb424cf3819fae7efc" package="Default">
    <class final="false" abstract="false" namespace="Laravel\CLI\Tasks\Session" line="10" package="Default">
      <extends>\Laravel\CLI\Tasks\Task</extends>
      <name>Manager</name>
      <full_name>\Laravel\CLI\Tasks\Session\Manager</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Session" line="18" package="Default">
        <name>table</name>
        <full_name>table</full_name>
        <docblock line="12">
          <description>Generate the session table on the database.</description>
          <long-description></long-description>
          <tag line="12" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="12" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Session" line="54" package="Default">
        <name>sweep</name>
        <full_name>sweep</full_name>
        <docblock line="48">
          <description>Sweep the expired sessions from storage.</description>
          <long-description></long-description>
          <tag line="48" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="48" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Session" line="77" package="Default">
        <name>driver</name>
        <full_name>driver</full_name>
        <docblock line="71">
          <description>Set the session driver to a given value.</description>
          <long-description></long-description>
          <tag line="71" name="param" description="" type="string" variable="$driver">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$driver</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/session/manager.php</error>
      <error line="10" code="50000">No DocBlock was found for \Laravel\CLI\Tasks\Session\Manager</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/session/migration.php" hash="9e09291949e43457fd7872fe1b8e0edd" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>Create_Session_Table</name>
      <full_name>\Create_Session_Table</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>up</name>
        <full_name>up</full_name>
        <docblock line="5">
          <description>Make changes to the database.</description>
          <long-description></long-description>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Default">
        <name>down</name>
        <full_name>down</full_name>
        <docblock line="27">
          <description>Revert the changes to the database.</description>
          <long-description></long-description>
          <tag line="27" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/session/migration.php</error>
      <error line="3" code="50000">No DocBlock was found for \Create_Session_Table</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/test/runner.php" hash="b37c9ae1f5bdb00f1151e2c84ad63baf" package="Default">
    <class final="false" abstract="false" namespace="Laravel\CLI\Tasks\Test" line="8" package="Default">
      <extends>\Laravel\CLI\Tasks\Task</extends>
      <name>Runner</name>
      <full_name>\Laravel\CLI\Tasks\Test\Runner</full_name>
      <property final="false" static="false" visibility="protected" line="17" namespace="Laravel\CLI\Tasks\Test" package="Default">
        <name>$base_path</name>
        <default></default>
        <docblock line="10">
          <description>The base directory where the tests will be executed.</description>
          <long-description>&lt;p&gt;A phpunit.xml should also be stored in that directory.&lt;/p&gt;</long-description>
          <tag line="10" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Test" line="25" package="Default">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="19">
          <description>Run all of the unit tests for the application.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="" type="array" variable="$bundles">
            <type by_reference="false">array</type>
          </tag>
          <tag line="19" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$bundles</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Test" line="37" package="Default">
        <name>core</name>
        <full_name>core</full_name>
        <docblock line="32">
          <description>Run the tests for the Laravel framework.</description>
          <long-description></long-description>
          <tag line="32" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Test" line="51" package="Default">
        <name>bundle</name>
        <full_name>bundle</full_name>
        <docblock line="45">
          <description>Run the tests for a given bundle.</description>
          <long-description></long-description>
          <tag line="45" name="param" description="" type="array" variable="$bundles">
            <type by_reference="false">array</type>
          </tag>
          <tag line="45" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$bundles</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Test" line="80" package="Default">
        <name>test</name>
        <full_name>test</full_name>
        <docblock line="75">
          <description>Run PHPUnit with the temporary XML configuration.</description>
          <long-description></long-description>
          <tag line="75" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Test" line="105" package="Default">
        <name>stub</name>
        <full_name>stub</full_name>
        <docblock line="99">
          <description>Write a stub phpunit.xml file to the base directory.</description>
          <long-description></long-description>
          <tag line="99" name="param" description="" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$directory</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Test" line="129" package="Default">
        <name>swap_bootstrap</name>
        <full_name>swap_bootstrap</full_name>
        <docblock line="122">
          <description>Swap the bootstrap file in the stub.</description>
          <long-description></long-description>
          <tag line="122" name="param" description="" type="string" variable="$stub">
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="param" description="" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="129">
          <name>$stub</name>
          <default></default>
          <type/>
        </argument>
        <argument line="129">
          <name>$directory</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Test" line="141" package="Default">
        <name>swap_directory</name>
        <full_name>swap_directory</full_name>
        <docblock line="134">
          <description>Swap the directory in the stub.</description>
          <long-description></long-description>
          <tag line="134" name="param" description="" type="string" variable="$stub">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="param" description="" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$stub</name>
          <default></default>
          <type/>
        </argument>
        <argument line="141">
          <name>$directory</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/test/runner.php</error>
      <error line="8" code="50000">No DocBlock was found for \Laravel\CLI\Tasks\Test\Runner</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/test/phpunit.php" hash="ee15c71e708d95739643094447b900e6" package="Default">
    <include line="11" type="Require" package="Default">
      <name>paths.php</name>
    </include>
    <include line="16" type="Require" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="6" package="Default">
      <name>DS</name>
      <full_name>\DS</full_name>
      <value>DIRECTORY_SEPARATOR</value>
    </constant>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/test/phpunit.php</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/migrate/stub.php" hash="7fa1c466eb1ef8a75e7940ea9ff1e50e" package="Default"/>
  <file path="laravel/cli/tasks/migrate/migrator.php" hash="f96f1a79eb331540f63048eca77cacc3" package="Default">
    <class final="false" abstract="false" namespace="Laravel\CLI\Tasks\Migrate" line="9" package="Default">
      <extends>\Laravel\CLI\Tasks\Task</extends>
      <name>Migrator</name>
      <full_name>\Laravel\CLI\Tasks\Migrate\Migrator</full_name>
      <property final="false" static="false" visibility="protected" line="16" namespace="Laravel\CLI\Tasks\Migrate" package="Default">
        <name>$resolver</name>
        <default></default>
        <docblock line="11">
          <description>The migration resolver instance.</description>
          <long-description></long-description>
          <tag line="11" name="var" description="" type="\Laravel\CLI\Tasks\Migrate\Resolver">
            <type by_reference="false">\Laravel\CLI\Tasks\Migrate\Resolver</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="Laravel\CLI\Tasks\Migrate" package="Default">
        <name>$database</name>
        <default></default>
        <docblock line="18">
          <description>The migration database instance.</description>
          <long-description></long-description>
          <tag line="18" name="var" description="" type="\Laravel\CLI\Tasks\Migrate\Database">
            <type by_reference="false">\Laravel\CLI\Tasks\Migrate\Database</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="32" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="25">
          <description>Create a new instance of the Migrator CLI task.</description>
          <long-description></long-description>
          <tag line="25" name="param" description="" type="\Laravel\CLI\Tasks\Migrate\Resolver" variable="$resolver">
            <type by_reference="false">\Laravel\CLI\Tasks\Migrate\Resolver</type>
          </tag>
          <tag line="25" name="param" description="" type="\Laravel\CLI\Tasks\Migrate\Database" variable="$database">
            <type by_reference="false">\Laravel\CLI\Tasks\Migrate\Database</type>
          </tag>
          <tag line="25" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$resolver</name>
          <default></default>
          <type>\Laravel\CLI\Tasks\Migrate\Resolver</type>
        </argument>
        <argument line="32">
          <name>$database</name>
          <default></default>
          <type>\Laravel\CLI\Tasks\Migrate\Database</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="44" package="Default">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="38">
          <description>Run a database migration command.</description>
          <long-description></long-description>
          <tag line="38" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="38" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="67" package="Default">
        <name>migrate</name>
        <full_name>migrate</full_name>
        <docblock line="60">
          <description>Run the outstanding migrations for a given bundle.</description>
          <long-description></long-description>
          <tag line="60" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="param" description="" type="int" variable="$version">
            <type by_reference="false">int</type>
          </tag>
          <tag line="60" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$bundle</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="67">
          <name>$version</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="102" package="Default">
        <name>rollback</name>
        <full_name>rollback</full_name>
        <docblock line="96">
          <description>Rollback the latest migration command.</description>
          <long-description></long-description>
          <tag line="96" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="96" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="151" package="Default">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="145">
          <description>Rollback all of the executed migrations.</description>
          <long-description></long-description>
          <tag line="145" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="145" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="162" package="Default">
        <name>rebuild</name>
        <full_name>rebuild</full_name>
        <docblock line="156">
          <description>Reset the database to pristine state and run all migrations</description>
          <long-description></long-description>
          <tag line="156" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="156" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="180" package="Default">
        <name>install</name>
        <full_name>install</full_name>
        <docblock line="175">
          <description>Install the database tables used by the migration system.</description>
          <long-description></long-description>
          <tag line="175" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="212" package="Default">
        <name>make</name>
        <full_name>make</full_name>
        <docblock line="206">
          <description>Generate a new migration file.</description>
          <long-description></long-description>
          <tag line="206" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="206" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Migrate" line="253" package="Default">
        <name>stub</name>
        <full_name>stub</full_name>
        <docblock line="246">
          <description>Get the stub migration with the proper class name.</description>
          <long-description></long-description>
          <tag line="246" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="246" name="param" description="" type="string" variable="$migration">
            <type by_reference="false">string</type>
          </tag>
          <tag line="246" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="253">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="253">
          <name>$migration</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Migrate" line="273" package="Default">
        <name>display</name>
        <full_name>display</full_name>
        <docblock line="267">
          <description>Get the migration bundle and name for display.</description>
          <long-description></long-description>
          <tag line="267" name="param" description="" type="array" variable="$migration">
            <type by_reference="false">array</type>
          </tag>
          <tag line="267" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="273">
          <name>$migration</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/migrate/migrator.php</error>
      <error line="9" code="50000">No DocBlock was found for \Laravel\CLI\Tasks\Migrate\Migrator</error>
      <notice line="156" code="50013">Parameter $arguments could not be found in rebuild()</notice>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/migrate/database.php" hash="6b5a3b92fc096fc7ad6159082fd6ff43" package="Default">
    <class final="false" abstract="false" namespace="Laravel\CLI\Tasks\Migrate" line="6" package="Default">
      <extends/>
      <name>Database</name>
      <full_name>\Laravel\CLI\Tasks\Migrate\Database</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="16" package="Default">
        <name>log</name>
        <full_name>log</full_name>
        <docblock line="8">
          <description>Log a migration in the migration table.</description>
          <long-description></long-description>
          <tag line="8" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="8" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="8" name="param" description="" type="int" variable="$batch">
            <type by_reference="false">int</type>
          </tag>
          <tag line="8" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="16">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="16">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="16">
          <name>$batch</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="28" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="21">
          <description>Delete a row from the migration table.</description>
          <long-description></long-description>
          <tag line="21" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="21" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="21" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="28">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="38" package="Default">
        <name>last</name>
        <full_name>last</full_name>
        <docblock line="33">
          <description>Return an array of the last batch of migrations.</description>
          <long-description></long-description>
          <tag line="33" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="59" package="Default">
        <name>ran</name>
        <full_name>ran</full_name>
        <docblock line="53">
          <description>Get all of the migrations that have run for a bundle.</description>
          <long-description></long-description>
          <tag line="53" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="69" package="Default">
        <name>batch</name>
        <full_name>batch</full_name>
        <docblock line="64">
          <description>Get the maximum batch ID from the migration table.</description>
          <long-description></long-description>
          <tag line="64" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Migrate" line="79" package="Default">
        <name>table</name>
        <full_name>table</full_name>
        <docblock line="74">
          <description>Get a database query instance for the migration table.</description>
          <long-description></long-description>
          <tag line="74" name="return" description="" type="\Laravel\CLI\Tasks\Migrate\Laravel\Database\Query">
            <type by_reference="false">\Laravel\CLI\Tasks\Migrate\Laravel\Database\Query</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/migrate/database.php</error>
      <error line="6" code="50000">No DocBlock was found for \Laravel\CLI\Tasks\Migrate\Database</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/migrate/resolver.php" hash="48e63d46db3030b518a1782cc2a61939" package="Default">
    <include line="108" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Laravel\CLI\Tasks\Migrate" line="5" package="Default">
      <extends/>
      <name>Resolver</name>
      <full_name>\Laravel\CLI\Tasks\Migrate\Resolver</full_name>
      <property final="false" static="false" visibility="protected" line="12" namespace="Laravel\CLI\Tasks\Migrate" package="Default">
        <name>$database</name>
        <default></default>
        <docblock line="7">
          <description>The migration database instance.</description>
          <long-description></long-description>
          <tag line="7" name="var" description="" type="\Laravel\CLI\Tasks\Migrate\Database">
            <type by_reference="false">\Laravel\CLI\Tasks\Migrate\Database</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="20" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="14">
          <description>Create a new instance of the migration resolver.</description>
          <long-description></long-description>
          <tag line="14" name="param" description="" type="\Laravel\CLI\Tasks\Migrate\Database" variable="$database">
            <type by_reference="false">\Laravel\CLI\Tasks\Migrate\Database</type>
          </tag>
          <tag line="14" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="20">
          <name>$database</name>
          <default></default>
          <type>\Laravel\CLI\Tasks\Migrate\Database</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="31" package="Default">
        <name>outstanding</name>
        <full_name>outstanding</full_name>
        <docblock line="25">
          <description>Resolve all of the outstanding migrations for a bundle.</description>
          <long-description></long-description>
          <tag line="25" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="25" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$bundle</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Migrate" line="77" package="Default">
        <name>last</name>
        <full_name>last</full_name>
        <docblock line="72">
          <description>Resolve an array of the last batch of migrations.</description>
          <long-description></long-description>
          <tag line="72" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Migrate" line="88" package="Default">
        <name>resolve</name>
        <full_name>resolve</full_name>
        <docblock line="82">
          <description>Resolve an array of migration instances.</description>
          <long-description></long-description>
          <tag line="82" name="param" description="" type="array" variable="$migrations">
            <type by_reference="false">array</type>
          </tag>
          <tag line="82" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$migrations</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Migrate" line="147" package="Default">
        <name>migrations</name>
        <full_name>migrations</full_name>
        <docblock line="141">
          <description>Grab all of the migration filenames for a bundle.</description>
          <long-description></long-description>
          <tag line="141" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="141" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/migrate/resolver.php</error>
      <error line="5" code="50000">No DocBlock was found for \Laravel\CLI\Tasks\Migrate\Resolver</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/task.php" hash="e09c4cf7127fa5cbefd03446b152fd45" package="Default">
    <class final="false" abstract="true" namespace="Laravel\CLI\Tasks" line="3" package="Default">
      <extends/>
      <name>Task</name>
      <full_name>\Laravel\CLI\Tasks\Task</full_name>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/task.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\CLI\Tasks\Task</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/help.php" hash="c50a427d8e9c42d63432f239ca21c0ab" package="Default">
    <class final="false" abstract="false" namespace="Laravel\CLI\Tasks" line="6" package="Default">
      <extends>\Laravel\CLI\Tasks\Task</extends>
      <name>Help</name>
      <full_name>\Laravel\CLI\Tasks\Help</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks" line="13" package="Default">
        <name>commands</name>
        <full_name>commands</full_name>
        <docblock line="8">
          <description>List available artisan commands.</description>
          <long-description></long-description>
          <tag line="8" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/help.php</error>
      <error line="6" code="50000">No DocBlock was found for \Laravel\CLI\Tasks\Help</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/key.php" hash="9d24c743b2872e4d273afae4a5eae4a8" package="Default">
    <class final="false" abstract="false" namespace="Laravel\CLI\Tasks" line="6" package="Default">
      <extends>\Laravel\CLI\Tasks\Task</extends>
      <name>Key</name>
      <full_name>\Laravel\CLI\Tasks\Key</full_name>
      <property final="false" static="false" visibility="protected" line="13" namespace="Laravel\CLI\Tasks" package="Default">
        <name>$path</name>
        <default></default>
        <docblock line="8">
          <description>The path to the application config.</description>
          <long-description></long-description>
          <tag line="8" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks" line="20" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="15">
          <description>Create a new instance of the Key task.</description>
          <long-description></long-description>
          <tag line="15" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks" line="31" package="Default">
        <name>generate</name>
        <full_name>generate</full_name>
        <docblock line="25">
          <description>Generate a random key for the application.</description>
          <long-description></long-description>
          <tag line="25" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="25" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/key.php</error>
      <error line="6" code="50000">No DocBlock was found for \Laravel\CLI\Tasks\Key</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/bundle/repository.php" hash="0dfe7a86ccb7475b5b204082e9b22359" package="Default">
    <class final="false" abstract="false" namespace="Laravel\CLI\Tasks\Bundle" line="3" package="Default">
      <extends/>
      <name>Repository</name>
      <full_name>\Laravel\CLI\Tasks\Bundle\Repository</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel\CLI\Tasks\Bundle" package="Default">
        <name>$api</name>
        <default>'http://bundles.laravel.com/api/'</default>
        <docblock line="5">
          <description>The root of the Laravel bundle API.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Bundle" line="18" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="12">
          <description>Get the decoded JSON information for a bundle.</description>
          <long-description></long-description>
          <tag line="12" name="param" description="" type="string|int" variable="$bundle">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="12" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/bundle/repository.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\CLI\Tasks\Bundle\Repository</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/bundle/publisher.php" hash="164ae7b6eed3791affc105881e293d0c" package="Default">
    <class final="false" abstract="false" namespace="Laravel\CLI\Tasks\Bundle" line="7" package="Default">
      <extends/>
      <name>Publisher</name>
      <full_name>\Laravel\CLI\Tasks\Bundle\Publisher</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Bundle" line="15" package="Default">
        <name>publish</name>
        <full_name>publish</full_name>
        <docblock line="9">
          <description>Publish a bundle's assets to the public directory.</description>
          <long-description></long-description>
          <tag line="9" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="9" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="15">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Bundle" line="37" package="Default">
        <name>unpublish</name>
        <full_name>unpublish</full_name>
        <docblock line="31">
          <description>Delete a bundle's assets from the public directory</description>
          <long-description></long-description>
          <tag line="31" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Bundle" line="58" package="Default">
        <name>move</name>
        <full_name>move</full_name>
        <docblock line="51">
          <description>Copy the contents of a bundle's assets to the public folder.</description>
          <long-description></long-description>
          <tag line="51" name="param" description="" type="string" variable="$source">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="param" description="" type="string" variable="$destination">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$source</name>
          <default></default>
          <type/>
        </argument>
        <argument line="58">
          <name>$destination</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Bundle" line="69" package="Default">
        <name>to</name>
        <full_name>to</full_name>
        <docblock line="63">
          <description>Get the "to" location of the bundle's assets.</description>
          <long-description></long-description>
          <tag line="63" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Bundle" line="80" package="Default">
        <name>from</name>
        <full_name>from</full_name>
        <docblock line="74">
          <description>Get the "from" location of the bundle's assets.</description>
          <long-description></long-description>
          <tag line="74" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="74" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/bundle/publisher.php</error>
      <error line="7" code="50000">No DocBlock was found for \Laravel\CLI\Tasks\Bundle\Publisher</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/bundle/providers/github.php" hash="4b8ae009c568707717bd93b7877b03d0" package="Default">
    <class final="false" abstract="false" namespace="Laravel\CLI\Tasks\Bundle\Providers" line="3" package="Default">
      <extends>\Laravel\CLI\Tasks\Bundle\Providers\Provider</extends>
      <name>Github</name>
      <full_name>\Laravel\CLI\Tasks\Bundle\Providers\Github</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Bundle\Providers" line="12" package="Default">
        <name>install</name>
        <full_name>install</full_name>
        <docblock line="5">
          <description>Install the given bundle into the application.</description>
          <long-description></long-description>
          <tag line="5" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="5" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="5" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="12">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="12">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/bundle/providers/github.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\CLI\Tasks\Bundle\Providers\Github</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/bundle/providers/provider.php" hash="f6a754e88c1dc03292d6dd4ccda314c8" package="Default">
    <class final="false" abstract="true" namespace="Laravel\CLI\Tasks\Bundle\Providers" line="5" package="Default">
      <extends/>
      <name>Provider</name>
      <full_name>\Laravel\CLI\Tasks\Bundle\Providers\Provider</full_name>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Bundle\Providers" line="14" package="Default">
        <name>install</name>
        <full_name>install</full_name>
        <docblock line="7">
          <description>Install the given bundle into the application.</description>
          <long-description></long-description>
          <tag line="7" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="7" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="7" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="14">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="14">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Bundle\Providers" line="24" package="Default">
        <name>zipball</name>
        <full_name>zipball</full_name>
        <docblock line="16">
          <description>Install a bundle from by downloading a Zip.</description>
          <long-description></long-description>
          <tag line="16" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="16" name="param" description="" type="array" variable="$bundle">
            <type by_reference="false">array</type>
          </tag>
          <tag line="16" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="16" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="24">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="24">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="24">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Bundle\Providers" line="67" package="Default">
        <name>download</name>
        <full_name>download</full_name>
        <docblock line="61">
          <description>Download a remote zip archive from a URL.</description>
          <long-description></long-description>
          <tag line="61" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/bundle/providers/provider.php</error>
      <error line="5" code="50000">No DocBlock was found for \Laravel\CLI\Tasks\Bundle\Providers\Provider</error>
    </parse_markers>
  </file>
  <file path="laravel/cli/tasks/bundle/bundler.php" hash="31254ca4c96b2e6cd5f84c10ce439011" package="Default">
    <class final="false" abstract="false" namespace="Laravel\CLI\Tasks\Bundle" line="10" package="Default">
      <extends>\Laravel\CLI\Tasks\Task</extends>
      <name>Bundler</name>
      <full_name>\Laravel\CLI\Tasks\Bundle\Bundler</full_name>
      <property final="false" static="false" visibility="protected" line="17" namespace="Laravel\CLI\Tasks\Bundle" package="Default">
        <name>$repository</name>
        <default></default>
        <docblock line="12">
          <description>The bundle API repository.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="\Laravel\CLI\Tasks\Bundle\Repository">
            <type by_reference="false">\Laravel\CLI\Tasks\Bundle\Repository</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Bundle" line="25" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="19">
          <description>Create a new bundle manager task.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="" type="\Laravel\CLI\Tasks\Bundle\Repository" variable="$repository">
            <type by_reference="false">\Laravel\CLI\Tasks\Bundle\Repository</type>
          </tag>
          <tag line="19" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$repository</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Bundle" line="36" package="Default">
        <name>install</name>
        <full_name>install</full_name>
        <docblock line="30">
          <description>Install the given bundles into the application.</description>
          <long-description></long-description>
          <tag line="30" name="param" description="" type="array" variable="$bundles">
            <type by_reference="false">array</type>
          </tag>
          <tag line="30" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$bundles</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Bundle" line="70" package="Default">
        <name>uninstall</name>
        <full_name>uninstall</full_name>
        <docblock line="64">
          <description>Uninstall the given bundles from the application.</description>
          <long-description></long-description>
          <tag line="64" name="param" description="" type="array" variable="$bundles">
            <type by_reference="false">array</type>
          </tag>
          <tag line="64" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$bundles</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Bundle" line="107" package="Default">
        <name>upgrade</name>
        <full_name>upgrade</full_name>
        <docblock line="101">
          <description>Upgrade the given bundles for the application.</description>
          <long-description></long-description>
          <tag line="101" name="param" description="" type="array" variable="$bundles">
            <type by_reference="false">array</type>
          </tag>
          <tag line="101" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$bundles</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Bundle" line="152" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="146">
          <description>Gather all of the bundles from the bundle repository.</description>
          <long-description></long-description>
          <tag line="146" name="param" description="" type="array" variable="$bundles">
            <type by_reference="false">array</type>
          </tag>
          <tag line="146" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="152">
          <name>$bundles</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Bundle" line="192" package="Default">
        <name>publish</name>
        <full_name>publish</full_name>
        <docblock line="186">
          <description>Publish bundle assets to the public directory.</description>
          <long-description></long-description>
          <tag line="186" name="param" description="" type="array" variable="$bundles">
            <type by_reference="false">array</type>
          </tag>
          <tag line="186" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="192">
          <name>$bundles</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel\CLI\Tasks\Bundle" line="205" package="Default">
        <name>unpublish</name>
        <full_name>unpublish</full_name>
        <docblock line="199">
          <description>Delete bundle assets from the public directory.</description>
          <long-description></long-description>
          <tag line="199" name="param" description="" type="array" variable="$bundles">
            <type by_reference="false">array</type>
          </tag>
          <tag line="199" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$bundles</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Bundle" line="219" package="Default">
        <name>download</name>
        <full_name>download</full_name>
        <docblock line="212">
          <description>Install a bundle using a provider.</description>
          <long-description></long-description>
          <tag line="212" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="212" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="212" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="219">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="219">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Bundle" line="232" package="Default">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="226">
          <description>Retrieve a bundle from the repository.</description>
          <long-description></long-description>
          <tag line="226" name="param" description="" type="string" variable="$bundle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="226" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="232">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel\CLI\Tasks\Bundle" line="250" package="Default">
        <name>path</name>
        <full_name>path</full_name>
        <docblock line="244">
          <description>Return the path for a given bundle.</description>
          <long-description></long-description>
          <tag line="244" name="param" description="" type="array" variable="$bundle">
            <type by_reference="false">array</type>
          </tag>
          <tag line="244" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="250">
          <name>$bundle</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/cli/tasks/bundle/bundler.php</error>
      <error line="10" code="50000">No DocBlock was found for \Laravel\CLI\Tasks\Bundle\Bundler</error>
    </parse_markers>
  </file>
  <file path="laravel/database.php" hash="cce0203e77265346cbf9e2d1f54eb1f8" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="7" package="Default">
      <extends/>
      <name>Database</name>
      <full_name>\Laravel\Database</full_name>
      <property final="false" static="true" visibility="public" line="14" namespace="Laravel" package="Default">
        <name>$connections</name>
        <default>array()</default>
        <docblock line="9">
          <description>The established database connections.</description>
          <long-description></long-description>
          <tag line="9" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="21" namespace="Laravel" package="Default">
        <name>$registrar</name>
        <default>array()</default>
        <docblock line="16">
          <description>The third-party driver registrar.</description>
          <long-description></long-description>
          <tag line="16" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="39" package="Default">
        <name>connection</name>
        <full_name>connection</full_name>
        <docblock line="23">
          <description>Get a database connection.</description>
          <long-description>&lt;p&gt;If no database name is specified, the default connection will be returned.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Get the default database connection for the application
    $connection = DB::connection();

    // Get a specific connection by passing the connection name
    $connection = DB::connection('mysql');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="23" name="param" description="" type="string" variable="$connection">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="return" description="" type="\Laravel\Database\Connection">
            <type by_reference="false">\Laravel\Database\Connection</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$connection</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="64" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="58">
          <description>Get a PDO database connection for a given database configuration.</description>
          <long-description></long-description>
          <tag line="58" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="58" name="return" description="" type="\Laravel\PDO">
            <type by_reference="false">\Laravel\PDO</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="75" package="Default">
        <name>connector</name>
        <full_name>connector</full_name>
        <docblock line="69">
          <description>Create a new database connector instance.</description>
          <long-description></long-description>
          <tag line="69" name="param" description="" type="string" variable="$driver">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="return" description="" type="\Laravel\Database\Connectors\Connector">
            <type by_reference="false">\Laravel\Database\Connectors\Connector</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$driver</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="110" package="Default">
        <name>table</name>
        <full_name>table</full_name>
        <docblock line="103">
          <description>Begin a fluent query against a table.</description>
          <long-description></long-description>
          <tag line="103" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="103" name="param" description="" type="string" variable="$connection">
            <type by_reference="false">string</type>
          </tag>
          <tag line="103" name="return" description="" type="\Laravel\Database\Query">
            <type by_reference="false">\Laravel\Database\Query</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$connection</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="123" package="Default">
        <name>raw</name>
        <full_name>raw</full_name>
        <docblock line="115">
          <description>Create a new database expression instance.</description>
          <long-description>&lt;p&gt;Database expressions are used to inject raw SQL into a fluent query.&lt;/p&gt;</long-description>
          <tag line="115" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="115" name="return" description="" type="\Laravel\Database\Expression">
            <type by_reference="false">\Laravel\Database\Expression</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="136" package="Default">
        <name>escape</name>
        <full_name>escape</full_name>
        <docblock line="128">
          <description>Escape a string for usage in a query.</description>
          <long-description>&lt;p&gt;This uses the correct quoting mechanism for the default database connection.&lt;/p&gt;</long-description>
          <tag line="128" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="128" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="146" package="Default">
        <name>profile</name>
        <full_name>profile</full_name>
        <docblock line="141">
          <description>Get the profiling data for all queries.</description>
          <long-description></long-description>
          <tag line="141" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="158" package="Default">
        <name>last_query</name>
        <full_name>last_query</full_name>
        <docblock line="151">
          <description>Get the last query that was executed.</description>
          <long-description>&lt;p&gt;Returns false if no queries have been executed yet.&lt;/p&gt;</long-description>
          <tag line="151" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="172" package="Default">
        <name>extend</name>
        <full_name>extend</full_name>
        <docblock line="163">
          <description>Register a database connector and grammars.</description>
          <long-description></long-description>
          <tag line="163" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="163" name="param" description="" type="\Closure" variable="$connector">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="163" name="param" description="" type="\Closure" variable="$query">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="163" name="param" description="" type="\Closure" variable="$schema">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="163" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="172">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="172">
          <name>$connector</name>
          <default></default>
          <type>\Closure</type>
        </argument>
        <argument line="172">
          <name>$query</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="172">
          <name>$schema</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="190" package="Default">
        <name>__callStatic</name>
        <full_name>__callStatic</full_name>
        <docblock line="179">
          <description>Magic Method for calling methods on the default database connection.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get the driver name for the default database connection
    $driver = DB::driver();

    // Execute a fluent query on the default database connection
    $users = DB::table('users')-&gt;get();
&lt;/code&gt;&lt;/pre&gt;</long-description>
        </docblock>
        <argument line="190">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="190">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/database.php</error>
      <error line="7" code="50000">No DocBlock was found for \Laravel\Database</error>
      <error line="179" code="50015">Argument $method is missing from the Docblock of __callStatic()</error>
      <error line="179" code="50015">Argument $parameters is missing from the Docblock of __callStatic()</error>
    </parse_markers>
  </file>
  <file path="laravel/url.php" hash="4e1d84a0ed58433bf17d490b6e18951d" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>URL</name>
      <full_name>\Laravel\URL</full_name>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$base</name>
        <default></default>
        <docblock line="5">
          <description>The cached base URL.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="17" package="Default">
        <name>full</name>
        <full_name>full</full_name>
        <docblock line="12">
          <description>Get the full URI including the query string.</description>
          <long-description></long-description>
          <tag line="12" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="27" package="Default">
        <name>current</name>
        <full_name>current</full_name>
        <docblock line="22">
          <description>Get the full URL for the current request.</description>
          <long-description></long-description>
          <tag line="22" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="38" package="Default">
        <name>home</name>
        <full_name>home</full_name>
        <docblock line="32">
          <description>Get the URL for the application root.</description>
          <long-description></long-description>
          <tag line="32" name="param" description="" type="bool" variable="$https">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="32" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$https</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="58" package="Default">
        <name>base</name>
        <full_name>base</full_name>
        <docblock line="53">
          <description>Get the base URL of the application.</description>
          <long-description></long-description>
          <tag line="53" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="96" package="Default">
        <name>to</name>
        <full_name>to</full_name>
        <docblock line="79">
          <description>Generate an application URL.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a URL to a location within the application
    $url = URL::to('user/profile');

    // Create a HTTPS URL to a location within the application
    $url = URL::to('user/profile', true);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="79" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="79" name="param" description="" type="bool" variable="$https">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="79" name="param" description="" type="bool" variable="$asset">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="79" name="param" description="" type="bool" variable="$locale">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="79" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$url</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="96">
          <name>$https</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="96">
          <name>$asset</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="96">
          <name>$locale</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="148" package="Default">
        <name>to_secure</name>
        <full_name>to_secure</full_name>
        <docblock line="142">
          <description>Generate an application URL with HTTPS.</description>
          <long-description></long-description>
          <tag line="142" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="142" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$url</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="168" package="Default">
        <name>to_action</name>
        <full_name>to_action</full_name>
        <docblock line="153">
          <description>Generate a URL to a controller action.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Generate a URL to the "index" method of the "user" controller
    $url = URL::to_action('user@index');

    // Generate a URL to http://example.com/user/profile/taylor
    $url = URL::to_action('user@profile', array('taylor'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="153" name="param" description="" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="153" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="168">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
        <argument line="168">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="196" package="Default">
        <name>explicit</name>
        <full_name>explicit</full_name>
        <docblock line="188">
          <description>Generate an action URL from a route definition</description>
          <long-description></long-description>
          <tag line="188" name="param" description="" type="array" variable="$route">
            <type by_reference="false">array</type>
          </tag>
          <tag line="188" name="param" description="" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="188" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="188" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
        <argument line="196">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
        <argument line="196">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="210" package="Default">
        <name>convention</name>
        <full_name>convention</full_name>
        <docblock line="203">
          <description>Generate an action URI by convention.</description>
          <long-description></long-description>
          <tag line="203" name="param" description="" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="203" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="203" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="210">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
        <argument line="210">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="240" package="Default">
        <name>to_asset</name>
        <full_name>to_asset</full_name>
        <docblock line="233">
          <description>Generate an application URL to an asset.</description>
          <long-description></long-description>
          <tag line="233" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="233" name="param" description="" type="bool" variable="$https">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="233" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="240">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="240">
          <name>$https</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="280" package="Default">
        <name>to_route</name>
        <full_name>to_route</full_name>
        <docblock line="265">
          <description>Generate a URL from a route name.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a URL to the "profile" named route
    $url = URL::to_route('profile');

    // Create a URL to the "profile" named route with wildcard parameters
    $url = URL::to_route('profile', array($username));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="265" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="265" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="265" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="280">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="280">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="304" package="Default">
        <name>to_language</name>
        <full_name>to_language</full_name>
        <docblock line="297">
          <description>Get the URL to switch language, keeping the current page or not</description>
          <long-description></long-description>
          <tag line="297" name="param" description="The new language" type="string" variable="$language">
            <type by_reference="false">string</type>
          </tag>
          <tag line="297" name="param" description="Whether navigation should be reset" type="boolean" variable="$reset">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="297" name="return" description="An URL" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="304">
          <name>$language</name>
          <default></default>
          <type/>
        </argument>
        <argument line="304">
          <name>$reset</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="329" package="Default">
        <name>transpose</name>
        <full_name>transpose</full_name>
        <docblock line="322">
          <description>Substitute the parameters in a given URI.</description>
          <long-description></long-description>
          <tag line="322" name="param" description="" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="322" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="322" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="329">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="329">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="356" package="Default">
        <name>valid</name>
        <full_name>valid</full_name>
        <docblock line="350">
          <description>Determine if the given URL is valid.</description>
          <long-description></long-description>
          <tag line="350" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="350" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="356">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/url.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\URL</error>
    </parse_markers>
  </file>
  <file path="laravel/auth.php" hash="afe202d07eb3efb8febfdfa736b14343" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Auth</name>
      <full_name>\Laravel\Auth</full_name>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$drivers</name>
        <default>array()</default>
        <docblock line="5">
          <description>The currently active authentication drivers.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$registrar</name>
        <default>array()</default>
        <docblock line="12">
          <description>The third-party driver registrar.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="25" package="Default">
        <name>driver</name>
        <full_name>driver</full_name>
        <docblock line="19">
          <description>Get an authentication driver instance.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="" type="string" variable="$driver">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="return" description="" type="\Laravel\Driver">
            <type by_reference="false">\Laravel\Driver</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$driver</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="43" package="Default">
        <name>factory</name>
        <full_name>factory</full_name>
        <docblock line="37">
          <description>Create a new authentication driver instance.</description>
          <long-description></long-description>
          <tag line="37" name="param" description="" type="string" variable="$driver">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="return" description="" type="\Laravel\Driver">
            <type by_reference="false">\Laravel\Driver</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$driver</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="72" package="Default">
        <name>extend</name>
        <full_name>extend</full_name>
        <docblock line="65">
          <description>Register a third-party authentication driver.</description>
          <long-description></long-description>
          <tag line="65" name="param" description="" type="string" variable="$driver">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="param" description="" type="\Closure" variable="$resolver">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="65" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$driver</name>
          <default></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$resolver</name>
          <default></default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="88" package="Default">
        <name>__callStatic</name>
        <full_name>__callStatic</full_name>
        <docblock line="77">
          <description>Magic Method for calling the methods on the default cache driver.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Call the "user" method on the default auth driver
    $user = Auth::user();

    // Call the "check" method on the default auth driver
    Auth::check();
&lt;/code&gt;&lt;/pre&gt;</long-description>
        </docblock>
        <argument line="88">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="88">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/auth.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Auth</error>
      <error line="77" code="50015">Argument $method is missing from the Docblock of __callStatic()</error>
      <error line="77" code="50015">Argument $parameters is missing from the Docblock of __callStatic()</error>
    </parse_markers>
  </file>
  <file path="laravel/fluent.php" hash="049e84ba9886822699842b4605d47153" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Fluent</name>
      <full_name>\Laravel\Fluent</full_name>
      <property final="false" static="false" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$attributes</name>
        <default>array()</default>
        <docblock line="5">
          <description>All of the attributes set on the fluent container.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="23" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="12">
          <description>Create a new fluent container instance.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; Create a new fluent container with attributes
    $fluent = new Fluent(array('name' =&gt; 'Taylor'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="12" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="12" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="23">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="38" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="31">
          <description>Get an attribute from the fluent container.</description>
          <long-description></long-description>
          <tag line="31" name="param" description="" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="31" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$attribute</name>
          <default></default>
          <type/>
        </argument>
        <argument line="38">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="54" package="Default">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="43">
          <description>Handle dynamic calls to the container to set attributes.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Fluently set the value of a few attributes
    $fluent-&gt;name('Taylor')-&gt;age(25);

    // Set the value of an attribute to true (boolean)
    $fluent-&gt;nullable()-&gt;name('Taylor');
&lt;/code&gt;&lt;/pre&gt;</long-description>
        </docblock>
        <argument line="54">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="54">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="64" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="61">
          <description>Dynamically retrieve the value of an attribute.</description>
          <long-description></long-description>
        </docblock>
        <argument line="64">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="75" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="72">
          <description>Dynamically set the value of an attribute.</description>
          <long-description></long-description>
        </docblock>
        <argument line="75">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="83" package="Default">
        <name>__isset</name>
        <full_name>__isset</full_name>
        <docblock line="80">
          <description>Dynamically check if an attribute is set.</description>
          <long-description></long-description>
        </docblock>
        <argument line="83">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="91" package="Default">
        <name>__unset</name>
        <full_name>__unset</full_name>
        <docblock line="88">
          <description>Dynamically unset an attribute.</description>
          <long-description></long-description>
        </docblock>
        <argument line="91">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/fluent.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Fluent</error>
      <error line="43" code="50015">Argument $method is missing from the Docblock of __call()</error>
      <error line="43" code="50015">Argument $parameters is missing from the Docblock of __call()</error>
      <error line="61" code="50015">Argument $key is missing from the Docblock of __get()</error>
      <error line="72" code="50015">Argument $key is missing from the Docblock of __set()</error>
      <error line="72" code="50015">Argument $value is missing from the Docblock of __set()</error>
      <error line="80" code="50015">Argument $key is missing from the Docblock of __isset()</error>
      <error line="88" code="50015">Argument $key is missing from the Docblock of __unset()</error>
    </parse_markers>
  </file>
  <file path="laravel/section.php" hash="abc363ebb3c7ea640e062196eccd9d2f" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Section</name>
      <full_name>\Laravel\Section</full_name>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$sections</name>
        <default>array()</default>
        <docblock line="5">
          <description>All of the captured sections.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$last</name>
        <default>array()</default>
        <docblock line="12">
          <description>The last section on which injection was started.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="34" package="Default">
        <name>start</name>
        <full_name>start</full_name>
        <docblock line="19">
          <description>Start injecting content into a section.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Start injecting into the "header" section
    Section::start('header');

    // Inject a raw string into the "header" section without buffering
    Section::start('header', '&lt;title&gt;Laravel&lt;/title&gt;');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="19" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="param" description="" type="string|\Laravel\Closure" variable="$content">
            <type by_reference="false">string</type>
            <type by_reference="false">\Laravel\Closure</type>
          </tag>
          <tag line="19" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
        <argument line="34">
          <name>$content</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="60" package="Default">
        <name>inject</name>
        <full_name>inject</full_name>
        <docblock line="46">
          <description>Inject inline content into a section.</description>
          <long-description>&lt;p&gt;This is helpful for injecting simple strings such as page titles.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Inject inline content into the "header" section
    Section::inject('header', '&lt;title&gt;Laravel&lt;/title&gt;');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="46" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="param" description="" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
        <argument line="60">
          <name>$content</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="70" package="Default">
        <name>yield_section</name>
        <full_name>yield_section</full_name>
        <docblock line="65">
          <description>Stop injecting content into a section and return its contents.</description>
          <long-description></long-description>
          <tag line="65" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="80" package="Default">
        <name>stop</name>
        <full_name>stop</full_name>
        <docblock line="75">
          <description>Stop injecting content into a section.</description>
          <long-description></long-description>
          <tag line="75" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="94" package="Default">
        <name>extend</name>
        <full_name>extend</full_name>
        <docblock line="87">
          <description>Extend the content in a given section.</description>
          <long-description></long-description>
          <tag line="87" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="param" description="" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
        <argument line="94">
          <name>$content</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="113" package="Default">
        <name>append</name>
        <full_name>append</full_name>
        <docblock line="106">
          <description>Append content to a given section.</description>
          <long-description></long-description>
          <tag line="106" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="param" description="" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
        <argument line="113">
          <name>$content</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="131" package="Default">
        <name>yield</name>
        <full_name>yield</full_name>
        <docblock line="125">
          <description>Get the string contents of a section.</description>
          <long-description></long-description>
          <tag line="125" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/section.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Section</error>
    </parse_markers>
  </file>
  <file path="laravel/file.php" hash="4b8f02eb399621da38b8917afce4f6c6" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>File</name>
      <full_name>\Laravel\File</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="11" package="Default">
        <name>exists</name>
        <full_name>exists</full_name>
        <docblock line="5">
          <description>Determine if a file exists.</description>
          <long-description></long-description>
          <tag line="5" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="5" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="11">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="31" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="16">
          <description>Get the contents of a file.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get the contents of a file
    $contents = File::get(path('app').'routes'.EXT);

    // Get the contents of a file or return a default value if it doesn't exist
    $contents = File::get(path('app').'routes'.EXT, 'Default Value');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="16" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="16" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="16" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="31">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="43" package="Default">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="36">
          <description>Write to a file.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="36" name="param" description="" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="36" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="55" package="Default">
        <name>append</name>
        <full_name>append</full_name>
        <docblock line="48">
          <description>Append to a file.</description>
          <long-description></long-description>
          <tag line="48" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="param" description="" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="55">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="66" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="60">
          <description>Delete a file.</description>
          <long-description></long-description>
          <tag line="60" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="78" package="Default">
        <name>move</name>
        <full_name>move</full_name>
        <docblock line="71">
          <description>Move a file to a new location.</description>
          <long-description></long-description>
          <tag line="71" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description="" type="string" variable="$target">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="78">
          <name>$target</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="90" package="Default">
        <name>copy</name>
        <full_name>copy</full_name>
        <docblock line="83">
          <description>Copy a file to a new location.</description>
          <long-description></long-description>
          <tag line="83" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="param" description="" type="string" variable="$target">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$target</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="101" package="Default">
        <name>extension</name>
        <full_name>extension</full_name>
        <docblock line="95">
          <description>Extract the file extension from a file path.</description>
          <long-description></long-description>
          <tag line="95" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="101">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="112" package="Default">
        <name>type</name>
        <full_name>type</full_name>
        <docblock line="106">
          <description>Get the file type of a given file.</description>
          <long-description></long-description>
          <tag line="106" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="123" package="Default">
        <name>size</name>
        <full_name>size</full_name>
        <docblock line="117">
          <description>Get the file size of a given file.</description>
          <long-description></long-description>
          <tag line="117" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="117" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="134" package="Default">
        <name>modified</name>
        <full_name>modified</full_name>
        <docblock line="128">
          <description>Get the file's last modification time.</description>
          <long-description></long-description>
          <tag line="128" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="128" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="154" package="Default">
        <name>mime</name>
        <full_name>mime</full_name>
        <docblock line="139">
          <description>Get a file MIME type by extension.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Determine the MIME type for the .tar extension
    $mime = File::mime('tar');

    // Return a default value if the MIME can't be determined
    $mime = File::mime('ext', 'application/octet-stream');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="139" name="param" description="" type="string" variable="$extension">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="param" description="" type="string" variable="$default">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$extension</name>
          <default></default>
          <type/>
        </argument>
        <argument line="154">
          <name>$default</name>
          <default>'application/octet-stream'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="180" package="Default">
        <name>is</name>
        <full_name>is</full_name>
        <docblock line="163">
          <description>Determine if a file is of a given type.</description>
          <long-description>&lt;p&gt;The Fileinfo PHP extension is used to determine the file's MIME type.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Determine if a file is a JPG image
    $jpg = File::is('jpg', 'path/to/file.jpg');

    // Determine if a file is one of a given list of types
    $image = File::is(array('jpg', 'png', 'gif'), 'path/to/file');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="163" name="param" description="" type="array|string" variable="$extensions">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="163" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="163" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="180">
          <name>$extensions</name>
          <default></default>
          <type/>
        </argument>
        <argument line="180">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="207" package="Default">
        <name>mkdir</name>
        <full_name>mkdir</full_name>
        <docblock line="200">
          <description>Create a new directory.</description>
          <long-description></long-description>
          <tag line="200" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="200" name="param" description="" type="int" variable="$chmod">
            <type by_reference="false">int</type>
          </tag>
          <tag line="200" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="207">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="207">
          <name>$chmod</name>
          <default>511</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="220" package="Default">
        <name>mvdir</name>
        <full_name>mvdir</full_name>
        <docblock line="212">
          <description>Move a directory from one location to another.</description>
          <long-description></long-description>
          <tag line="212" name="param" description="" type="string" variable="$source">
            <type by_reference="false">string</type>
          </tag>
          <tag line="212" name="param" description="" type="string" variable="$destination">
            <type by_reference="false">string</type>
          </tag>
          <tag line="212" name="param" description="" type="int" variable="$options">
            <type by_reference="false">int</type>
          </tag>
          <tag line="212" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="220">
          <name>$source</name>
          <default></default>
          <type/>
        </argument>
        <argument line="220">
          <name>$destination</name>
          <default></default>
          <type/>
        </argument>
        <argument line="220">
          <name>$options</name>
          <default>\FilesystemIterator::SKIP_DOTS</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="234" package="Default">
        <name>cpdir</name>
        <full_name>cpdir</full_name>
        <docblock line="225">
          <description>Recursively copy directory contents to another directory.</description>
          <long-description></long-description>
          <tag line="225" name="param" description="" type="string" variable="$source">
            <type by_reference="false">string</type>
          </tag>
          <tag line="225" name="param" description="" type="string" variable="$destination">
            <type by_reference="false">string</type>
          </tag>
          <tag line="225" name="param" description="" type="bool" variable="$delete">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="225" name="param" description="" type="int" variable="$options">
            <type by_reference="false">int</type>
          </tag>
          <tag line="225" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$source</name>
          <default></default>
          <type/>
        </argument>
        <argument line="234">
          <name>$destination</name>
          <default></default>
          <type/>
        </argument>
        <argument line="234">
          <name>$delete</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="234">
          <name>$options</name>
          <default>\FilesystemIterator::SKIP_DOTS</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="289" package="Default">
        <name>rmdir</name>
        <full_name>rmdir</full_name>
        <docblock line="282">
          <description>Recursively delete a directory.</description>
          <long-description></long-description>
          <tag line="282" name="param" description="" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="282" name="param" description="" type="bool" variable="$preserve">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="282" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="289">
          <name>$directory</name>
          <default></default>
          <type/>
        </argument>
        <argument line="289">
          <name>$preserve</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="320" package="Default">
        <name>cleandir</name>
        <full_name>cleandir</full_name>
        <docblock line="314">
          <description>Empty the specified directory of all files and folders.</description>
          <long-description></long-description>
          <tag line="314" name="param" description="" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="314" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="320">
          <name>$directory</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="332" package="Default">
        <name>latest</name>
        <full_name>latest</full_name>
        <docblock line="325">
          <description>Get the most recently modified file in a directory.</description>
          <long-description></long-description>
          <tag line="325" name="param" description="" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="325" name="param" description="" type="int" variable="$options">
            <type by_reference="false">int</type>
          </tag>
          <tag line="325" name="return" description="" type="\Laravel\SplFileInfo">
            <type by_reference="false">\Laravel\SplFileInfo</type>
          </tag>
        </docblock>
        <argument line="332">
          <name>$directory</name>
          <default></default>
          <type/>
        </argument>
        <argument line="332">
          <name>$options</name>
          <default>\FilesystemIterator::SKIP_DOTS</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/file.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\File</error>
    </parse_markers>
  </file>
  <file path="laravel/hash.php" hash="1acbd5bd027a890152a9bbb06df39de7" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Hash</name>
      <full_name>\Laravel\Hash</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="20" package="Default">
        <name>make</name>
        <full_name>make</full_name>
        <docblock line="5">
          <description>Hash a password using the Bcrypt hashing scheme.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a Bcrypt hash of a value
    $hash = Hash::make('secret');

    // Use a specified number of iterations when creating the hash
    $hash = Hash::make('secret', 12);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="5" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="5" name="param" description="" type="int" variable="$rounds">
            <type by_reference="false">int</type>
          </tag>
          <tag line="5" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="20">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="20">
          <name>$rounds</name>
          <default>8</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="48" package="Default">
        <name>check</name>
        <full_name>check</full_name>
        <docblock line="41">
          <description>Determine if an unhashed value matches a Bcrypt hash.</description>
          <long-description></long-description>
          <tag line="41" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="41" name="param" description="" type="string" variable="$hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="41" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="48">
          <name>$hash</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/hash.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Hash</error>
    </parse_markers>
  </file>
  <file path="laravel/str.php" hash="f78d94e784bc0d62f62a650c9ead6f62" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Str</name>
      <full_name>\Laravel\Str</full_name>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$pluralizer</name>
        <default></default>
        <docblock line="5">
          <description>The pluralizer instance.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="\Laravel\Pluralizer">
            <type by_reference="false">\Laravel\Pluralizer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$encoding</name>
        <default>null</default>
        <docblock line="12">
          <description>Cache application encoding locally to save expensive calls to Config::get().</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="24" package="Default">
        <name>encoding</name>
        <full_name>encoding</full_name>
        <docblock line="19">
          <description>Get the appliction.encoding without needing to request it from Config::get() each time.</description>
          <long-description></long-description>
          <tag line="19" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="43" package="Default">
        <name>length</name>
        <full_name>length</full_name>
        <docblock line="29">
          <description>Get the length of a string.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Get the length of a string
    $length = Str::length('Taylor Otwell');

    // Get the length of a multi-byte string
    $length = Str::length('Τάχιστη')
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="29" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="62" package="Default">
        <name>lower</name>
        <full_name>lower</full_name>
        <docblock line="48">
          <description>Convert a string to lowercase.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Convert a string to lowercase
    $lower = Str::lower('Taylor Otwell');

    // Convert a multi-byte string to lowercase
    $lower = Str::lower('Τάχιστη');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="48" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="81" package="Default">
        <name>upper</name>
        <full_name>upper</full_name>
        <docblock line="67">
          <description>Convert a string to uppercase.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Convert a string to uppercase
    $upper = Str::upper('Taylor Otwell');

    // Convert a multi-byte string to uppercase
    $upper = Str::upper('Τάχιστη');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="67" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="100" package="Default">
        <name>title</name>
        <full_name>title</full_name>
        <docblock line="86">
          <description>Convert a string to title case (ucwords equivalent).</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Convert a string to title case
    $title = Str::title('taylor otwell');

    // Convert a multi-byte string to title case
    $title = Str::title('νωθρού κυνός');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="86" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="86" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="126" package="Default">
        <name>limit</name>
        <full_name>limit</full_name>
        <docblock line="110">
          <description>Limit the number of characters in a string.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Returns "Tay..."
    echo Str::limit('Taylor Otwell', 3);

    // Limit the number of characters and append a custom ending
    echo Str::limit('Taylor Otwell', 3, '---');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="110" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="param" description="" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="110" name="param" description="" type="string" variable="$end">
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="126">
          <name>$limit</name>
          <default>100</default>
          <type/>
        </argument>
        <argument line="126">
          <name>$end</name>
          <default>'...'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="154" package="Default">
        <name>limit_exact</name>
        <full_name>limit_exact</full_name>
        <docblock line="138">
          <description>Limit the number of chracters in a string including custom ending</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Returns "Taylor..."
    echo Str::limit_exact('Taylor Otwell', 9);

    // Limit the number of characters and append a custom ending
    echo Str::limit_exact('Taylor Otwell', 9, '---');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="138" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="138" name="param" description="" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="138" name="param" description="" type="string" variable="$end">
            <type by_reference="false">string</type>
          </tag>
          <tag line="138" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="154">
          <name>$limit</name>
          <default>100</default>
          <type/>
        </argument>
        <argument line="154">
          <name>$end</name>
          <default>'...'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="179" package="Default">
        <name>words</name>
        <full_name>words</full_name>
        <docblock line="163">
          <description>Limit the number of words in a string.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Returns "This is a..."
    echo Str::words('This is a sentence.', 3);

    // Limit the number of words and append a custom ending
    echo Str::words('This is a sentence.', 3, '---');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="163" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="163" name="param" description="" type="int" variable="$words">
            <type by_reference="false">int</type>
          </tag>
          <tag line="163" name="param" description="" type="string" variable="$end">
            <type by_reference="false">string</type>
          </tag>
          <tag line="163" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="179">
          <name>$words</name>
          <default>100</default>
          <type/>
        </argument>
        <argument line="179">
          <name>$end</name>
          <default>'...'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="199" package="Default">
        <name>singular</name>
        <full_name>singular</full_name>
        <docblock line="193">
          <description>Get the singular form of the given word.</description>
          <long-description></long-description>
          <tag line="193" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="193" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="199">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="219" package="Default">
        <name>plural</name>
        <full_name>plural</full_name>
        <docblock line="204">
          <description>Get the plural form of the given word.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Returns the plural form of "child"
    $plural = Str::plural('child', 10);

    // Returns the singular form of "octocat" since count is one
    $plural = Str::plural('octocat', 1);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="204" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="204" name="param" description="" type="int" variable="$count">
            <type by_reference="false">int</type>
          </tag>
          <tag line="204" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="219">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="219">
          <name>$count</name>
          <default>2</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="229" package="Default">
        <name>pluralizer</name>
        <full_name>pluralizer</full_name>
        <docblock line="224">
          <description>Get the pluralizer instance.</description>
          <long-description></long-description>
          <tag line="224" name="return" description="" type="\Laravel\Pluralizer">
            <type by_reference="false">\Laravel\Pluralizer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="251" package="Default">
        <name>slug</name>
        <full_name>slug</full_name>
        <docblock line="236">
          <description>Generate a URL friendly "slug" from a given string.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Returns "this-is-my-blog-post"
    $slug = Str::slug('This is my blog post!');

    // Returns "this_is_my_blog_post"
    $slug = Str::slug('This is my blog post!', '_');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="236" name="param" description="" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
          <tag line="236" name="param" description="" type="string" variable="$separator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="236" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$title</name>
          <default></default>
          <type/>
        </argument>
        <argument line="251">
          <name>$separator</name>
          <default>'-'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="272" package="Default">
        <name>ascii</name>
        <full_name>ascii</full_name>
        <docblock line="264">
          <description>Convert a string to 7-bit ASCII.</description>
          <long-description>&lt;p&gt;This is helpful for converting UTF-8 strings for usage in URLs, etc.&lt;/p&gt;</long-description>
          <tag line="264" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="264" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="272">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="297" package="Default">
        <name>classify</name>
        <full_name>classify</full_name>
        <docblock line="281">
          <description>Convert a string to an underscored, camel-cased class name.</description>
          <long-description>&lt;p&gt;This method is primarily used to format task and controller names.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Returns "Task_Name"
    $class = Str::classify('task_name');

    // Returns "Taylor_Otwell"
    $class = Str::classify('taylor otwell')
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="281" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="281" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="297">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="310" package="Default">
        <name>segments</name>
        <full_name>segments</full_name>
        <docblock line="304">
          <description>Return the "URI" style segments in a given string.</description>
          <long-description></long-description>
          <tag line="304" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="304" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="310">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="330" package="Default">
        <name>random</name>
        <full_name>random</full_name>
        <docblock line="315">
          <description>Generate a random alpha or alpha-numeric string.</description>
          <long-description>&lt;p&gt;&amp;lt;&lt;/p&gt;

&lt;p&gt;pre&gt;&lt;code&gt; // Generate a 40 character random alpha-numeric string
    echo Str::random(40);&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// Generate a 16 character random alphabetic string
echo Str::random(16, 'alpha');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;lt;&lt;/p&gt;

&lt;p&gt;pre&gt;&lt;code&gt;&lt;/p&gt;</long-description>
          <tag line="315" name="param" description="" type="int" variable="$length">
            <type by_reference="false">int</type>
          </tag>
          <tag line="315" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="315" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="330">
          <name>$length</name>
          <default></default>
          <type/>
        </argument>
        <argument line="330">
          <name>$type</name>
          <default>'alnum'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="342" package="Default">
        <name>is</name>
        <full_name>is</full_name>
        <docblock line="335">
          <description>Determine if a given string matches a given pattern.</description>
          <long-description></long-description>
          <tag line="335" name="param" description="" type="string" variable="$pattern">
            <type by_reference="false">string</type>
          </tag>
          <tag line="335" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="335" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="342">
          <name>$pattern</name>
          <default></default>
          <type/>
        </argument>
        <argument line="342">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="365" package="Default">
        <name>pool</name>
        <full_name>pool</full_name>
        <docblock line="359">
          <description>Get the character pool for a given type of random string.</description>
          <long-description></long-description>
          <tag line="359" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="359" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="365">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/str.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Str</error>
    </parse_markers>
  </file>
  <file path="laravel/redis.php" hash="3e587b7ed3b537789870083b4a8e9b81" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Redis</name>
      <full_name>\Laravel\Redis</full_name>
      <property final="false" static="false" visibility="protected" line="10" namespace="Laravel" package="Default">
        <name>$host</name>
        <default></default>
        <docblock line="5">
          <description>The address for the Redis host.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="17" namespace="Laravel" package="Default">
        <name>$port</name>
        <default></default>
        <docblock line="12">
          <description>The port on which Redis can be accessed on the host.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="Laravel" package="Default">
        <name>$database</name>
        <default></default>
        <docblock line="19">
          <description>The database number the connection selects on load.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="Laravel" package="Default">
        <name>$connection</name>
        <default></default>
        <docblock line="26">
          <description>The connection to the Redis database.</description>
          <long-description></long-description>
          <tag line="26" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="38" namespace="Laravel" package="Default">
        <name>$databases</name>
        <default>array()</default>
        <docblock line="33">
          <description>The active Redis database instances.</description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="48" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="40">
          <description>Create a new Redis connection instance.</description>
          <long-description></long-description>
          <tag line="40" name="param" description="" type="string" variable="$host">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="param" description="" type="string" variable="$port">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="param" description="" type="int" variable="$database">
            <type by_reference="false">int</type>
          </tag>
          <tag line="40" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$host</name>
          <default></default>
          <type/>
        </argument>
        <argument line="48">
          <name>$port</name>
          <default></default>
          <type/>
        </argument>
        <argument line="48">
          <name>$database</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="71" package="Default">
        <name>db</name>
        <full_name>db</full_name>
        <docblock line="55">
          <description>Get a Redis database connection instance.</description>
          <long-description>&lt;p&gt;The given name should correspond to a Redis database in the configuration file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Get the default Redis database instance
    $redis = Redis::db();

    // Get a specified Redis database instance
    $reids = Redis::db('redis_2');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="55" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="return" description="" type="\Laravel\Redis">
            <type by_reference="false">\Laravel\Redis</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$name</name>
          <default>'default'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="103" package="Default">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="88">
          <description>Execute a command against the Redis database.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Execute the GET command for the "name" key
    $name = Redis::db()-&gt;run('get', array('name'));

    // Execute the LRANGE command for the "list" key
    $list = Redis::db()-&gt;run('lrange', array(0, 5));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="88" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="88" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="103">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="118" package="Default">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="112">
          <description>Parse and return the response from the Redis database.</description>
          <long-description></long-description>
          <tag line="112" name="param" description="" type="string" variable="$response">
            <type by_reference="false">string</type>
          </tag>
          <tag line="112" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$response</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="145" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="140">
          <description>Establish the connection to the Redis database.</description>
          <long-description></long-description>
          <tag line="140" name="return" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="179" package="Default">
        <name>command</name>
        <full_name>command</full_name>
        <docblock line="161">
          <description>Build the Redis command based from a given method and parameters.</description>
          <long-description>&lt;p&gt;Redis protocol states that a command should conform to the following format:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;*&amp;lt;number of arguments&amp;gt; CR LF
$&amp;lt;number of bytes of argument 1&amp;gt; CR LF
&amp;lt;argument data&amp;gt; CR LF
...
$&amp;lt;number of bytes of argument N&amp;gt; CR LF
&amp;lt;argument data&amp;gt; CR LF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;More information regarding the Redis protocol: http://redis.io/topics/protocol&lt;/p&gt;</long-description>
          <tag line="161" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="161" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="161" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="179">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="201" package="Default">
        <name>inline</name>
        <full_name>inline</full_name>
        <docblock line="195">
          <description>Parse and handle an inline response from the Redis database.</description>
          <long-description></long-description>
          <tag line="195" name="param" description="" type="string" variable="$response">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$response</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="212" package="Default">
        <name>bulk</name>
        <full_name>bulk</full_name>
        <docblock line="206">
          <description>Parse and handle a bulk response from the Redis database.</description>
          <long-description></long-description>
          <tag line="206" name="param" description="" type="string" variable="$head">
            <type by_reference="false">string</type>
          </tag>
          <tag line="206" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$head</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Laravel" line="248" package="Default">
        <name>multibulk</name>
        <full_name>multibulk</full_name>
        <docblock line="242">
          <description>Parse and handle a multi-bulk reply from the Redis database.</description>
          <long-description></long-description>
          <tag line="242" name="param" description="" type="string" variable="$head">
            <type by_reference="false">string</type>
          </tag>
          <tag line="242" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="248">
          <name>$head</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="268" package="Default">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="265">
          <description>Dynamically make calls to the Redis database.</description>
          <long-description></long-description>
        </docblock>
        <argument line="268">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="268">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="276" package="Default">
        <name>__callStatic</name>
        <full_name>__callStatic</full_name>
        <docblock line="273">
          <description>Dynamically pass static method calls to the Redis instance.</description>
          <long-description></long-description>
        </docblock>
        <argument line="276">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="276">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Laravel" line="286" package="Default">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="281">
          <description>Close the connection to the Redis database.</description>
          <long-description></long-description>
          <tag line="281" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/redis.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Redis</error>
      <error line="265" code="50015">Argument $method is missing from the Docblock of __call()</error>
      <error line="265" code="50015">Argument $parameters is missing from the Docblock of __call()</error>
      <error line="273" code="50015">Argument $method is missing from the Docblock of __callStatic()</error>
      <error line="273" code="50015">Argument $parameters is missing from the Docblock of __callStatic()</error>
    </parse_markers>
  </file>
  <file path="laravel/laravel.php" hash="4f4b47631288ad28ef3abfe976a582ff" package="Default">
    <include line="17" type="Require" package="Default">
      <name>core.php</name>
    </include>
    <include line="32" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="40" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="48" type="Require Once" package="Default">
      <name/>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/laravel.php</error>
    </parse_markers>
  </file>
  <file path="laravel/form.php" hash="93f2193bad31796fc26bef5e0dff7344" package="Default">
    <class final="false" abstract="false" namespace="Laravel" line="3" package="Default">
      <extends/>
      <name>Form</name>
      <full_name>\Laravel\Form</full_name>
      <property final="false" static="true" visibility="public" line="10" namespace="Laravel" package="Default">
        <name>$labels</name>
        <default>array()</default>
        <docblock line="5">
          <description>All of the label names that have been created.</description>
          <long-description></long-description>
          <tag line="5" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="17" namespace="Laravel" package="Default">
        <name>$macros</name>
        <default>array()</default>
        <docblock line="12">
          <description>The registered custom macros.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="26" package="Default">
        <name>macro</name>
        <full_name>macro</full_name>
        <docblock line="19">
          <description>Registers a custom macro.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="param" description="" type="\Laravel\Closure" variable="$macro">
            <type by_reference="false">\Laravel\Closure</type>
          </tag>
          <tag line="19" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="26">
          <name>$macro</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="54" package="Default">
        <name>open</name>
        <full_name>open</full_name>
        <docblock line="31">
          <description>Open a HTML form.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Open a "POST" form to the current request URI
    echo Form::open();

    // Open a "POST" form to a given URI
    echo Form::open('user/profile');

    // Open a "PUT" form to a given URI
    echo Form::open('user/profile', 'put');

    // Open a form that has HTML attributes
    echo Form::open('user/profile', 'post', array('class' =&gt; 'profile'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="31" name="param" description="" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="31" name="param" description="" type="bool" variable="$https">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="31" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$action</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="54">
          <name>$method</name>
          <default>'POST'</default>
          <type/>
        </argument>
        <argument line="54">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="54">
          <name>$https</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="89" package="Default">
        <name>method</name>
        <full_name>method</full_name>
        <docblock line="83">
          <description>Determine the appropriate request method to use for a form.</description>
          <long-description></long-description>
          <tag line="83" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="103" package="Default">
        <name>action</name>
        <full_name>action</full_name>
        <docblock line="94">
          <description>Determine the appropriate action parameter to use for a form.</description>
          <long-description>&lt;p&gt;If no action is specified, the current request URI will be used.&lt;/p&gt;</long-description>
          <tag line="94" name="param" description="" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="param" description="" type="bool" variable="$https">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="94" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
        <argument line="103">
          <name>$https</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="118" package="Default">
        <name>open_secure</name>
        <full_name>open_secure</full_name>
        <docblock line="110">
          <description>Open a HTML form with a HTTPS action URI.</description>
          <long-description></long-description>
          <tag line="110" name="param" description="" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="110" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$action</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="118">
          <name>$method</name>
          <default>'POST'</default>
          <type/>
        </argument>
        <argument line="118">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="132" package="Default">
        <name>open_for_files</name>
        <full_name>open_for_files</full_name>
        <docblock line="123">
          <description>Open a HTML form that accepts file uploads.</description>
          <long-description></long-description>
          <tag line="123" name="param" description="" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="123" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="123" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="123" name="param" description="" type="bool" variable="$https">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="123" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$action</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="132">
          <name>$method</name>
          <default>'POST'</default>
          <type/>
        </argument>
        <argument line="132">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="132">
          <name>$https</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="147" package="Default">
        <name>open_secure_for_files</name>
        <full_name>open_secure_for_files</full_name>
        <docblock line="139">
          <description>Open a HTML form that accepts file uploads with a HTTPS action URI.</description>
          <long-description></long-description>
          <tag line="139" name="param" description="" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="139" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$action</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="147">
          <name>$method</name>
          <default>'POST'</default>
          <type/>
        </argument>
        <argument line="147">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="157" package="Default">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="152">
          <description>Close a HTML form.</description>
          <long-description></long-description>
          <tag line="152" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="167" package="Default">
        <name>token</name>
        <full_name>token</full_name>
        <docblock line="162">
          <description>Generate a hidden field containing the current CSRF token.</description>
          <long-description></long-description>
          <tag line="162" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="185" package="Default">
        <name>label</name>
        <full_name>label</full_name>
        <docblock line="172">
          <description>Create a HTML label element.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a label for the "email" input element
    echo Form::label('email', 'E-Mail Address');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="172" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="172" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="172" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="172" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="185">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="185">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="213" package="Default">
        <name>input</name>
        <full_name>input</full_name>
        <docblock line="196">
          <description>Create a HTML input element.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a "text" input element named "email"
    echo Form::input('text', 'email');

    // Create an input element with a specified default value
    echo Form::input('text', 'email', 'example@gmail.com');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="196" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="196" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="196" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="196" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="196" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="213">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="213">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="213">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="213">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="232" package="Default">
        <name>text</name>
        <full_name>text</full_name>
        <docblock line="224">
          <description>Create a HTML text input element.</description>
          <long-description></long-description>
          <tag line="224" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="224" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="224" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="224" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="232">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="232">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="232">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="244" package="Default">
        <name>password</name>
        <full_name>password</full_name>
        <docblock line="237">
          <description>Create a HTML password input element.</description>
          <long-description></long-description>
          <tag line="237" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="237" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="237" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="244">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="244">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="257" package="Default">
        <name>hidden</name>
        <full_name>hidden</full_name>
        <docblock line="249">
          <description>Create a HTML hidden input element.</description>
          <long-description></long-description>
          <tag line="249" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="249" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="249" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="249" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="257">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="257">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="257">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="270" package="Default">
        <name>search</name>
        <full_name>search</full_name>
        <docblock line="262">
          <description>Create a HTML search input element.</description>
          <long-description></long-description>
          <tag line="262" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="262" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="262" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="262" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="270">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="270">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="270">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="283" package="Default">
        <name>email</name>
        <full_name>email</full_name>
        <docblock line="275">
          <description>Create a HTML email input element.</description>
          <long-description></long-description>
          <tag line="275" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="275" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="283">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="283">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="283">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="296" package="Default">
        <name>telephone</name>
        <full_name>telephone</full_name>
        <docblock line="288">
          <description>Create a HTML telephone input element.</description>
          <long-description></long-description>
          <tag line="288" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="288" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="288" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="288" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="296">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="296">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="296">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="309" package="Default">
        <name>url</name>
        <full_name>url</full_name>
        <docblock line="301">
          <description>Create a HTML URL input element.</description>
          <long-description></long-description>
          <tag line="301" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="301" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="301" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="301" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="309">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="309">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="309">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="322" package="Default">
        <name>number</name>
        <full_name>number</full_name>
        <docblock line="314">
          <description>Create a HTML number input element.</description>
          <long-description></long-description>
          <tag line="314" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="314" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="314" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="314" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="322">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="322">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="322">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="335" package="Default">
        <name>date</name>
        <full_name>date</full_name>
        <docblock line="327">
          <description>Create a HTML date input element.</description>
          <long-description></long-description>
          <tag line="327" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="327" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="327" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="327" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="335">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="335">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="335">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="347" package="Default">
        <name>file</name>
        <full_name>file</full_name>
        <docblock line="340">
          <description>Create a HTML file input element.</description>
          <long-description></long-description>
          <tag line="340" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="340" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="340" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="347">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="347">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="360" package="Default">
        <name>textarea</name>
        <full_name>textarea</full_name>
        <docblock line="352">
          <description>Create a HTML textarea element.</description>
          <long-description></long-description>
          <tag line="352" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="352" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="352" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="352" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="360">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="360">
          <name>$value</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="360">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="390" package="Default">
        <name>select</name>
        <full_name>select</full_name>
        <docblock line="373">
          <description>Create a HTML select element.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a HTML select element filled with options
    echo Form::select('sizes', array('S' =&gt; 'Small', 'L' =&gt; 'Large'));

    // Create a select element with a default selected value
    echo Form::select('sizes', array('S' =&gt; 'Small', 'L' =&gt; 'Large'), 'L');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="373" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="373" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="373" name="param" description="" type="string" variable="$selected">
            <type by_reference="false">string</type>
          </tag>
          <tag line="373" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="373" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="390">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="390">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="390">
          <name>$selected</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="390">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="421" package="Default">
        <name>optgroup</name>
        <full_name>optgroup</full_name>
        <docblock line="413">
          <description>Create a HTML select element optgroup.</description>
          <long-description></long-description>
          <tag line="413" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="413" name="param" description="" type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="413" name="param" description="" type="string" variable="$selected">
            <type by_reference="false">string</type>
          </tag>
          <tag line="413" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="421">
          <name>$options</name>
          <default></default>
          <type/>
        </argument>
        <argument line="421">
          <name>$label</name>
          <default></default>
          <type/>
        </argument>
        <argument line="421">
          <name>$selected</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="441" package="Default">
        <name>option</name>
        <full_name>option</full_name>
        <docblock line="433">
          <description>Create a HTML select element option.</description>
          <long-description></long-description>
          <tag line="433" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="433" name="param" description="" type="string" variable="$display">
            <type by_reference="false">string</type>
          </tag>
          <tag line="433" name="param" description="" type="string" variable="$selected">
            <type by_reference="false">string</type>
          </tag>
          <tag line="433" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="441">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="441">
          <name>$display</name>
          <default></default>
          <type/>
        </argument>
        <argument line="441">
          <name>$selected</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="474" package="Default">
        <name>checkbox</name>
        <full_name>checkbox</full_name>
        <docblock line="457">
          <description>Create a HTML checkbox input element.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a checkbox element
    echo Form::checkbox('terms', 'yes');

    // Create a checkbox that is selected by default
    echo Form::checkbox('terms', 'yes', true);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="457" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="457" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="457" name="param" description="" type="bool" variable="$checked">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="457" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="457" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="474">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="474">
          <name>$value</name>
          <default>1</default>
          <type/>
        </argument>
        <argument line="474">
          <name>$checked</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="474">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="496" package="Default">
        <name>radio</name>
        <full_name>radio</full_name>
        <docblock line="479">
          <description>Create a HTML radio button input element.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create a radio button element
    echo Form::radio('drinks', 'Milk');

    // Create a radio button that is selected by default
    echo Form::radio('drinks', 'Milk', true);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="479" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="479" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="479" name="param" description="" type="bool" variable="$checked">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="479" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="479" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="496">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="496">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="496">
          <name>$checked</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="496">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="513" package="Default">
        <name>checkable</name>
        <full_name>checkable</full_name>
        <docblock line="503">
          <description>Create a checkable input element.</description>
          <long-description></long-description>
          <tag line="503" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="503" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="503" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="503" name="param" description="" type="bool" variable="$checked">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="503" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="503" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="513">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="513">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="513">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="513">
          <name>$checked</name>
          <default></default>
          <type/>
        </argument>
        <argument line="513">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="529" package="Default">
        <name>submit</name>
        <full_name>submit</full_name>
        <docblock line="522">
          <description>Create a HTML submit input element.</description>
          <long-description></long-description>
          <tag line="522" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="522" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="522" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="529">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="529">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="541" package="Default">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="534">
          <description>Create a HTML reset input element.</description>
          <long-description></long-description>
          <tag line="534" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="534" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="534" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="541">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="541">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="559" package="Default">
        <name>image</name>
        <full_name>image</full_name>
        <docblock line="546">
          <description>Create a HTML image input element.</description>
          <long-description>&lt;pre&gt;&lt;code&gt; // Create an image input element
    echo Form::image('img/submit.png');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="546" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="546" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="546" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="546" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="559">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="559">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="559">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="573" package="Default">
        <name>button</name>
        <full_name>button</full_name>
        <docblock line="566">
          <description>Create a HTML button element.</description>
          <long-description></long-description>
          <tag line="566" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="566" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="566" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="573">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="573">
          <name>$attributes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Laravel" line="585" package="Default">
        <name>id</name>
        <full_name>id</full_name>
        <docblock line="578">
          <description>Determine the ID attribute for a form element.</description>
          <long-description></long-description>
          <tag line="578" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="578" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="578" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="585">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="585">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Laravel" line="608" package="Default">
        <name>__callStatic</name>
        <full_name>__callStatic</full_name>
        <docblock line="601">
          <description>Dynamically handle calls to custom macros.</description>
          <long-description></long-description>
          <tag line="601" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="601" name="param" description="" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="601" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="608">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="608">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file laravel/form.php</error>
      <error line="3" code="50000">No DocBlock was found for \Laravel\Form</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="Language" full_name="Language"/>
  <package name="Laravel" full_name="Laravel"/>
  <package name="bob" full_name="bob"/>
  <namespace name="Dashboard" full_name="Dashboard"/>
  <namespace name="Laravel" full_name="Laravel">
    <namespace name="Auth" full_name="Laravel\Auth">
      <namespace name="Drivers" full_name="Laravel\Auth\Drivers"/>
    </namespace>
    <namespace name="CLI" full_name="Laravel\CLI">
      <namespace name="Tasks" full_name="Laravel\CLI\Tasks">
        <namespace name="Bundle" full_name="Laravel\CLI\Tasks\Bundle">
          <namespace name="Providers" full_name="Laravel\CLI\Tasks\Bundle\Providers"/>
        </namespace>
        <namespace name="Migrate" full_name="Laravel\CLI\Tasks\Migrate"/>
        <namespace name="Session" full_name="Laravel\CLI\Tasks\Session"/>
        <namespace name="Test" full_name="Laravel\CLI\Tasks\Test"/>
      </namespace>
    </namespace>
    <namespace name="Cache" full_name="Laravel\Cache">
      <namespace name="Drivers" full_name="Laravel\Cache\Drivers"/>
    </namespace>
    <namespace name="Database" full_name="Laravel\Database">
      <namespace name="Connectors" full_name="Laravel\Database\Connectors"/>
      <namespace name="Eloquent" full_name="Laravel\Database\Eloquent">
        <namespace name="Relationships" full_name="Laravel\Database\Eloquent\Relationships"/>
      </namespace>
      <namespace name="Query" full_name="Laravel\Database\Query">
        <namespace name="Grammars" full_name="Laravel\Database\Query\Grammars"/>
      </namespace>
      <namespace name="Schema" full_name="Laravel\Database\Schema">
        <namespace name="Grammars" full_name="Laravel\Database\Schema\Grammars"/>
      </namespace>
    </namespace>
    <namespace name="Profiling" full_name="Laravel\Profiling"/>
    <namespace name="Routing" full_name="Laravel\Routing"/>
    <namespace name="Session" full_name="Laravel\Session">
      <namespace name="Drivers" full_name="Laravel\Session\Drivers"/>
    </namespace>
  </namespace>
  <namespace name="Multup" full_name="Multup"/>
  <namespace name="Repositories" full_name="Repositories"/>
  <namespace name="Symfony" full_name="Symfony">
    <namespace name="Component" full_name="Symfony\Component">
      <namespace name="Console" full_name="Symfony\Component\Console">
        <namespace name="Command" full_name="Symfony\Component\Console\Command"/>
        <namespace name="Formatter" full_name="Symfony\Component\Console\Formatter"/>
        <namespace name="Helper" full_name="Symfony\Component\Console\Helper"/>
        <namespace name="Input" full_name="Symfony\Component\Console\Input"/>
        <namespace name="Output" full_name="Symfony\Component\Console\Output"/>
        <namespace name="Tester" full_name="Symfony\Component\Console\Tester"/>
      </namespace>
      <namespace name="HttpFoundation" full_name="Symfony\Component\HttpFoundation">
        <namespace name="File" full_name="Symfony\Component\HttpFoundation\File">
          <namespace name="Exception" full_name="Symfony\Component\HttpFoundation\File\Exception"/>
          <namespace name="MimeType" full_name="Symfony\Component\HttpFoundation\File\MimeType"/>
        </namespace>
        <namespace name="Session" full_name="Symfony\Component\HttpFoundation\Session">
          <namespace name="Attribute" full_name="Symfony\Component\HttpFoundation\Session\Attribute"/>
          <namespace name="Flash" full_name="Symfony\Component\HttpFoundation\Session\Flash"/>
          <namespace name="Storage" full_name="Symfony\Component\HttpFoundation\Session\Storage">
            <namespace name="Handler" full_name="Symfony\Component\HttpFoundation\Session\Storage\Handler"/>
            <namespace name="Proxy" full_name="Symfony\Component\HttpFoundation\Session\Storage\Proxy"/>
          </namespace>
        </namespace>
      </namespace>
    </namespace>
  </namespace>
  <namespace name="global" full_name="global"/>
  <marker count="0">todo</marker>
  <marker count="5">fixme</marker>
  <deprecated count="9"/>
</project>
